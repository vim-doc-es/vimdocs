./" vim-doc-es https://www.assembla.com/wiki/show/vim-doc-es 
./"
./" Copyright (C) 2009 
./" This file is distributed under the same license as the Vim 7.3 package.
./"
./" Translators credits:
./"   - Initial translation
./"       Pedro Alejandro López-Valencia <vorbote@users.sf.net>, 2009-2011
./"
./"   - Updates
./"       TRADUCTOR <CORREO>, AÑO 
./"
.TH VIM 1 "Abril 11 del 2006"
.SH NOMBRE
.PP
vim \- Vi IMproved (mejorado), un editor de texto para programadores.
.SH SINOPSIS
.PP
.B vim
.BI "[" opciones "] [" "file ..." "]"
.PP
.B vim
.BI "[" opciones "] " \-
.PP
.B vim
.BI "[" opciones "] " "\-t " marca
.PP
.B vim
.BI "[" opciones "] " "\-q " "[" archivo de errores "]"
.PP
.B ex
.PP
.B view
.PP
.B gvim
.B gview
.B evim
.B eview
.PP
.B rvim
.B rview
.B rgvim
.B rgview
.SH DESCRIPCIÓN
.B Vim
Es un editor compatible con Vi.
Puede usarse para editar toda clase de texto simple y
es especialmente útil para editar programas.
.PP
Hay muchas mejoras sobre Vi: deshacer de multinivel,
ventanas y búferes múltiples, resaltado de sintáxis,
edición de la línea de comandos, completado de nombres
de archivo, ayuda en línea, selección visual, etc.
Véa «:help vi_diff.txt» para un resumen de las diferencias
entre
.B Vim
y
.BR Vi .
.PP
Al ejecutar
.B Vim
hay gran cantidad de ayuda disponible del sistema de ayuda
en línea, con el comando «:help».
Véa la sección AYUDA EN LÍNEA más abajo.
.PP
Lo más común es iniciar
.B Vim
para editar un solo archivo con el comando
.br
.EX
vim «archivo»
.EE
.PP
Generalizando,
.B Vim
se inicia con el comando:
.br
.EX
vim [opciones] [lista de archivos]
.EE
.PP
Si falta la lista de archivos, el editor se iniciará con un búfer vacio.
If the filelist is missing, the editor will start with an empty buffer.
Otherwise exactly one out of the following four may be used to choose one or
more files to be edited.
.TP 12
archivo ...
Una lista de archivos.
El primero será el archivo activo y será leido dentro del búfer.
La posición del cursor será la primera línea del búfer.
Para acceder a los otros archivos se usa el comando «:next»,
y para editar un archivo cuyo nombre empieza con un guión, se
precede la lista de archivos con «\-\-»
.TP
\-
El archivo a editar se leerá de la entrada estándar (stdin). Los comandos
se leen del error estándar (stderr) el cual deberá ser una tty.
.TP
\-t {etiqueta}
El archivo a editar y la posición inicial del cursor depende de una
«etiqueta», una forma de marca de «goto».
La {etiqueta} se busca en el archvo de etiquetas, el archivo asociado
se convierte en el archivo activo y se ejecuta el comando correspondiente.
En general, esto se usa para programas en C, en cuyo caso {etiqueta}
puede ser un nombre de función.
El efecto es que el archivo conteniendo esa funcipon se convierte en
el archivo activo y el cursor se posiciona en el comienzo de la
función.
Véase «:help tag\-commands».
.TP
\-q [archivo de errores]
Iniciar en modo «quickFix».
Se lee el archivo [archivo de errores] y se muestra el primer error.
Si se omite el [archivo de errores], el nombre del archivo se obtiene
de la opción «errorfile» cuyo valor por defecto es «AztecC.Err» en el
Amiga y «errors.err» en otros sistemas.
Se puede saltar a otros errores con el comando «:cn».
Véase «:help quickfix».
.PP
.B Vim
se comporta diferentemente dependiendo del nombre de comando con el cual
se invoca, la imágen ejecutable puede ser el mismo archivo.
.TP 10
.C vim
La forma «normal» en la que todo es por defecto.
.TP
.B ex
Iniciar en modo Ex.
Para ir al modo normal, se usa el comando «:vi».
Tambiíen puede usarse el argumento «\-e».
.TP
view
Iniciar en modo de solo lectura.
Usted no podrá escribir archivos.
Tambiíen puede usarse el argumento «\-R».
.TP
gvim gview
La versión gráfica (GUI).
Inicia una nueva ventana.
Tambiíen puede usarse el argumento «\-g».
.TP
evim eview
La versión GUI in modo fácil.
Inicia una nueva ventana.
Tambiíen puede usarse el argumento «\-y».
.TP
rvim rview rgvim rgview
Como las opciones arriba, pero con restricciones.
No será posible interactuar con el procesador de comandos
o suspender a
.B Vim.
Tambiíen puede usarse el argumento «\-Z».
.SH OPCIONES
Las opciones pueden darse en cualquier orden, antes o despues
de los nombres de archivo.
Las opciones sin argumento pueden combinarse después de un
guión único.
.TP 12
+[num]
El cursor será puesto en la línea «num» del primer nombre de
archivo en la línea de comandos.
Si no se especifica «num», el cursor será puesto en la última
línea.
.TP
+/{pat}
El cursor será puesto en la primera ocurrencia de {pat}.
Vea «:help search\-pattern» para los posibles patrones
de búsqueda.
.TP
+{comando}
.TP
\-c {comando}
Se ejecutará {command} después de leer el primer archivo mencionado
en la línea de comandos.
{comando} se interpreta cono un comando Ex.
Si el {comando} contiene espacios, debe encerrarse en comillas dobles
(esto depende del procesador de comandos en uso).
Ejemplo: Vim "+set si" principal.c
.br
Nota: Usted puede usar hasta 10 comandos «+» o «\-c».
.TP
\-S {file}
{file} will be sourced after the first file has been read.
This is equivalent to \-c "source {file}".
{file} cannot start with '\-'.
If {file} is omitted "Session.vim" is used (only works when \-S is the last
argument).
.TP
\-\-cmd {command}
Like using "\-c", but the command is executed just before
processing any vimrc file.
You can use up to 10 of these commands, independently from "\-c" commands.
.TP
\-A
If
.B Vim
has been compiled with ARABIC support for editing right-to-left
oriented files and Arabic keyboard mapping, this option starts
.B Vim
in Arabic mode, i.e. 'arabic' is set.  Otherwise an error
message is given and
.B Vim
aborts.
.TP
\-b
Binary mode.
A few options will be set that makes it possible to edit a binary or
executable file.
.TP
\-C
Compatible.  Set the 'compatible' option.
This will make
.B Vim
behave mostly like Vi, even though a .vimrc file exists.
.TP
\-d
Start in diff mode.
There should be two, three or four file name arguments.
.B Vim
will open all the files and show differences between them.
Works like vimdiff(1).
.TP
\-d {device}
Open {device} for use as a terminal.
Only on the Amiga.
Example:
"\-d con:20/30/600/150".
.TP
\-D
Debugging.  Go to debugging mode when executing the first command from a
script.
.TP
\-e
Start
.B Vim
in Ex mode, just like the executable was called "ex".
.TP
\-E
Start
.B Vim
in improved Ex mode, just like the executable was called "exim".
.TP
\-f
Foreground.  For the GUI version,
.B Vim
will not fork and detach from the shell it was started in.
On the Amiga,
.B Vim
is not restarted to open a new window.
This option should be used when
.B Vim
is executed by a program that will wait for the edit
session to finish (e.g. mail).
On the Amiga the ":sh" and ":!" commands will not work.
.TP
\-\-nofork
Foreground.  For the GUI version,
.B Vim
will not fork and detach from the shell it was started in.
.TP
\-F
If
.B Vim
has been compiled with FKMAP support for editing right-to-left
oriented files and Farsi keyboard mapping, this option starts
.B Vim
in Farsi mode, i.e. 'fkmap' and 'rightleft' are set.
Otherwise an error message is given and
.B Vim
aborts.
.TP
\-g
If
.B Vim
has been compiled with GUI support, this option enables the GUI.
If no GUI support was compiled in, an error message is given and
.B Vim
aborts.
.TP
\-h
Give a bit of help about the command line arguments and options.
After this
.B Vim
exits.
.TP
\-H
If
.B Vim
has been compiled with RIGHTLEFT support for editing right-to-left
oriented files and Hebrew keyboard mapping, this option starts
.B Vim
in Hebrew mode, i.e. 'hkmap' and 'rightleft' are set.
Otherwise an error message is given and
.B Vim
aborts.
.TP
\-i {viminfo}
When using the viminfo file is enabled, this option sets the filename to use,
instead of the default "~/.viminfo".
This can also be used to skip the use of the .viminfo file, by giving the name
"NONE".
.TP
\-L
Same as \-r.
.TP
\-l
Lisp mode.
Sets the 'lisp' and 'showmatch' options on.
.TP
\-m
Modifying files is disabled.
Resets the 'write' option.
You can still modify the buffer, but writing a file is not possible.
.TP
\-M
Modifications not allowed.  The 'modifiable' and 'write' options will be unset,
so that changes are not allowed and files can not be written.  Note that these
options can be set to enable making modifications.
.TP
\-N
No-compatible mode.  Reset the 'compatible' option.
This will make
.B Vim
behave a bit better, but less Vi compatible, even though a .vimrc file does
not exist.
.TP
\-n
No swap file will be used.
Recovery after a crash will be impossible.
Handy if you want to edit a file on a very slow medium (e.g. floppy).
Can also be done with ":set uc=0".
Can be undone with ":set uc=200".
.TP
\-nb
Become an editor server for NetBeans.  See the docs for details.
.TP
\-o[N]
Open N windows stacked.
When N is omitted, open one window for each file.
.TP
\-O[N]
Open N windows side by side.
When N is omitted, open one window for each file.
.TP
\-p[N]
Open N tab pages.
When N is omitted, open one tab page for each file.
.TP
\-R
Read-only mode.
The 'readonly' option will be set.
You can still edit the buffer, but will be prevented from accidently
overwriting a file.
If you do want to overwrite a file, add an exclamation mark to the Ex command,
as in ":w!".
The \-R option also implies the \-n option (see below).
The 'readonly' option can be reset with ":set noro".
See ":help 'readonly'".
.TP
\-r
List swap files, with information about using them for recovery.
.TP
\-r {file}
Recovery mode.
The swap file is used to recover a crashed editing session.
The swap file is a file with the same filename as the text file with ".swp"
appended.
See ":help recovery".
.TP
\-s
Silent mode.  Only when started as "Ex" or when the "\-e" option was given
before the "\-s" option.
.TP
\-s {scriptin}
The script file {scriptin} is read.
The characters in the file are interpreted as if you had typed them.
The same can be done with the command ":source! {scriptin}".
If the end of the file is reached before the editor exits, further characters
are read from the keyboard.
.TP
\-T {terminal}
Tells
.B Vim
the name of the terminal you are using.
Only required when the automatic way doesn't work.
Should be a terminal known
to
.B Vim
(builtin) or defined in the termcap or terminfo file.
.TP
\-u {vimrc}
Use the commands in the file {vimrc} for initializations.
All the other initializations are skipped.
Use this to edit a special kind of files.
It can also be used to skip all initializations by giving the name "NONE".
See ":help initialization" within vim for more details.
.TP
\-U {gvimrc}
Use the commands in the file {gvimrc} for GUI initializations.
All the other GUI initializations are skipped.
It can also be used to skip all GUI initializations by giving the name "NONE".
See ":help gui\-init" within vim for more details.
.TP
\-V[N]
Verbose.  Give messages about which files are sourced and for reading and
writing a viminfo file.  The optional number N is the value for 'verbose'.
Default is 10.
.TP
\-v
Start
.B Vim
in Vi mode, just like the executable was called "vi".  This only has effect
when the executable is called "ex".
.TP
\-w {scriptout}
All the characters that you type are recorded in the file
{scriptout}, until you exit
.B Vim.
This is useful if you want to create a script file to be used with "vim \-s" or
":source!".
If the {scriptout} file exists, characters are appended.
.TP
\-W {scriptout}
Like \-w, but an existing file is overwritten.
.TP
\-x
Use encryption when writing files.  Will prompt for a crypt key.
.TP
\-X
Don't connect to the X server.  Shortens startup time in a terminal, but the
window title and clipboard will not be used.
.TP
\-y
Start
.B Vim
in easy mode, just like the executable was called "evim" or "eview".
Makes
.B Vim
behave like a click-and-type editor.
.TP
\-Z
Restricted mode.  Works like the executable starts with "r".
.TP
\-\-
Denotes the end of the options.
Arguments after this will be handled as a file name.
This can be used to edit a filename that starts with a '\-'.
.TP
\-\-echo\-wid
GTK GUI only: Echo the Window ID on stdout.
.TP
\-\-help
Give a help message and exit, just like "\-h".
.TP
\-\-literal
Take file name arguments literally, do not expand wildcards.  This has no
effect on Unix where the shell expands wildcards.
.TP
\-\-noplugin
Skip loading plugins.  Implied by \-u NONE.
.TP
\-\-remote
Connect to a Vim server and make it edit the files given in the rest of the
arguments.  If no server is found a warning is given and the files are edited
in the current Vim.
.TP
\-\-remote\-expr {expr}
Connect to a Vim server, evaluate {expr} in it and print the result on stdout.
.TP
\-\-remote\-send {keys}
Connect to a Vim server and send {keys} to it.
.TP
\-\-remote\-silent
As \-\-remote, but without the warning when no server is found.
.TP
\-\-remote\-wait
As \-\-remote, but Vim does not exit until the files have been edited.
.TP
\-\-remote\-wait\-silent
As \-\-remote\-wait, but without the warning when no server is found.
.TP
\-\-serverlist
List the names of all Vim servers that can be found.
.TP
\-\-servername {name}
Use {name} as the server name.  Used for the current Vim, unless used with a
\-\-remote argument, then it's the name of the server to connect to.
.TP
\-\-socketid {id}
GTK GUI only: Use the GtkPlug mechanism to run gvim in another window.
.TP
\-\-version
Print version information and exit.
.SH AYUDA EN LÍNEA
Type ":help" in
.B Vim
to get started.
Type ":help subject" to get help on a specific subject.
For example: ":help ZZ" to get help for the "ZZ" command.
Use <Tab> and CTRL-D to complete subjects (":help cmdline\-completion").
Tags are present to jump from one place to another (sort of hypertext links,
see ":help").
All documentation files can be viewed in this way, for example
":help syntax.txt".
.SH ARCHIVOS
.TP 15
/usr/share/vim/vim72/doc/*.txt
The
.B Vim
documentation files.
Use ":help doc\-file\-list" to get the complete list.
.TP
/usr/share/vim/vim72/doc/tags
The tags file used for finding information in the documentation files.
.TP
/usr/share/vim/vim72/syntax/syntax.vim
System wide syntax initializations.
.TP
/usr/share/vim/vim72/syntax/*.vim
Syntax files for various languages.
.TP
/usr/share/vim/vimrc
System wide
.B Vim
initializations.
.TP
~/.vimrc
Your personal
.B Vim
initializations.
.TP
/usr/share/vim/gvimrc
System wide gvim initializations.
.TP
~/.gvimrc
Your personal gvim initializations.
.TP
/usr/share/vim/vim72/optwin.vim
Script used for the ":options" command, a nice way to view and set options.
.TP
/usr/share/vim/vim72/menu.vim
System wide menu initializations for gvim.
.TP
/usr/share/vim/vim72/bugreport.vim
Script to generate a bug report.  See ":help bugs".
.TP
/usr/share/vim/vim72/filetype.vim
Script to detect the type of a file by its name.  See ":help 'filetype'".
.TP
/usr/share/vim/vim72/scripts.vim
Script to detect the type of a file by its contents.  See ":help 'filetype'".
.TP
/usr/share/vim/vim72/print/*.ps
Files used for PostScript printing.
.PP
For recent info read the VIM home page:
.br
<URL:http://www.vim.org/>
.SH VÉASE TAMBIÉN
vimtutor(1)
.SH AUTOR
Most of
.B Vim
was made by Bram Moolenaar, with a lot of help from others.
See ":help credits" in
.B Vim.
.br
.B Vim
is based on Stevie, worked on by: Tim Thompson,
Tony Andrews and G.R. (Fred) Walter.
Although hardly any of the original code remains.
.SH BUGS
Probably.
See ":help todo" for a list of known problems.
.PP
Note that a number of things that may be regarded as bugs by some, are in fact
caused by a too-faithful reproduction of Vi's behaviour.
And if you think other things are bugs "because Vi does it differently",
you should take a closer look at the vi_diff.txt file (or type :help
vi_diff.txt when in Vim).
Also have a look at the 'compatible' and 'cpoptions' options.
./"
./"
./" vim:enc=latin1:fenc=latin1:ft=nroff
./"
./"
