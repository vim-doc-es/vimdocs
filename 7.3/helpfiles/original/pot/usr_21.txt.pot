# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the Vim package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Vim 7.3\n"
"Report-Msgid-Bugs-To: vim@bugs.org\n"
"POT-Creation-Date: 2011-10-18 21:25-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: original/txt/intro.txt:18 original/txt/intro.txt:79
#: original/txt/intro.txt:180 original/txt/intro.txt:290
#: original/txt/intro.txt:518 original/txt/intro.txt:596
#: original/txt/intro.txt:689 original/txt/intro.txt:817
#: original/txt/intro.txt:880 original/txt/usr_toc.txt:7
#: original/txt/usr_toc.txt:58 original/txt/usr_toc.txt:172
#: original/txt/usr_toc.txt:281 original/txt/usr_toc.txt:340
#: original/txt/usr_toc.txt:352 original/txt/usr_01.txt:19
#: original/txt/usr_01.txt:50 original/txt/usr_01.txt:100
#: original/txt/usr_01.txt:181 original/txt/usr_02.txt:25
#: original/txt/usr_02.txt:69 original/txt/usr_02.txt:130
#: original/txt/usr_02.txt:179 original/txt/usr_02.txt:239
#: original/txt/usr_02.txt:307 original/txt/usr_02.txt:369
#: original/txt/usr_02.txt:406 original/txt/usr_02.txt:560
#: original/txt/usr_03.txt:28 original/txt/usr_03.txt:74
#: original/txt/usr_03.txt:101 original/txt/usr_03.txt:147
#: original/txt/usr_03.txt:172 original/txt/usr_03.txt:223
#: original/txt/usr_03.txt:265 original/txt/usr_03.txt:320
#: original/txt/usr_03.txt:491 original/txt/usr_03.txt:552
#: original/txt/usr_03.txt:650 original/txt/usr_04.txt:27
#: original/txt/usr_04.txt:74 original/txt/usr_04.txt:160
#: original/txt/usr_04.txt:194 original/txt/usr_04.txt:269
#: original/txt/usr_04.txt:324 original/txt/usr_04.txt:360
#: original/txt/usr_04.txt:390 original/txt/usr_04.txt:446
#: original/txt/usr_04.txt:469 original/txt/usr_04.txt:510
#: original/txt/usr_05.txt:24 original/txt/usr_05.txt:63
#: original/txt/usr_05.txt:219 original/txt/usr_05.txt:266
#: original/txt/usr_05.txt:418 original/txt/usr_05.txt:467
#: original/txt/usr_05.txt:506 original/txt/usr_05.txt:621
#: original/txt/usr_06.txt:24 original/txt/usr_06.txt:50
#: original/txt/usr_06.txt:135 original/txt/usr_06.txt:189
#: original/txt/usr_06.txt:270 original/txt/usr_06.txt:276
#: original/txt/usr_07.txt:24 original/txt/usr_07.txt:63
#: original/txt/usr_07.txt:179 original/txt/usr_07.txt:266
#: original/txt/usr_07.txt:316 original/txt/usr_07.txt:404
#: original/txt/usr_07.txt:444 original/txt/usr_07.txt:475
#: original/txt/usr_08.txt:26 original/txt/usr_08.txt:82
#: original/txt/usr_08.txt:109 original/txt/usr_08.txt:161
#: original/txt/usr_08.txt:215 original/txt/usr_08.txt:278
#: original/txt/usr_08.txt:337 original/txt/usr_08.txt:477
#: original/txt/usr_08.txt:509 original/txt/usr_08.txt:597
#: original/txt/usr_09.txt:21 original/txt/usr_09.txt:124
#: original/txt/usr_09.txt:175 original/txt/usr_09.txt:259
#: original/txt/usr_09.txt:285 original/txt/usr_10.txt:27
#: original/txt/usr_10.txt:144 original/txt/usr_10.txt:221
#: original/txt/usr_10.txt:342 original/txt/usr_10.txt:378
#: original/txt/usr_10.txt:547 original/txt/usr_10.txt:621
#: original/txt/usr_10.txt:667 original/txt/usr_10.txt:692
#: original/txt/usr_10.txt:820 original/txt/usr_11.txt:22
#: original/txt/usr_11.txt:82 original/txt/usr_11.txt:144
#: original/txt/usr_11.txt:288 original/txt/usr_11.txt:303
#: original/txt/usr_12.txt:25 original/txt/usr_12.txt:90
#: original/txt/usr_12.txt:131 original/txt/usr_12.txt:177
#: original/txt/usr_12.txt:202 original/txt/usr_12.txt:231
#: original/txt/usr_12.txt:281 original/txt/usr_12.txt:309
#: original/txt/usr_12.txt:354 original/txt/usr_20.txt:22
#: original/txt/usr_20.txt:113 original/txt/usr_20.txt:158
#: original/txt/usr_20.txt:285 original/txt/usr_20.txt:327
#: original/txt/usr_20.txt:380 original/txt/usr_21.txt:24
#: original/txt/usr_21.txt:47 original/txt/usr_21.txt:87
#: original/txt/usr_21.txt:236 original/txt/usr_21.txt:385
#: original/txt/usr_21.txt:438 original/txt/usr_21.txt:495
#: original/txt/usr_22.txt:22 original/txt/usr_22.txt:148
#: original/txt/usr_22.txt:213 original/txt/usr_22.txt:272
#: original/txt/usr_22.txt:396 original/txt/usr_23.txt:23
#: original/txt/usr_23.txt:114 original/txt/usr_23.txt:156
#: original/txt/usr_23.txt:238 original/txt/usr_23.txt:324
#: original/txt/usr_23.txt:339 original/txt/usr_24.txt:28
#: original/txt/usr_24.txt:96 original/txt/usr_24.txt:119
#: original/txt/usr_24.txt:268 original/txt/usr_24.txt:305
#: original/txt/usr_24.txt:336 original/txt/usr_24.txt:369
#: original/txt/usr_24.txt:493 original/txt/usr_24.txt:537
#: original/txt/usr_24.txt:583 original/txt/usr_24.txt:602
#: original/txt/usr_25.txt:22 original/txt/usr_25.txt:132
#: original/txt/usr_25.txt:210 original/txt/usr_25.txt:287
#: original/txt/usr_25.txt:453 original/txt/usr_25.txt:574
#: original/txt/usr_26.txt:21 original/txt/usr_26.txt:46
#: original/txt/usr_26.txt:103 original/txt/usr_26.txt:136
#: original/txt/usr_26.txt:217 original/txt/usr_27.txt:26
#: original/txt/usr_27.txt:88 original/txt/usr_27.txt:136
#: original/txt/usr_27.txt:239 original/txt/usr_27.txt:320
#: original/txt/usr_27.txt:350 original/txt/usr_27.txt:427
#: original/txt/usr_27.txt:469 original/txt/usr_27.txt:510
#: original/txt/usr_27.txt:559 original/txt/usr_28.txt:27
#: original/txt/usr_28.txt:54 original/txt/usr_28.txt:121
#: original/txt/usr_28.txt:185 original/txt/usr_28.txt:211
#: original/txt/usr_28.txt:269 original/txt/usr_28.txt:315
#: original/txt/usr_28.txt:331 original/txt/usr_28.txt:375
#: original/txt/usr_28.txt:389 original/txt/usr_28.txt:422
#: original/txt/usr_29.txt:23 original/txt/usr_29.txt:273
#: original/txt/usr_29.txt:320 original/txt/usr_29.txt:441
#: original/txt/usr_29.txt:570 original/txt/usr_29.txt:609
#: original/txt/usr_30.txt:23 original/txt/usr_30.txt:202
#: original/txt/usr_30.txt:280 original/txt/usr_30.txt:336
#: original/txt/usr_30.txt:409 original/txt/usr_30.txt:515
#: original/txt/usr_30.txt:639 original/txt/usr_31.txt:22
#: original/txt/usr_31.txt:81 original/txt/usr_31.txt:133
#: original/txt/usr_31.txt:160 original/txt/usr_31.txt:208
#: original/txt/usr_31.txt:268 original/txt/usr_32.txt:21
#: original/txt/usr_32.txt:44 original/txt/usr_32.txt:92
#: original/txt/usr_32.txt:140 original/txt/usr_32.txt:176
#: original/txt/usr_40.txt:20 original/txt/usr_40.txt:279
#: original/txt/usr_40.txt:424 original/txt/usr_40.txt:653
#: original/txt/usr_41.txt:33 original/txt/usr_41.txt:133
#: original/txt/usr_41.txt:267 original/txt/usr_41.txt:345
#: original/txt/usr_41.txt:482 original/txt/usr_41.txt:532
#: original/txt/usr_41.txt:877 original/txt/usr_41.txt:1104
#: original/txt/usr_41.txt:1390 original/txt/usr_41.txt:1447
#: original/txt/usr_41.txt:1617 original/txt/usr_41.txt:2038
#: original/txt/usr_41.txt:2224 original/txt/usr_41.txt:2270
#: original/txt/usr_41.txt:2346 original/txt/usr_41.txt:2410
#: original/txt/usr_41.txt:2425 original/txt/usr_42.txt:21
#: original/txt/usr_42.txt:140 original/txt/usr_42.txt:254
#: original/txt/usr_42.txt:293 original/txt/usr_42.txt:361
#: original/txt/usr_43.txt:20 original/txt/usr_43.txt:70
#: original/txt/usr_43.txt:169 original/txt/usr_44.txt:30
#: original/txt/usr_44.txt:85 original/txt/usr_44.txt:139
#: original/txt/usr_44.txt:166 original/txt/usr_44.txt:196
#: original/txt/usr_44.txt:291 original/txt/usr_44.txt:321
#: original/txt/usr_44.txt:448 original/txt/usr_44.txt:486
#: original/txt/usr_44.txt:530 original/txt/usr_44.txt:609
#: original/txt/usr_44.txt:645 original/txt/usr_44.txt:715
#: original/txt/usr_45.txt:22 original/txt/usr_45.txt:85
#: original/txt/usr_45.txt:137 original/txt/usr_45.txt:263
#: original/txt/usr_45.txt:327 original/txt/usr_45.txt:415
#: original/txt/usr_90.txt:21 original/txt/usr_90.txt:214
#: original/txt/usr_90.txt:288 original/txt/usr_90.txt:341
#: original/txt/usr_90.txt:417 original/txt/usr_90.txt:494
#, no-wrap
msgid "==============================================================================\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_toc.txt:4 original/txt/usr_01.txt:4
#: original/txt/usr_02.txt:4 original/txt/usr_03.txt:4
#: original/txt/usr_04.txt:4 original/txt/usr_05.txt:4
#: original/txt/usr_06.txt:4 original/txt/usr_07.txt:4
#: original/txt/usr_08.txt:4 original/txt/usr_09.txt:4
#: original/txt/usr_10.txt:4 original/txt/usr_11.txt:4
#: original/txt/usr_12.txt:4 original/txt/usr_20.txt:4
#: original/txt/usr_21.txt:4 original/txt/usr_22.txt:4
#: original/txt/usr_23.txt:4 original/txt/usr_24.txt:4
#: original/txt/usr_25.txt:4 original/txt/usr_26.txt:4
#: original/txt/usr_27.txt:4 original/txt/usr_28.txt:4
#: original/txt/usr_29.txt:4 original/txt/usr_30.txt:4
#: original/txt/usr_31.txt:4 original/txt/usr_32.txt:4
#: original/txt/usr_40.txt:4 original/txt/usr_41.txt:4
#: original/txt/usr_42.txt:4 original/txt/usr_43.txt:4
#: original/txt/usr_44.txt:4 original/txt/usr_45.txt:4
#: original/txt/usr_90.txt:4
#, no-wrap
msgid "\t\t     VIM USER MANUAL - by Bram Moolenaar\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_toc.txt:354 original/txt/usr_01.txt:185
#: original/txt/usr_02.txt:564 original/txt/usr_03.txt:654
#: original/txt/usr_04.txt:514 original/txt/usr_05.txt:625
#: original/txt/usr_06.txt:280 original/txt/usr_07.txt:479
#: original/txt/usr_08.txt:601 original/txt/usr_09.txt:289
#: original/txt/usr_10.txt:824 original/txt/usr_11.txt:307
#: original/txt/usr_12.txt:358 original/txt/usr_20.txt:384
#: original/txt/usr_21.txt:499 original/txt/usr_22.txt:400
#: original/txt/usr_23.txt:343 original/txt/usr_24.txt:606
#: original/txt/usr_25.txt:578 original/txt/usr_26.txt:221
#: original/txt/usr_27.txt:563 original/txt/usr_28.txt:426
#: original/txt/usr_29.txt:613 original/txt/usr_30.txt:643
#: original/txt/usr_31.txt:272 original/txt/usr_32.txt:180
#: original/txt/usr_40.txt:657 original/txt/usr_41.txt:2429
#: original/txt/usr_42.txt:365 original/txt/usr_43.txt:173
#: original/txt/usr_44.txt:719 original/txt/usr_45.txt:419
#: original/txt/usr_90.txt:498
msgid "Copyright: see |manual-copyright| vim:tw=78:ts=8:ft=help:norl:"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:2
#, no-wrap
msgid "*usr_21.txt*\tFor Vim version 7.3.  Last change: 2008 Nov 09\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:6
#, no-wrap
msgid "\t\t\t   Go away and come back\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:12
msgid ""
"This chapter goes into mixing the use of other programs with Vim.  Either by "
"executing program from inside Vim or by leaving Vim and coming back later.  "
"Furthermore, this is about the ways to remember the state of Vim and restore "
"it later."
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:19
#, no-wrap
msgid ""
"|21.1|\tSuspend and resume\n"
"|21.2|\tExecuting shell commands\n"
"|21.3|\tRemembering information; viminfo\n"
"|21.4|\tSessions\n"
"|21.5|\tViews\n"
"|21.6|\tModelines\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:23
#, no-wrap
msgid ""
"     Next chapter: |usr_22.txt|  Finding the file to edit\n"
" Previous chapter: |usr_20.txt|  Typing command-line commands quickly\n"
"Table of contents: |usr_toc.txt|\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:26
#, no-wrap
msgid "*21.1*\tSuspend and resume\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:31
msgid ""
"Like most Unix programs Vim can be suspended by pressing CTRL-Z.  This stops "
"Vim and takes you back to the shell it was started in.  You can then do any "
"other commands until you are bored with them.  Then bring back Vim with the "
"\"fg\" command. >"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:35
#, no-wrap
msgid ""
"\tCTRL-Z\n"
"\t{any sequence of shell commands}\n"
"\tfg\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:40
#, no-wrap
msgid ""
"You are right back where you left Vim, nothing has changed.\n"
"   In case pressing CTRL-Z doesn't work, you can also use \":suspend\".\n"
"Don't forget to bring Vim back to the foreground, you would lose any changes\n"
"that you made!\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:46
#, no-wrap
msgid ""
"Only Unix has support for this.  On other systems Vim will start a shell for\n"
"you.  This also has the functionality of being able to execute shell commands.\n"
"But it's a new shell, not the one that you started Vim from.\n"
"   When you are running the GUI you can't go back to the shell where Vim was\n"
"started.  CTRL-Z will minimize the Vim window instead.\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:49
#, no-wrap
msgid "*21.2*\tExecuting shell commands\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:52
msgid ""
"To execute a single shell command from Vim use \":!{command}\".  For "
"example, to see a directory listing: >"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:55
#, no-wrap
msgid ""
"\t:!ls\n"
"\t:!dir\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:62
#, no-wrap
msgid ""
"The first one is for Unix, the second one for MS-Windows.\n"
"   Vim will execute the program.  When it ends you will get a prompt to hit\n"
"<Enter>.  This allows you to have a look at the output from the command before\n"
"returning to the text you were editing.\n"
"   The \"!\" is also used in other places where a program is run.  Let's take\n"
"a look at an overview:\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:67
#, no-wrap
msgid ""
"\t:!{program}\t\texecute {program}\n"
"\t:r !{program}\t\texecute {program} and read its output\n"
"\t:w !{program}\t\texecute {program} and send text to its input\n"
"\t:[range]!{program}\tfilter text through {program}\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:71
msgid ""
"Notice that the presence of a range before \"!{program}\" makes a big "
"difference.  Without it executes the program normally, with the range a "
"number of text lines is filtered through the program."
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:74
msgid ""
"Executing a whole row of programs this way is possible.  But a shell is much "
"better at it.  You can start a new shell this way: >"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:76
#, no-wrap
msgid "\t:shell\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:79
msgid ""
"This is similar to using CTRL-Z to suspend Vim.  The difference is that a "
"new shell is started."
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:86
#, no-wrap
msgid ""
"When using the GUI the shell will be using the Vim window for its input and\n"
"output.  Since Vim is not a terminal emulator, this will not work perfectly.\n"
"If you have trouble, try toggling the 'guipty' option.  If this still doesn't\n"
"work well enough, start a new terminal to run the shell in.  For example with:\n"
">\n"
"\t:!xterm&\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:89
#, no-wrap
msgid "*21.3*\tRemembering information; viminfo\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:93
msgid ""
"After editing for a while you will have text in registers, marks in various "
"files, a command line history filled with carefully crafted commands.  When "
"you exit Vim all of this is lost.  But you can get it back!"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:95
msgid "The viminfo file is designed to store status information:"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:101
#, no-wrap
msgid ""
"\tCommand-line and Search pattern history\n"
"\tText in registers\n"
"\tMarks for various files\n"
"\tThe buffer list\n"
"\tGlobal variables\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:105
msgid ""
"Each time you exit Vim it will store this information in a file, the viminfo "
"file.  When Vim starts again, the viminfo file is read and the information "
"restored."
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:109
msgid ""
"The 'viminfo' option is set by default to restore a limited number of "
"items.  You might want to set it to remember more information.  This is done "
"through the following command: >"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:111
#, no-wrap
msgid "\t:set viminfo=string\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:119
#, no-wrap
msgid ""
"The string specifies what to save.  The syntax of this string is an option\n"
"character followed by an argument.  The option/argument pairs are separated by\n"
"commas.\n"
"   Take a look at how you can build up your own viminfo string.  First, the '\n"
"option is used to specify how many files for which you save marks (a-z).  Pick\n"
"a nice even number for this option (1000, for instance).  Your command now\n"
"looks like this: >\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:121
#, no-wrap
msgid "\t:set viminfo='1000\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:125
msgid ""
"The f option controls whether global marks (A-Z and 0-9) are stored.  If "
"this option is 0, none are stored.  If it is 1 or you do not specify an f "
"option, the marks are stored.  You want this feature, so now you have this: >"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:127
#, no-wrap
msgid "\t:set viminfo='1000,f1\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:132
msgid ""
"The < option controls how many lines are saved for each of the registers.  "
"By default, all the lines are saved.  If 0, nothing is saved.  To avoid "
"adding thousands of lines to your viminfo file (which might never get used "
"and makes starting Vim slower) you use a maximum of 500 lines: >"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:148
#, no-wrap
msgid ""
"\t:set viminfo='1000,f1,<500\n"
"<\n"
"Other options you might want to use:\n"
"\t:\tnumber of lines to save from the command line history\n"
"\t@\tnumber of lines to save from the input line history\n"
"\t/\tnumber of lines to save from the search history\n"
"\tr\tremovable media, for which no marks will be stored (can be\n"
"\t\tused several times)\n"
"\t!\tglobal variables that start with an uppercase letter and\n"
"\t\tdon't contain lowercase letters\n"
"\th\tdisable 'hlsearch' highlighting when starting\n"
"\t%\tthe buffer list (only restored when starting Vim without file\n"
"\t\targuments)\n"
"\tc\tconvert the text using 'encoding'\n"
"\tn\tname used for the viminfo file (must be the last option)\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:150
msgid "See the 'viminfo' option and |viminfo-file| for more information."
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:154
msgid ""
"When you run Vim multiple times, the last one exiting will store its "
"information.  This may cause information that previously exiting Vims stored "
"to be lost.  Each item can be remembered only once."
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:157
msgid "GETTING BACK TO WHERE YOU STOPPED VIM"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:163
#, no-wrap
msgid ""
"You are halfway editing a file and it's time to leave for holidays.  You exit\n"
"Vim and go enjoy yourselves, forgetting all about your work.  After a couple\n"
"of weeks you start Vim, and type:\n"
">\n"
"\t'0\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:169
#, no-wrap
msgid ""
"And you are right back where you left Vim.  So you can get on with your work.\n"
"   Vim creates a mark each time you exit Vim.  The last one is '0.  The\n"
"position that '0 pointed to is made '1.  And '1 is made to '2, and so forth.\n"
"Mark '9 is lost.\n"
"   The |:marks| command is useful to find out where '0 to '9 will take you.\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:172
msgid "GETTING BACK TO SOME FILE"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:176
msgid ""
"If you want to go back to a file that you edited recently, but not when "
"exiting Vim, there is a slightly more complicated way.  You can see a list "
"of files by typing the command: >"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:181
#, no-wrap
msgid ""
"\t:oldfiles\n"
"<\t1: ~/.viminfo ~\n"
"\t2: ~/text/resume.txt ~\n"
"\t3: /tmp/draft ~\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:184
msgid ""
"Now you would like to edit the second file, which is in the list preceded by "
"\"2:\".  You type: >"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:186
#, no-wrap
msgid "\t:e #<2\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:191
msgid ""
"Instead of \":e\" you can use any command that has a file name argument, the "
"\"#<2\" item works in the same place as \"%\" (current file name) and \"#"
"\" (alternate file name).  So you can also split the window to edit the "
"third file: >"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:193
#, no-wrap
msgid "\t:split #<3\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:196
msgid ""
"That #<123 thing is a bit complicated when you just want to edit a file.  "
"Fortunately there is a simpler way: >"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:202
#, no-wrap
msgid ""
"\t:browse oldfiles\n"
"<\t1: ~/.viminfo ~\n"
"\t2: ~/text/resume.txt ~\n"
"\t3: /tmp/draft ~\n"
"\t-- More --\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:205
msgid ""
"You get the same list of files as with |:oldfiles|.  If you want to edit "
"\"resume.txt\" first press \"q\" to stop the listing.  You will get a prompt:"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:207
#, no-wrap
msgid "\tType number and <Enter> (empty cancels): ~\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:209
msgid "Type \"2\" and press <Enter> to edit the second file."
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:211
msgid "More info at |:oldfiles|, |v:oldfiles| and |c_#<|."
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:214
msgid "MOVE INFO FROM ONE VIM TO ANOTHER"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:218
msgid ""
"You can use the \":wviminfo\" and \":rviminfo\" commands to save and restore "
"the information while still running Vim.  This is useful for exchanging "
"register contents between two instances of Vim, for example.  In the first "
"Vim do: >"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:220
#, no-wrap
msgid "\t:wviminfo! ~/tmp/viminfo\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:222
msgid "And in the second Vim do: >"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:224
#, no-wrap
msgid "\t:rviminfo! ~/tmp/viminfo\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:235
#, no-wrap
msgid ""
"Obviously, the \"w\" stands for \"write\" and the \"r\" for \"read\".\n"
"   The ! character is used by \":wviminfo\" to forcefully overwrite an existing\n"
"file.  When it is omitted, and the file exists, the information is merged into\n"
"the file.\n"
"   The ! character used for \":rviminfo\" means that all the information is\n"
"used, this may overwrite existing information.  Without the ! only information\n"
"that wasn't set is used.\n"
"   These commands can also be used to store info and use it again later.  You\n"
"could make a directory full of viminfo files, each containing info for a\n"
"different purpose.\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:238
#, no-wrap
msgid "*21.4*\tSessions\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:247
#, no-wrap
msgid ""
"Suppose you are editing along, and it is the end of the day.  You want to quit\n"
"work and pick up where you left off the next day.  You can do this by saving\n"
"your editing session and restoring it the next day.\n"
"   A Vim session contains all the information about what you are editing.\n"
"This includes things such as the file list, window layout, global variables,\n"
"options and other information.  (Exactly what is remembered is controlled by\n"
"the 'sessionoptions' option, described below.)\n"
"   The following command creates a session file: >\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:249
#, no-wrap
msgid "\t:mksession vimbook.vim\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:251
msgid "Later if you want to restore this session, you can use this command: >"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:253
#, no-wrap
msgid "\t:source vimbook.vim\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:256
msgid ""
"If you want to start Vim and restore a specific session, you can use the "
"following command: >"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:258
#, no-wrap
msgid "\tvim -S vimbook.vim\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:262
msgid ""
"This tells Vim to read a specific file on startup.  The 'S' stands for "
"session (actually, you can source any Vim script with -S, thus it might as "
"well stand for \"source\")."
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:267
#, no-wrap
msgid ""
"The windows that were open are restored, with the same position and size as\n"
"before.  Mappings and option values are like before.\n"
"   What exactly is restored depends on the 'sessionoptions' option.  The\n"
"default value is \"blank,buffers,curdir,folds,help,options,winsize\".\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:275
#, no-wrap
msgid ""
"\tblank\t\tkeep empty windows\n"
"\tbuffers\t\tall buffers, not only the ones in a window\n"
"\tcurdir\t\tthe current directory\n"
"\tfolds\t\tfolds, also manually created ones\n"
"\thelp\t\tthe help window\n"
"\toptions\t\tall options and mappings\n"
"\twinsize\t\twindow sizes\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:278
msgid ""
"Change this to your liking.  To also restore the size of the Vim window, for "
"example, use: >"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:280
#, no-wrap
msgid "\t:set sessionoptions+=resize\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:283
msgid "SESSION HERE, SESSION THERE"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:288
msgid ""
"The obvious way to use sessions is when working on different projects.  "
"Suppose you store you session files in the directory \"~/.vim\".  You are "
"currently working on the \"secret\" project and have to switch to the "
"\"boring\" project: >"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:292
#, no-wrap
msgid ""
"\t:wall\n"
"\t:mksession! ~/.vim/secret.vim\n"
"\t:source ~/.vim/boring.vim\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:297
msgid ""
"This first uses \":wall\" to write all modified files.  Then the current "
"session is saved, using \":mksession!\".  This overwrites the previous "
"session.  The next time you load the secret session you can continue where "
"you were at this point.  And finally you load the new \"boring\" session."
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:300
msgid ""
"If you open help windows, split and close various window, and generally mess "
"up the window layout, you can go back to the last saved session: >"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:302
#, no-wrap
msgid "\t:source ~/.vim/boring.vim\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:310
#, no-wrap
msgid ""
"Thus you have complete control over whether you want to continue next time\n"
"where you are now, by saving the current setup in a session, or keep the\n"
"session file as a starting point.\n"
"   Another way of using sessions is to create a window layout that you like to\n"
"use, and save this in a session.  Then you can go back to this layout whenever\n"
"you want.\n"
"   For example, this is a nice layout to use:\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:326
#, no-wrap
msgid ""
"\t+----------------------------------------+\n"
"\t|\t\t   VIM - main help file  |\n"
"\t|\t\t\t\t\t |\n"
"\t|Move around:  Use the cursor keys, or \"h|\n"
"\t|help.txt================================|\n"
"\t|explorer   |\t\t\t\t |\n"
"\t|dir\t    |~\t\t\t\t |\n"
"\t|dir\t    |~\t\t\t\t |\n"
"\t|file\t    |~\t\t\t\t |\n"
"\t|file\t    |~\t\t\t\t |\n"
"\t|file\t    |~\t\t\t\t |\n"
"\t|file\t    |~\t\t\t\t |\n"
"\t|~/=========|[No File]===================|\n"
"\t|\t\t\t\t\t |\n"
"\t+----------------------------------------+\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:332
#, no-wrap
msgid ""
"This has a help window at the top, so that you can read this text.  The narrow\n"
"vertical window on the left contains a file explorer.  This is a Vim plugin\n"
"that lists the contents of a directory.  You can select files to edit there.\n"
"More about this in the next chapter.\n"
"   Create this from a just started Vim with: >\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:336
#, no-wrap
msgid ""
"\t:help\n"
"\tCTRL-W w\n"
"\t:vertical split ~/\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:340
#, no-wrap
msgid ""
"You can resize the windows a bit to your liking.  Then save the session with:\n"
">\n"
"\t:mksession ~/.vim/mine.vim\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:342
msgid "Now you can start Vim with this layout: >"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:344
#, no-wrap
msgid "\tvim -S ~/.vim/mine.vim\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:348
msgid ""
"Hint: To open a file you see listed in the explorer window in the empty "
"window, move the cursor to the filename and press \"O\".  Double clicking "
"with the mouse will also do this."
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:351
msgid "UNIX AND MS-WINDOWS"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:356
msgid ""
"Some people have to do work on MS-Windows systems one day and on Unix "
"another day.  If you are one of them, consider adding \"slash\" and \"unix\" "
"to 'sessionoptions'.  The session files will then be written in a format "
"that can be used on both systems.  This is the command to put in your vimrc "
"file: >"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:358
#, no-wrap
msgid "\t:set sessionoptions+=unix,slash\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:363
msgid ""
"Vim will use the Unix format then, because the MS-Windows Vim can read and "
"write Unix files, but Unix Vim can't read MS-Windows format session files.  "
"Similarly, MS-Windows Vim understands file names with / to separate names, "
"but Unix Vim doesn't understand \\."
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:366
msgid "SESSIONS AND VIMINFO"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:376
#, no-wrap
msgid ""
"Sessions store many things, but not the position of marks, contents of\n"
"registers and the command line history.  You need to use the viminfo feature\n"
"for these things.\n"
"   In most situations you will want to use sessions separately from viminfo.\n"
"This can be used to switch to another session, but keep the command line\n"
"history.  And yank text into registers in one session, and paste it back in\n"
"another session.\n"
"   You might prefer to keep the info with the session.  You will have to do\n"
"this yourself then.  Example: >\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:379
#, no-wrap
msgid ""
"\t:mksession! ~/.vim/secret.vim\n"
"\t:wviminfo! ~/.vim/secret.viminfo\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:381
msgid "And to restore this again: >"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:384
#, no-wrap
msgid ""
"\t:source ~/.vim/secret.vim\n"
"\t:rviminfo! ~/.vim/secret.viminfo\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:387
#, no-wrap
msgid "*21.5*\tViews\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:398
#, no-wrap
msgid ""
"A session stores the looks of the whole of Vim.  When you want to store the\n"
"properties for one window only, use a view.\n"
"   The use of a view is for when you want to edit a file in a specific way.\n"
"For example, you have line numbers enabled with the 'number' option and\n"
"defined a few folds.  Just like with sessions, you can remember this view on\n"
"the file and restore it later.  Actually, when you store a session, it stores\n"
"the view of each window.\n"
"   There are two basic ways to use views.  The first is to let Vim pick a name\n"
"for the view file.  You can restore the view when you later edit the same\n"
"file.  To store the view for the current window: >\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:400 original/txt/usr_28.txt:194
#, no-wrap
msgid "\t:mkview\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:403
msgid ""
"Vim will decide where to store the view.  When you later edit the same file "
"you get the view back with this command: >"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:405 original/txt/usr_28.txt:200
#, no-wrap
msgid "\t:loadview\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:410
#, no-wrap
msgid ""
"That's easy, isn't it?\n"
"   Now you want to view the file without the 'number' option on, or with all\n"
"folds open, you can set the options to make the window look that way.  Then\n"
"store this view with: >\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:412
#, no-wrap
msgid "\t:mkview 1\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:414
msgid "Obviously, you can get this back with: >"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:416
#, no-wrap
msgid "\t:loadview 1\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:421
#, no-wrap
msgid ""
"Now you can switch between the two views on the file by using \":loadview\" with\n"
"and without the \"1\" argument.\n"
"   You can store up to ten views for the same file this way, one unnumbered\n"
"and nine numbered 1 to 9.\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:424
msgid "A VIEW WITH A NAME"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:431
#, no-wrap
msgid ""
"The second basic way to use views is by storing the view in a file with a name\n"
"you chose.  This view can be loaded while editing another file.  Vim will then\n"
"switch to editing the file specified in the view.  Thus you can use this to\n"
"quickly switch to editing another file, with all its options set as you saved\n"
"them.\n"
"   For example, to save the view of the current file: >\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:433
#, no-wrap
msgid "\t:mkview ~/.vim/main.vim\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:435
msgid "You can restore it with: >"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:437
#, no-wrap
msgid "\t:source ~/.vim/main.vim\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:440
#, no-wrap
msgid "*21.6*\tModelines\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:450
#, no-wrap
msgid ""
"When editing a specific file, you might set options specifically for that\n"
"file.  Typing these commands each time is boring.  Using a session or view for\n"
"editing a file doesn't work when sharing the file between several people.\n"
"   The solution for this situation is adding a modeline to the file.  This is\n"
"a line of text that tells Vim the values of options, to be used in this file\n"
"only.\n"
"   A typical example is a C program where you make indents by a multiple of 4\n"
"spaces.  This requires setting the 'shiftwidth' option to 4.  This modeline\n"
"will do that:\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:452
#, no-wrap
msgid "\t/* vim:set shiftwidth=4: */ ~\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:459
#, no-wrap
msgid ""
"Put this line as one of the first or last five lines in the file.  When\n"
"editing the file, you will notice that 'shiftwidth' will have been set to\n"
"four.  When editing another file, it's set back to the default value of eight.\n"
"   For some files the modeline fits well in the header, thus it can be put at\n"
"the top of the file.  For text files and other files where the modeline gets\n"
"in the way of the normal contents, put it at the end of the file.\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:462
msgid ""
"The 'modelines' option specifies how many lines at the start and end of the "
"file are inspected for containing a modeline.  To inspect ten lines: >"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:464
#, no-wrap
msgid "\t:set modelines=10\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:468
msgid ""
"The 'modeline' option can be used to switch this off.  Do this when you are "
"working as root on Unix or Administrator on MS-Windows, or when you don't "
"trust the files you are editing: >"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:470
#, no-wrap
msgid "\t:set nomodeline\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:472
msgid "Use this format for the modeline:"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:474
#, no-wrap
msgid "\tany-text vim:set {option}={value} ... : any-text ~\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:484
#, no-wrap
msgid ""
"The \"any-text\" indicates that you can put any text before and after the part\n"
"that Vim will use.  This allows making it look like a comment, like what was\n"
"done above with /* and */.\n"
"   The \" vim:\" part is what makes Vim recognize this line.  There must be\n"
"white space before \"vim\", or \"vim\" must be at the start of the line.  Thus\n"
"using something like \"gvim:\" will not work.\n"
"   The part between the colons is a \":set\" command.  It works the same way as\n"
"typing the \":set\" command, except that you need to insert a backslash before a\n"
"colon (otherwise it would be seen as the end of the modeline).\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:486 original/txt/usr_26.txt:85
msgid "Another example:"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:488
#, no-wrap
msgid "\t// vim:set textwidth=72 dir=c\\:\\tmp:  use c:\\tmp here ~\n"
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:492
msgid ""
"There is an extra backslash before the first colon, so that it's included in "
"the \":set\" command.  The text after the second colon is ignored, thus a "
"remark can be placed there."
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:494
msgid "For more details see |modeline|."
msgstr ""

#. type: Plain text
#: original/txt/usr_21.txt:498
msgid "Next chapter: |usr_22.txt| Finding the file to edit"
msgstr ""
