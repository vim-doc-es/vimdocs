*usr_04.txt*	Para Vim version 7.2.  Último cambio: 2007 Feb 08

                MANUAL DE USUARIO DE VIM - por Bram Moolenaar

                            Hacer cambios pequeños


Este capítulo te muestra diferentes formas de hacer correcciones y moverte en
el texto. Te muestra los tres modos básicos de cambiar texto:
operador-movimiento, modo Visual y objetos de texto.

|04.1|	Operadores y movimiento
|04.2|	Cambiar texto
|04.3|	Repetir un cambio
|04.4|	Modo Visual
|04.5|	Mover texto
|04.6|	Copiar texto
|04.7|	Uso del portapapeles
|04.8|	Objetos de texto
|04.9|	Modo reemplazar
|04.10|	Conclusión

Capítulo siguiente: |usr_05.txt|  Configuración
 Capítulo anterior: |usr_03.txt|  Movimiento
        Contenidos: |usr_toc.txt|

==============================================================================
*04.1*	Operadores y movimiento

En el capítulo 2 aprendiste que el comando "x" elimina un único carácter.  Y
que usar un multiplicador: "4x" elimina cuatro caracteres.
   El comando "dw" elimina una palabra.  Reconocerás el comando "w" como el de
movimiento sobre palabras.  De hecho,  el comando "d" debe ser completado con
un comando de movimiento, y elimina desde la posición actual hasta donde el
movimiento marque.
   El comando "4w", por ejemplo, mueve el cursor cuatro palabras.  El comando
d4w elimina cuatro palabras.

	Errar es humano.  Para liarla de verdad necesitas un ordenador. ~
			  ---------------------->
				 d4w

	Errar es humano.  necesitas un ordenador. ~

Vim sólo elimina hasta la posición donde el comando de movimiento le lleva.
Eso es porque Vim sabe que probablemente no quieras eliminar la primera letra
de una palabra.  Si usas el comando "e" para desplazarte hasta el final de una
palabra, Vim adivina que quieres incluir el último carácter:

	Errar es humano.  necesitas un ordenador. ~
			------------->
			   d2e

	Errar es humano. ordenador. ~

El que el carácter bajo el cursor se incluya o no depende del comando de
movimiento empleado.  El manual de referencia llama a esto "exclusivo" cuando
el carácter no se incluye e "inclusivo" en caso contrario.

El comando "$" te mueve hasta el final de la línea.  El comando "d$" elimina
desde el cursor hasta el final de la línea.  Este es un movimiento inclusivo,
por lo que el último carácter de la línea se incluye en la operación:

	Errar es humano. ordenador. ~
		       ----------->
			    d$

	Errar es humano ~

Esto sigue siempre la misma estructura: operador-movimiento.  Primero
introduces el operador. Por ejemplo, "d" es el operador de eliminación.  Luego
introduces un comando de movimiento "4l" o "w".

==============================================================================
*04.2*	Cambiar texto

Otra operación es "c" cambiar (change).  Actúa justo como el operador "d",
excepto que te deja en modo Insertar.  Por ejemplo "cw" cambia una palabra.
Es decir, elimina una palabra y te deja en modo Insertar.

	Errar es humano ~
	--------->
	 c2wEl ser<Esc>

	El ser humano ~

Este "c2wEl ser<Esc>" contiene las siguientes partes:

	c	el operador de cambio
	2w	moverse dos palabras (se eliminan y vas al modo Insertar)
	El ser	inserta el siguiente texto
	<Esc>	de vuelta al modo Normal

Si has prestado atención, te habrás dado cuenta de que hay algo raro: El
espacio antes de "humano" no ha sido eliminado.  Hay un dicho: para cada
problema hay una solución que es simple, clara y errónea.  Este es el caso con
el ejemplo usado aquí con el comando "cw".  El operador "c" funciona justo
como el operador "d", con una excepción: "cw".  De hecho, funciona justo igual
que "ce", cambiar hasta el final de la palabra.  El espacio después de la
palabra no se incluye.  Esta excepción data de Vi. Ya que mucha gente se ha
acostumbrado a ella, ha permanecido con Vim.


MÁS CAMBIOS

Del mismo modo que "dd" elimina una línea completa, "cc" la cambia. Además,
mantiene la sangría (los espacios en blanco precedentes).

Así como "d$" elimina hasta el final de la línea, "c$" la cambia hasta el final.
Es como pulsar "d$" para eliminar el texto y luego "a" para activar el modo
Insertar y añadir más texto.


ACCESOS DIRECTOS

Algunos comandos de operación-movimiento se usan tan a menudo que se les ha
asignado un comando de una sola letra:

	x  equivale a  dl  (eliminar carácter bajo el cursor)
	X  equivale a  dh  (eliminar carácter a la izquierda del cursor)
	D  equivale a  d$  (eliminar hasta el final de la línea)
	C  equivale a  c$  (cambiar hasta el final de la línea)
	s  equivale a  cl  (cambiar un carácter)
	S  equivale a  cc  (cambiar una única línea)


DÓNDE PONER EL CONTADOR

Los comandos "3dw" y "d3w" eliminan tres palabras.  Si quieres ponerte
quisquilloso, el primer comando, "3dw", elimina una palabra tres veces; el
comando "d3w" elimina tres palabras de una vez.  Esta diferencia no se puede
distinguir.  Sin embargo, puedes poner dos multiplicadores.  Por ejemplo
"3d2w" elimina dos palabras y lo repite 3 veces, un total de seis palabras.


REEMPLAZAR CON UN CARÁCTER

El comando "r" no es un operador.  Espera que introduzcas un carácter, y
reemplazará el carácter bajo el cursor con él.  Puedes hacer lo mismo con el
comando "cl" o con "s", pero con "r" no tendrás que pulsar <Esc>

	aquí hay algo tue esná mal ~
	rA	      rq    rt

	Aquí hay algo que está mal ~

Usar un multiplicador con "r" causa que muchos caracteres sean reemplazados con
el mismo carácter.  Por ejemplo:

	Aquí hay algo que está mal ~
			   5rx

	Aquí hay algo que exxxxxal ~

Para reemplazar un carácter con un salto de línea usa "r<Entrar>".  Esto
elimina un carácter e inserta un salto.  Usar un multiplicador aquí sólo afecta
al número de caracteres eliminados: "4r<Entrar>" reemplaza cuatro caracteres
con un salto.

==============================================================================
*04.3*	Repetir un cambio

El comando "." es uno de los más sencillos pero más potentes de Vim.  Repite
el último cambio.  Por ejemplo, supón que estás editando un archivo HTML y
quieres eliminar todas las etiquetas <B>.  Para ello, colocas el cursor sobre
el primer < y luego eliminas el <B> con el comando "df>".  Entonces vas al
< del </B> y lo eliminas con el comando ".".  El comando "." ejecuta el último
cambio (en este caso "df>").  Para eliminar otra etiqueta, coloca el cursor
sobre el < y vuelve a pulsar el comando ".".

			      Para <B>generar</B> una tabla de <B>contenidos ~
	f<   ir al primer  <    --->
	df>  elimina hasta >       -->
	f<   ir al segundo <	   ---------->
	.    repetir df>		     --->
	f<   ir al siguiente <		     ------------------>
	.    repetir df>				       -->

El comando "." funciona para todos los cambios que hagas excepto para el
comando "u" (deshacer), CTRL-R, (rehacer) y todos los que comienzan con ":".

Otro ejemplo: Quieres cambiar la palabra "cuatro" por "cinco".  Aparece varias
veces en tu texto.  Puedes hacer esto rápidamente en una secuencia de
comandos:

	/cuatro<Entrar>	encuentra la primera cadena "cuatro"
	cwcinco<Esc>	cambia la palabra a "cinco"
	n		encuentra la siguiente cadena "cuatro"
	.		repite el cambio a "cinco"
	n		encuentra la siguiente cadena "cuatro"
	.		repite el cambio
			etc.

==============================================================================
*04.4*	Modo Visual

Para eliminar items sencillos el operador-movimiento funciona bastante bien.
Pero a menudo, no es fácil decidir que comando de movimiento te desplazará
hasta el texto que quieres modificar.  Es el momento de usar el modo Visual.

Comienza el modo Visual presionando "v".  Puedes mover el cursor sobre el
texto que quieres modificar.  Mientras haces esto, el texto se resalta.
Finalmente, teclea el comando de operador.
   Por ejemplo, para eliminar de mitad de una palabra a la mitad de otra:

		Esto es una muestra cualquiera del modo Visual ~
				 ---------->
				 veehhd

		Esto es una muestra del modo Visual ~

Cuando haces esto, no tienes que contar cuántas veces pulsas "e" o "h" para
llegar a la posición deseada.  Puedes verlo de forma inmediata antes de pulsar
"d".

Si en cualquier momento decides que no quieres hacer nada con el texto
resaltado, simplemente pulsa <Esc> y el modo Visual parará sin hacer nada.


SELECCIONAR LÍNEAS

Si quieres  trabajar con líneas completas, usa "V" para iniciar el modo
Visual.  Verás que toda la línea se resalta, sin ni siquiera mover el cursor.
Cuando muevas el cursor a la izquierda o derecha, nada cambiará. Si lo mueves
hacia arriba o hacia abajo, la selección se extenderá a líneas completas.
   Por ejemplo, selecciona tres líneas con "Vjj":

			  +------------------------+
			  | texto más texto	   |
		       >> | más texto más texto    | |
  líneas seleccionadas >> | texto texto texto	   | | Vjj
		       >> | texto más		   | V
			  | más texto más	   |
			  +------------------------+


SELECCIONAR BLOQUES

Si quieres trabajar en un bloque rectangular de caracteres, usa CTRL-V para
iniciar el modo Visual.  Esto es muy útil su trabajas con tablas.

		nombre		Q1	Q2	Q3
		pedro		123	455	234
		juan		0	90	39
		estéban		392	63	334

Para eliminar la columna central "Q2" mueve el cursor a la "Q" de "Q2". Pulsa
CTRL-V para iniciar el modo Visual de bloques.  Ahora mueve el cursor tres
líneas abajo con "3j" y la próxima palabra con "w".  Puedes comprobar que el
primer carácter de la última columna está incluido.  Para excluirlo, usa "h".
Ahora pulsa "d" y la columna central desaparecerá.


IR AL OTRO LADO

Si has seleccionado algo de texto en modo Visual, y descubres que necesitas
cambiar el otro lado de la selección, usa el comando "o" (Truco: o para el
"otro" lado).  El cursor irá hasta el otro final de la selección, y podrás
modificar dónde comienza la selección.  Pulsa "o" de nuevo para volver al otro
lado.

Cuando usas el modo Visual de bloques, tienes cuatro esquinas.  "o" te llevará
a una de las otras líneas diagonalmente.  Usa "O" para moverte hacia el otro
final de la misma línea.

Note  "o" y "O" en el modo Visual funcionan de forma muy diferente a cómo lo
hacen en el modo Normal, donde abrirán una nueva línea.

==============================================================================
*04.5*	Movimiento

Cuando eliminas algo con "d", "x", u otro comando,  el texto se guarda.
Puedes pegarlo usando el comando "p".  (El nombre de Vim para esto es "poner",
del inglés "put").
   Échale un vistazo a cómo funciona esto.  Primero eliminas una línea
completa poniendo el cursor en la línea y pulsando "dd".  Ahora mueve el
cursor allá donde quieras poner la línea y usa el comando "p".  La línea se
inserta en la línea siguiente a donde se encuentra el cursor.

	una línea	una línea     una línea
	línea 2	   dd	línea 3	   p  línea 3
	línea 3			      línea 2

Ya que eliminaste una línea completa, el comando "p" colocó la línea de texto
debajo del cursor.  Si eliminas parte de una línea (una palabra, por ejemplo),
el comando "p" la pone justo después del cursor.

	Más de lo para mismo probar comandos ~
		  ---->
		  dw

	Más de lo mismo probar comandos ~
		  ----->
		  whp

	Más de lo mismo para probar comandos ~


MÁS SOBRE EL COMANDO PONER

El comando "P" pone una línea como "p", pero antes del cursor.  Cuando elimines
una línea con "dd", "P" lo pondrá de vuelta sobre el cursor.  Cuando elimines
una palabra con "dw", "P" lo pondrá antes del cursor.

Puedes repetir el comando tantas veces como quieras.  Se usará el mismo texto.

Puedes usar un multiplicador con "p" y "P".  El texto se repetirá tantas veces
como especifiques con el multiplicador.  Por ejemplo, usando "dd" y luego "3p"
pone tres copias de la misma línea eliminada.


GIRAR DOS CARACTERES

Más de una vez, mientras tecleas, tus dedos irán por delante de tu cerebro (¿o
al revés?).  El resultado es un error del tipo "uqe" en lugar de "que".  Vim
hace que corregir estos problemas sea sencillo.  Simplemente pon el cursor
sobre la "u" de "uqe" y ejecuta el comando "xp".  Esto funciona del siguiente
modo: "x" elimina el carácter "u" y lo coloca en un registro.  "p" pone el
texto después del cursor, justo después de la "q".

	uqe     qe     que ~
	x       p

==============================================================================
*04.6*	Copiar texto

Para copiar texto de un lugar a otro, puedes eliminarlo, usar "u" para
deshacer la eliminación y después usar "p" para colocarlo en otro lugar.  Hay
un modo mejor: "yank" ("dar un tirón").  El operador "y" copia texto en un
registro. Luego un comando "p" puede ser usado para ponerlo.
   Yanking es simplemente el nombre de Vim para copiar.  La letra "c" ya
estaba en uso por el operador "cambiar", y la "y" estaba aún disponible.
Llamar a este el operador "yank" hizo que fuera más fácil recordar la "y".

Ya que "y" es un operador, se usa "yw" para copiar una palabra.  Se puede usar
un multiplicador.  Para copiar dos palabras usa "y2w".  Por ejemplo:

	let sqr = LongVariable * ~
		 -------------->
		       y2w

	let sqr = LongVariable * ~
			       p

	let sqr = LongVariable * LongVariable ~

Observa que "yw" incluye el espacio en blanco después de la palabra.  Si no
quieres que esto ocurra, usa "ye".

El comando "yy" copia una sola línea, al igual que "dd" la elimina.  Sin
embargo, mientras que "D" elimina desde el cursor hasta el final de la línea,
"Y" funciona como "yy", copiando la línea completa.  ¡Cuidado con esta
inconsistencia! Usa "y$" para copiar sólo hasta el final.

	línea de texto   yy	línea de texto         línea de texto
	línea 2			línea 2		p      línea 2
	última línea		última línea	       línea de texto
						       última línea

==============================================================================
*04.7*	Uso del portapapeles

Si estás usando la versión GUI de Vim (gvim), puedes usar la opción "Copiar"
del menú "Edit".  Primero selecciona el texto en modo Visual, luego usa el
menú Editar/Copiar.  Así el texto seleccionado se copia al portapapeles.
Ahora puedes pegarlo en otros programas o en el propio Vim.

Si has copiado texto en el portapapeles desde otra aplicación, puedes pegarlo
en Vim con el menú Editar/Pegar.  Esto funciona en modo Normal y en modo
Insertar.  En modo Visual el texto seleccionado es reemplazado.

La opción "Cortar" del menú elimina el texto antes de ponerlo en el
portapapeles.  Las opciones "Cortar", "Copiar" y "Pegar" están disponibles
también en el menú popup (sólo cuando esté disponible).  Si tu Vim tiene barra
de tareas, puedes encontrar estos botones también allí.

Si no usas el GUI o no te gusta usar el menú, tienes otro modo.  Usa el comando
"y" normal (copiar) y "p" (poner), pero antes escribe "* (comillas dobles,
asterisco).  Para copiar una línea en el portapapeles: >

	"*yy

Para poner texto desde el portapapeles en el texto: >

	"*p

Esto sólo funciona en versiones de Vim que incluyen soporte para portapapeles.
Más sobre el portapapeles en la sección |09.3| y aquí: |clipboard|.

==============================================================================
*04.8*	Objetos de texto

Si el cursor está en medio de una palabra y la quieres eliminar, tienes que
desplazarte hasta su comienzo antes de que puedas hacer "dw".  Hay un modo más
sencillo de hacer esto: "daw".

	esto es texto de ejemplo. ~
		 daw

	esto es de ejemplo. ~

La "d" de "daw" es el operador de eliminación.  "aw" es el objeto de texto.
Truco: "aw" viene de "A Word".  Por lo que "daw" es "Delete A Word".  Para ser
más precisos, el espacio después de la palabra también es eliminado (el
espacio antes de la palabra si ésta se encuentra al final de una línea).

Usar objetos de texto es la tercera manera de hacer cambios en Vim: 
el operador-movimiento, el modo Visual, y ahora el operador-objeto de texto.
   Es muy similar al operador-movimiento, pero en lugar de operar en el texto
entre la posición inicial y final del cursor, el objeto de texto se emplea en
su totalidad.  No importa en que lugar del objeto se encontraba el cursor
antes del comando.

Para cambiar una oración completa usa "cis".  Prueba este texto:

	¿Qué tal?  Esto ~
	es un ejemplo.  Algo ~
	de texto. ~

Ve hacia el comienzo de la segunda línea, sobre el "es un".  Ahora usa "cis":

	¿Qué tal?    Algo ~
	de texto. ~

El cursor está entre los espacios de la primera línea.  Ahora escribe la nueva
frase "Otra línea.":

	¿Qué tal?  Otra línea.  Algo ~
	de texto. ~

"cis" consiste en el operador "c" (cambiar) y el objeto de texto "is".  Esto
viene de "Inner Sentence".  También hay un objeto "as" (a sentence).  La
diferencia es que "as" incluye el espacio en blanco después de la frase e "is"
no.  Si quieres eliminar la frase y quieres eliminar al mismo tiempo el
espacio en blanco posterior, entonces usa "das".  Si quieres escribir otro
texto, el espacio puede permanecer, con lo que puedes usar "cis".

También puedes usar los objetos de texto on modo Visual.  Incluirá el objeto
de texto en la selección. El modo Visual permanece, así que puedes hacerlo
varias veces.  Por ejemplo, comienza el modo Visual con "v" y selecciona una
frase con "as".  Ahora puedes repetir el "as" para incluir más frases.
Por último, usa un operador para hacer algo con las frases seleccionadas.

Puedes encontrar una larga lista de objetos de texto aquí: |text-objects|.

==============================================================================
*04.9*	Replace mode

El comando "R" hace que Vim entre en modo reemplazar.  En este modo, cada
carácter que introduzcas reemplaza al que está debajo del cursor.  Esto
continúa hasta que pulsas <Esc>.
   En este ejemplo comienzas el modo Reemplazar en la primera "t" de "texto":

	Esto es texto. ~
		Rinteresante.<Esc>

	Esto es interesante. ~

Puede que te hayas dado cuenta de que has reemplazado 5 caracteres en la línea
con otros doce.  El comando "R" automáticamente extiende la línea si se queda
sin caracteres que reemplazar.  Esto no ocurrirá en la siguiente línea.

Puedes alternar el modo Insertar y Reemplazar con la tecla <Insert>.

Cuando usas <Retroceso> para hacer una corrección comprobarás que el texto
anterior reaparece.  Por lo tanto, funciona como el comando deshacer para el
último carácter tecleado.

==============================================================================
*04.10*	Conclusión

Los operadores, comandos de movimiento y los objetos de texto te dan
múltiples posibilidades para hacer muchas combinaciones.  Ahora que sabes cómo
funciona, conoces ¡N operadores con M comandos de movimiento = M * N comandos!

Puedes usar la lista completa de operadores aquí: |operator|

Por ejemplo, hay otras muchas maneras de eliminar porciones de texto.  Aquí
tienes algunas de las más empleadas:

x	elimina el carácter bajo el cursor (abreviado de "dl")
X	elimina el carácter antes del cursor (abreviado de "dh")
D	elimina desde el cursor hasta el final de línea (abreviado de "d$")
dw	elimina desde el cursor hasta el próximo comienzo de palabra
db	elimina desde el cursor hasta el anterior comienzo de palabra
diw	elimina la palabra bajo el cursor (excluyendo el espacio en blanco)
daw	elimina la palabra bajo el cursor (incluyendo el espacio en blanco)
dG	elimina hasta el final del archivo
dgg	elimina hasta el final del archivo

Si usas "c" en lugar de "d" se convierten en comandos de cambio.  Y con "y"
copias el texto.  Y así sigue...


Hay algunos otros comandos que no encajan en ningún otro lugar, por lo tanto
se explican a continuación:

	~	cambia el carácter bajo el cursor de minúsculas a mayúsculas y
                al revés, moviéndose al siguiente carácter.  No es un operador
                (a menos que 'tildeop' esté activado), por lo que no lo puedes
                usar con un movimiento.  Funciona en modo Visual y cambia todo
                lo que está seleccionado.

	I	Inicia el modo insertar y desplaza el cursor al primer
                carácter no vacío de la línea.

	A       Inicia el modo insertar y desplaza el cursor al último
                carácter de la línea.

==============================================================================

Capítulo siguiente: |usr_05.txt|  Configuración

Copyright: ver |manual-copyright|  vim:tw=78:ts=8:ft=help:norl:
