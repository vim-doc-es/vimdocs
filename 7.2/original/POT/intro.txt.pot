# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the Vim package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Vim 7.2\n"
"Report-Msgid-Bugs-To: vim@bugs.org\n"
"POT-Creation-Date: 2009-11-26 17:29+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: ENCODING"

#. type: Plain text
#: original/TXT/intro.txt:2
#, no-wrap
msgid "*intro.txt*     For Vim version 7.2.  Last change: 2008 Jun 24\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:5
#, no-wrap
msgid "\t\t  VIM REFERENCE MANUAL    by Bram Moolenaar\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:8
#, no-wrap
msgid "Introduction to Vim\t\t\t\t\t*ref* *reference*\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:17
#, no-wrap
msgid ""
"1. Introduction\t\t\t|intro|\n"
"2. Vim on the internet\t\t|internet|\n"
"3. Credits\t\t\t|credits|\n"
"4. Notation\t\t\t|notation|\n"
"5. Modes, introduction\t\t|vim-modes-intro|\n"
"6. Switching from mode to mode\t|mode-switching|\n"
"7. The window contents\t\t|window-contents|\n"
"8. Definitions\t\t\t|definitions|\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:18 original/TXT/intro.txt:75
#: original/TXT/intro.txt:176 original/TXT/intro.txt:285
#: original/TXT/intro.txt:513 original/TXT/intro.txt:591
#: original/TXT/intro.txt:684 original/TXT/intro.txt:812
#: original/TXT/intro.txt:875 original/TXT/usr_toc.txt:7
#: original/TXT/usr_toc.txt:58 original/TXT/usr_toc.txt:172
#: original/TXT/usr_toc.txt:280 original/TXT/usr_toc.txt:339
#: original/TXT/usr_toc.txt:351 original/TXT/usr_01.txt:19
#: original/TXT/usr_01.txt:50 original/TXT/usr_01.txt:100
#: original/TXT/usr_01.txt:181 original/TXT/usr_02.txt:25
#: original/TXT/usr_02.txt:69 original/TXT/usr_02.txt:130
#: original/TXT/usr_02.txt:179 original/TXT/usr_02.txt:239
#: original/TXT/usr_02.txt:307 original/TXT/usr_02.txt:369
#: original/TXT/usr_02.txt:406 original/TXT/usr_02.txt:560
#: original/TXT/usr_03.txt:28 original/TXT/usr_03.txt:74
#: original/TXT/usr_03.txt:101 original/TXT/usr_03.txt:147
#: original/TXT/usr_03.txt:172 original/TXT/usr_03.txt:223
#: original/TXT/usr_03.txt:265 original/TXT/usr_03.txt:320
#: original/TXT/usr_03.txt:491 original/TXT/usr_03.txt:552
#: original/TXT/usr_03.txt:650 original/TXT/usr_04.txt:27
#: original/TXT/usr_04.txt:74 original/TXT/usr_04.txt:160
#: original/TXT/usr_04.txt:194 original/TXT/usr_04.txt:269
#: original/TXT/usr_04.txt:324 original/TXT/usr_04.txt:360
#: original/TXT/usr_04.txt:390 original/TXT/usr_04.txt:446
#: original/TXT/usr_04.txt:469 original/TXT/usr_04.txt:510
#: original/TXT/usr_05.txt:24 original/TXT/usr_05.txt:63
#: original/TXT/usr_05.txt:219 original/TXT/usr_05.txt:266
#: original/TXT/usr_05.txt:418 original/TXT/usr_05.txt:467
#: original/TXT/usr_05.txt:506 original/TXT/usr_05.txt:621
#: original/TXT/usr_06.txt:24 original/TXT/usr_06.txt:50
#: original/TXT/usr_06.txt:135 original/TXT/usr_06.txt:189
#: original/TXT/usr_06.txt:266 original/TXT/usr_06.txt:272
#: original/TXT/usr_07.txt:24 original/TXT/usr_07.txt:63
#: original/TXT/usr_07.txt:179 original/TXT/usr_07.txt:266
#: original/TXT/usr_07.txt:316 original/TXT/usr_07.txt:404
#: original/TXT/usr_07.txt:444 original/TXT/usr_07.txt:475
#: original/TXT/usr_08.txt:26 original/TXT/usr_08.txt:82
#: original/TXT/usr_08.txt:109 original/TXT/usr_08.txt:161
#: original/TXT/usr_08.txt:215 original/TXT/usr_08.txt:278
#: original/TXT/usr_08.txt:337 original/TXT/usr_08.txt:477
#: original/TXT/usr_08.txt:509 original/TXT/usr_08.txt:597
#: original/TXT/usr_09.txt:21 original/TXT/usr_09.txt:124
#: original/TXT/usr_09.txt:175 original/TXT/usr_09.txt:259
#: original/TXT/usr_09.txt:285 original/TXT/usr_10.txt:27
#: original/TXT/usr_10.txt:144 original/TXT/usr_10.txt:221
#: original/TXT/usr_10.txt:342 original/TXT/usr_10.txt:378
#: original/TXT/usr_10.txt:547 original/TXT/usr_10.txt:621
#: original/TXT/usr_10.txt:667 original/TXT/usr_10.txt:692
#: original/TXT/usr_10.txt:820 original/TXT/usr_11.txt:22
#: original/TXT/usr_11.txt:66 original/TXT/usr_11.txt:126
#: original/TXT/usr_11.txt:268 original/TXT/usr_11.txt:283
#: original/TXT/usr_12.txt:25 original/TXT/usr_12.txt:90
#: original/TXT/usr_12.txt:131 original/TXT/usr_12.txt:177
#: original/TXT/usr_12.txt:202 original/TXT/usr_12.txt:231
#: original/TXT/usr_12.txt:281 original/TXT/usr_12.txt:309
#: original/TXT/usr_12.txt:354 original/TXT/usr_20.txt:22
#: original/TXT/usr_20.txt:113 original/TXT/usr_20.txt:158
#: original/TXT/usr_20.txt:285 original/TXT/usr_20.txt:327
#: original/TXT/usr_20.txt:380 original/TXT/usr_21.txt:24
#: original/TXT/usr_21.txt:47 original/TXT/usr_21.txt:87
#: original/TXT/usr_21.txt:236 original/TXT/usr_21.txt:385
#: original/TXT/usr_21.txt:438 original/TXT/usr_21.txt:495
#: original/TXT/usr_22.txt:22 original/TXT/usr_22.txt:148
#: original/TXT/usr_22.txt:213 original/TXT/usr_22.txt:272
#: original/TXT/usr_22.txt:396 original/TXT/usr_23.txt:23
#: original/TXT/usr_23.txt:114 original/TXT/usr_23.txt:156
#: original/TXT/usr_23.txt:238 original/TXT/usr_23.txt:324
#: original/TXT/usr_23.txt:339 original/TXT/usr_24.txt:28
#: original/TXT/usr_24.txt:96 original/TXT/usr_24.txt:119
#: original/TXT/usr_24.txt:268 original/TXT/usr_24.txt:305
#: original/TXT/usr_24.txt:336 original/TXT/usr_24.txt:369
#: original/TXT/usr_24.txt:493 original/TXT/usr_24.txt:537
#: original/TXT/usr_24.txt:583 original/TXT/usr_24.txt:602
#: original/TXT/usr_25.txt:22 original/TXT/usr_25.txt:132
#: original/TXT/usr_25.txt:210 original/TXT/usr_25.txt:287
#: original/TXT/usr_25.txt:453 original/TXT/usr_25.txt:574
#, no-wrap
msgid "==============================================================================\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:20
#, no-wrap
msgid "1. Introduction\t\t\t\t\t\t*intro*\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:29
#, no-wrap
msgid ""
"Vim stands for Vi IMproved.  It used to be Vi IMitation, but there are so many\n"
"improvements that a name change was appropriate.  Vim is a text editor which\n"
"includes almost all the commands from the Unix program \"Vi\" and a lot of new\n"
"ones.  It is very useful for editing programs and other plain text.\n"
"   All commands are given with the keyboard.  This has the advantage that you\n"
"can keep your fingers on the keyboard and your eyes on the screen.  For those\n"
"who want it, there is mouse support and a GUI version with scrollbars and\n"
"menus (see |gui.txt|).\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:36
#, no-wrap
msgid ""
"An overview of this manual can be found in the file \"help.txt\", |help.txt|.\n"
"It can be accessed from within Vim with the <Help> or <F1> key and with the\n"
"|:help| command (just type \":help\", without the bars or quotes).\n"
"   The 'helpfile' option can be set to the name of the help file, in case it\n"
"is not located in the default place.  You can jump to subjects like with tags:\n"
"Use CTRL-] to jump to a subject under the cursor, use CTRL-T to jump back.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:40
msgid ""
"Throughout this manual the differences between Vi and Vim are mentioned in "
"curly braces, like this: {Vi does not have on-line help}.  See |vi_diff.txt| "
"for a summary of the differences between Vim and Vi."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:45
msgid ""
"This manual refers to Vim on various machines.  There may be small "
"differences between different computers and terminals.  Besides the remarks "
"given in this document, there is a separate document for each supported "
"system, see |sys-file-list|."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:50
msgid ""
"This manual is a reference for all the Vim commands and options.  This is "
"not an introduction to the use of Vi or Vim, it gets a bit complicated here "
"and there.  For beginners, there is a hands-on |tutor|.  To learn using Vim, "
"read the user manual |usr_toc.txt|."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:54
#, no-wrap
msgid ""
"\t\t\t\t\t\t\t*book*\n"
"There are many books on Vi that contain a section for beginners.  There are\n"
"two books I can recommend:\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:56
#, no-wrap
msgid "\t\"Vim - Vi Improved\" by Steve Oualline\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:67
#, no-wrap
msgid ""
"This is the very first book completely dedicated to Vim.  It is very good for\n"
"beginners.  The most often used commands are explained with pictures and\n"
"examples.  The less often used commands are also explained, the more advanced\n"
"features are summarized.  There is a comprehensive index and a quick\n"
"reference.  Parts of this book have been included in the user manual\n"
"|frombook|.\n"
"Published by New Riders Publishing.  ISBN: 0735710015\n"
"For more information try one of these:\n"
"\thttp://iccf-holland.org/click5.html\n"
"\thttp://www.vim.org/iccf/click5.html\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:69
#, no-wrap
msgid "\t\"Learning the Vi editor\" by Linda Lamb and Arnold Robbins\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:74
msgid ""
"This is a book about Vi that includes a chapter on Vim (in the sixth "
"edition).  The first steps in Vi are explained very well.  The commands that "
"Vim adds are only briefly mentioned.  There is also a German translation.  "
"Published by O'Reilly.  ISBN: 1-56592-426-6."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:77
#, no-wrap
msgid "2. Vim on the internet\t\t\t\t\t*internet*\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:82
#, no-wrap
msgid ""
"\t\t\t*www* *WWW*  *faq* *FAQ* *distribution* *download*\n"
"The Vim pages contain the most recent information about Vim.  They also\n"
"contain links to the most recent version of Vim.  The FAQ is a list of\n"
"Frequently Asked Questions.  Read this if you have problems.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:86
#, no-wrap
msgid ""
"\tVIM home page:\t  http://www.vim.org/\n"
"\tVIM FAQ:\t  http://vimdoc.sf.net/\n"
"\tDownloading:\t  ftp://ftp.vim.org/pub/vim/MIRRORS\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:92
#, no-wrap
msgid ""
"Usenet News group where Vim is discussed:\t\t*news* *usenet*\n"
"\tcomp.editors\n"
"This group is also for other editors.  If you write about Vim, don't forget to\n"
"mention that.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:112
#, no-wrap
msgid ""
"\t\t\t\t\t\t*mail-list* *maillist*\n"
"There are several mailing lists for Vim:\n"
"<vim@vim.org>\n"
"\tFor discussions about using existing versions of Vim: Useful mappings,\n"
"\tquestions, answers, where to get a specific version, etc.  There are\n"
"\tquite a few people watching this list and answering questions, also\n"
"\tfor beginners.  Don't hesitate to ask your question here.\n"
"<vim-dev@vim.org>\t\t\t\t*vim-dev* *vimdev*\n"
"\tFor discussions about changing Vim: New features, porting, patches,\n"
"\tbeta-test versions, etc.\n"
"<vim-announce@vim.org>\t\t\t\t*vim-announce*\n"
"\tAnnouncements about new versions of Vim; also for beta-test versions\n"
"\tand ports to different systems.  This is a read-only list.\n"
"<vim-multibyte@vim.org>\t\t\t\t*vim-multibyte*\n"
"\tFor discussions about using and improving the multi-byte aspects of\n"
"\tVim.\n"
"<vim-mac@vim.org>\t\t\t\t*vim-mac*\n"
"\tFor discussions about using and improving the Macintosh version of\n"
"\tVim.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:114
msgid "See http://www.vim.org/maillist.php for the latest information."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:120
#, no-wrap
msgid ""
"NOTE:\n"
"- You can only send messages to these lists if you have subscribed!\n"
"- You need to send the messages from the same location as where you subscribed\n"
"  from (to avoid spam mail).\n"
"- Maximum message size is 40000 characters.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:126
#, no-wrap
msgid ""
"\t\t\t\t\t\t*subscribe-maillist*\n"
"If you want to join, send a message to\n"
"\t<vim-subscribe@vim.org>\n"
"Make sure that your \"From:\" address is correct.  Then the list server will\n"
"give you help on how to subscribe.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:130
#, no-wrap
msgid ""
"\t\t\t\t\t\t*maillist-archive*\n"
"For more information and archives look on the Vim maillist page:\n"
"http://www.vim.org/maillist.php\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:133
#, no-wrap
msgid "Bug reports:\t\t\t\t*bugs* *bug-reports* *bugreport.vim*\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:141
msgid ""
"Send bug reports to: Vim bugs <bugs@vim.org> This is not a maillist but the "
"message is redirected to the Vim maintainer.  Please be brief; all the time "
"that is spent on answering mail is subtracted from the time that is spent on "
"improving Vim! Always give a reproducible example and try to find out which "
"settings or other things influence the appearance of the bug.  Try different "
"machines, if possible.  Send me patches if you can!"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:148
#, no-wrap
msgid ""
"It will help to include information about the version of Vim you are using and\n"
"your setup.  You can get the information with this command: >\n"
"   :so $VIMRUNTIME/bugreport.vim\n"
"This will create a file \"bugreport.txt\" in the current directory, with a lot\n"
"of information of your environment.  Before sending this out, check if it\n"
"doesn't contain any confidential information!\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:151
msgid ""
"If Vim crashes, please try to find out where.  You can find help on this "
"here: |debug.txt|."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:155
msgid ""
"In case of doubt or when you wonder if the problem has already been fixed "
"but you can't find a fix for it, become a member of the vim-dev maillist and "
"ask your question there. |maillist|"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:161
#, no-wrap
msgid ""
"\t\t\t\t\t\t\t*year-2000* *Y2K*\n"
"Since Vim internally doesn't use dates for editing, there is no year 2000\n"
"problem to worry about.  Vim does use the time in the form of seconds since\n"
"January 1st 1970.  It is used for a time-stamp check of the edited file and\n"
"the swap file, which is not critical and should only cause warning messages.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:167
msgid ""
"There might be a year 2038 problem, when the seconds don't fit in a 32 bit "
"int anymore.  This depends on the compiler, libraries and operating system.  "
"Specifically, time_t and the ctime() function are used.  And the time_t is "
"stored in four bytes in the swap file.  But that's only used for printing a "
"file date/time for recovery, it will never affect normal editing."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:172
msgid ""
"The Vim strftime() function directly uses the strftime() system function.  "
"localtime() uses the time() system function.  getftime() uses the time "
"returned by the stat() system function.  If your system libraries are year "
"2000 compliant, Vim is too."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:175
msgid ""
"The user may create scripts for Vim that use external commands.  These might "
"introduce Y2K problems, but those are not really part of Vim itself."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:178
#, no-wrap
msgid "3. Credits\t\t\t\t*credits* *author* *Bram* *Moolenaar*\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:180
msgid "Most of Vim was written by Bram Moolenaar <Bram@vim.org>."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:185
#, no-wrap
msgid ""
"Parts of the documentation come from several Vi manuals, written by:\n"
"\tW.N. Joy\n"
"\tAlan P.W. Hewett\n"
"\tMark Horton\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:189
msgid ""
"The Vim editor is based on Stevie and includes (ideas from) other software, "
"worked on by the people mentioned here.  Other people helped by sending me "
"patches, suggestions and giving feedback about what is good and bad in Vim."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:191
msgid ""
"Vim would never have become what it is now, without the help of these people!"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:253
#, no-wrap
msgid ""
"\tRon Aaron\t\tWin32 GUI changes\n"
"\tZoltan Arpadffy\t\twork on VMS port\n"
"\tTony Andrews\t\tStevie\n"
"\tGert van Antwerpen\tchanges for DJGPP on MS-DOS\n"
"\tBerkeley DB(3)\t\tideas for swap file implementation\n"
"\tKeith Bostic\t\tNvi\n"
"\tWalter Briscoe\t\tMakefile updates, various patches\n"
"\tRalf Brown\t\tSPAWNO library for MS-DOS\n"
"\tRobert Colon\t\tmany useful remarks\n"
"\tMarcin Dalecki\t\tGTK+ GUI port, toolbar icons, gettext()\n"
"\tKayhan Demirel\t\tsent me news in Uganda\n"
"\tChris & John Downey\txvi (ideas for multi-windows version)\n"
"\tHenk Elbers\t\tfirst VMS port\n"
"\tDaniel Elstner\t\tGTK+ 2 port\n"
"\tEric Fischer\t\tMac port, 'cindent', and other improvements\n"
"\tBenji Fisher\t\tAnswering lots of user questions\n"
"\tBill Foster\t\tAthena GUI port\n"
"\tGoogle\t\t\tLets me work on Vim one day a week\n"
"\tLoic Grenie\t\txvim (ideas for multi windows version)\n"
"\tSven Guckes\t\tVim promoter and previous WWW page maintainer\n"
"\tDarren Hiebert\t\tExuberant ctags\n"
"\tJason Hildebrand\tGTK+ 2 port\n"
"\tBruce Hunsaker\t\timprovements for VMS port\n"
"\tAndy Kahn\t\tCscope support, GTK+ GUI port\n"
"\tOezguer Kesim\t\tMaintainer of Vim Mailing Lists\n"
"\tAxel Kielhorn\t\twork on the Macintosh port\n"
"\tSteve Kirkendall\tElvis\n"
"\tRoger Knobbe\t\toriginal port to Windows NT\n"
"\tSergey Laskavy\t\tVim's help from Moscow\n"
"\tFelix von Leitner\tPrevious maintainer of Vim Mailing Lists\n"
"\tDavid Leonard\t\tPort of Python extensions to Unix\n"
"\tAvner Lottem\t\tEdit in right-to-left windows\n"
"\tFlemming Madsen\t\tX11 client-server, various features and patches\n"
"\tMicrosoft\t\tGave me a copy of DevStudio to compile Vim with\n"
"\tPaul Moore\t\tPython interface extensions, many patches\n"
"\tKatsuhito Nagano\tWork on multi-byte versions\n"
"\tSung-Hyun Nam\t\tWork on multi-byte versions\n"
"\tVince Negri\t\tWin32 GUI and generic console enhancements\n"
"\tSteve Oualline\t\tAuthor of the first Vim book |frombook|\n"
"\tDominique Pelle\t\tfiguring out valgrind reports and fixes\n"
"\tA.Politz\t\tMany bug reports and some fixes\n"
"\tGeorge V. Reilly\tWin32 port, Win32 GUI start-off\n"
"\tStephen Riehm\t\tbug collector\n"
"\tStefan Roemer\t\tvarious patches and help to users\n"
"\tRalf Schandl\t\tIBM OS/390 port\n"
"\tOlaf Seibert\t\tDICE and BeBox version, regexp improvements\n"
"\tMortaza Shiran\t\tFarsi patches\n"
"\tPeter da Silva\t\ttermlib\n"
"\tPaul Slootman\t\tOS/2 port\n"
"\tHenry Spencer\t\tregular expressions\n"
"\tDany St-Amant\t\tMacintosh port\n"
"\tTim Thompson\t\tStevie\n"
"\tG. R. (Fred) Walter\tStevie\n"
"\tSven Verdoolaege\tPerl interface\n"
"\tRobert Webb\t\tCommand-line completion, GUI versions, and\n"
"\t\t\t\tlots of patches\n"
"\tIngo Wilken\t\tTcl interface\n"
"\tMike Williams\t\tPostScript printing\n"
"\tJuergen Weigert\t\tLattice version, AUX improvements, UNIX and\n"
"\t\t\t\tMS-DOS ports, autoconf\n"
"\tStefan 'Sec' Zehl\tMaintainer of vim.org\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:257
msgid ""
"I wish to thank all the people that sent me bug reports and suggestions.  "
"The list is too long to mention them all here.  Vim would not be the same "
"without the ideas from all these people: They keep Vim alive!"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:284
#, no-wrap
msgid ""
"In this documentation there are several references to other versions of Vi:\n"
"\t\t\t\t\t\t\t*Vi* *vi*\n"
"Vi\t\"the original\".  Without further remarks this is the version\n"
"\tof Vi that appeared in Sun OS 4.x.  \":version\" returns\n"
"\t\"Version 3.7, 6/7/85\".  Sometimes other versions are referred\n"
"\tto.  Only runs under Unix.  Source code only available with a\n"
"\tlicense.  More information on Vi can be found through:\n"
"\t\thttp://vi-editor.org\t[doesn't currently work...]\n"
"\t\t\t\t\t\t\t*Posix*\n"
"Posix\tFrom the IEEE standard 1003.2, Part 2: Shell and utilities.\n"
"\tGenerally known as \"Posix\".  This is a textual description of\n"
"\thow Vi is supposed to work.\n"
"\tSee |posix-compliance|.\n"
"\t\t\t\t\t\t\t*Nvi*\n"
"Nvi\tThe \"New\" Vi.  The version of Vi that comes with BSD 4.4 and FreeBSD.\n"
"\tVery good compatibility with the original Vi, with a few extensions.\n"
"\tThe version used is 1.79.  \":version\" returns \"Version 1.79\n"
"\t(10/23/96)\".  There has been no release the last few years, although\n"
"\tthere is a development version 1.81.\n"
"\tSource code is freely available.\n"
"\t\t\t\t\t\t\t*Elvis*\n"
"Elvis\tAnother Vi clone, made by Steve Kirkendall.  Very compact but isn't\n"
"\tas flexible as Vim.\n"
"\tThe version used is 2.1.  It is still being developed.  Source code is\n"
"\tfreely available.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:287
#, no-wrap
msgid "4. Notation\t\t\t\t\t\t*notation*\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:291
msgid ""
"When syntax highlighting is used to read this, text that is not typed "
"literally is often highlighted with the Special group.  These are items in "
"[], {} and <>, and CTRL-X."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:294
msgid ""
"Note that Vim uses all possible characters in commands.  Sometimes the [], "
"{} and <> are part of what you type, the context should make this clear."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:297
#, no-wrap
msgid "[]\t\tCharacters in square brackets are optional.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:307
#, no-wrap
msgid ""
"\t\t\t\t\t\t    *count* *[count]* *E489*\n"
"[count]\t\tAn optional number that may precede the command to multiply\n"
"\t\tor iterate the command.  If no number is given, a count of one\n"
"\t\tis used, unless otherwise noted.  Note that in this manual the\n"
"\t\t[count] is not mentioned in the description of the command,\n"
"\t\tbut only in the explanation.  This was done to make the\n"
"\t\tcommands easier to look up.  If the 'showcmd' option is on,\n"
"\t\tthe (partially) entered count is shown at the bottom of the\n"
"\t\twindow.  You can use <Del> to erase the last digit (|N<Del>|).\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:318
#, no-wrap
msgid ""
"\t\t\t\t\t\t\t*[quotex]*\n"
"[\"x]\t\tAn optional register designation where text can be stored.\n"
"\t\tSee |registers|.  The x is a single character between 'a' and\n"
"\t\t'z' or 'A' and 'Z' or '\"', and in some cases (with the put\n"
"\t\tcommand) between '0' and '9', '%', '#', or others.  The\n"
"\t\tuppercase and lowercase letter designate the same register,\n"
"\t\tbut the lowercase letter is used to overwrite the previous\n"
"\t\tregister contents, while the uppercase letter is used to\n"
"\t\tappend to the previous register contents.  Without the \"\"x\" or\n"
"\t\twith \"\"\"\" the stored text is put into the unnamed register.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:324
#, no-wrap
msgid ""
"\t\t\t\t\t\t\t*{}*\n"
"{}\t\tCurly braces denote parts of the command which must appear,\n"
"\t\tbut which can take a number of different values.  The\n"
"\t\tdifferences between Vim and Vi are also given in curly braces\n"
"\t\t(this will be clear from the context).\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:330
#, no-wrap
msgid ""
"\t\t\t\t\t\t\t*{char1-char2}*\n"
"{char1-char2}\tA single character from the range char1 to char2.  For\n"
"\t\texample: {a-z} is a lowercase letter.  Multiple ranges may be\n"
"\t\tconcatenated.  For example, {a-zA-Z0-9} is any alphanumeric\n"
"\t\tcharacter.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:360
#, no-wrap
msgid ""
"\t\t\t\t\t\t*{motion}* *movement*\n"
"{motion}\tA command that moves the cursor.  These are explained in\n"
"\t\t|motion.txt|.  Examples:\n"
"\t\t\tw\t\tto start of next word\n"
"\t\t\tb\t\tto begin of current word\n"
"\t\t\t4j\t\tfour lines down\n"
"\t\t\t/The<CR>\tto next occurrence of \"The\"\n"
"\t\tThis is used after an |operator| command to move over the text\n"
"\t\tthat is to be operated upon.\n"
"\t\t- If the motion includes a count and the operator also has a\n"
"\t\t  count, the two counts are multiplied.  For example: \"2d3w\"\n"
"\t\t  deletes six words.\n"
"\t\t- The motion can be backwards, e.g. \"db\" to delete to the\n"
"\t\t  start of the word.\n"
"\t\t- The motion can also be a mouse click.  The mouse is not\n"
"\t\t  supported in every terminal though.\n"
"\t\t- The \":omap\" command can be used to map characters while an\n"
"\t\t  operator is pending.\n"
"\t\t- Ex commands can be used to move the cursor.  This can be\n"
"\t\t  used to call a function that does some complicated motion.\n"
"\t\t  The motion is always characterwise exclusive, no matter\n"
"\t\t  what \":\" command is used.  This means it's impossible to\n"
"\t\t  include the last character of a line without the line break\n"
"\t\t  (unless 'virtualedit' is set).\n"
"\t\t  If the Ex command changes the text before where the operator\n"
"\t\t  starts or jumps to another buffer the result is\n"
"\t\t  unpredictable.  It is possible to change the text further\n"
"\t\t  down.  Jumping to another buffer is possible if the current\n"
"\t\t  buffer is not unloaded.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:368
#, no-wrap
msgid ""
"\t\t\t\t\t\t\t*{Visual}*\n"
"{Visual}\tA selected text area.  It is started with the \"v\", \"V\", or\n"
"\t\tCTRL-V command, then any cursor movement command can be used\n"
"\t\tto change the end of the selected text.\n"
"\t\tThis is used before an |operator| command to highlight the\n"
"\t\ttext that is to be operated upon.\n"
"\t\tSee |Visual-mode|.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:372
#, no-wrap
msgid ""
"\t\t\t\t\t\t\t*<character>*\n"
"<character>\tA special character from the table below, optionally with\n"
"\t\tmodifiers, or a single ASCII character with modifiers.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:375
#, no-wrap
msgid ""
"\t\t\t\t\t\t\t*'character'*\n"
"'c'\t\tA single ASCII character.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:382
#, no-wrap
msgid ""
"\t\t\t\t\t\t\t*CTRL-{char}*\n"
"CTRL-{char}\t{char} typed as a control character; that is, typing {char}\n"
"\t\twhile holding the CTRL key down.  The case of {char} does not\n"
"\t\tmatter; thus CTRL-A and CTRL-a are equivalent.  But on some\n"
"\t\tterminals, using the SHIFT key will produce another code,\n"
"\t\tdon't use it then.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:386
#, no-wrap
msgid ""
"\t\t\t\t\t\t\t*'option'*\n"
"'option'\tAn option, or parameter, that can be set to a value, is\n"
"\t\tenclosed in single quotes.  See |options|.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:390
#, no-wrap
msgid ""
"\t\t\t\t\t\t\t*quotecommandquote*\n"
"\"command\"\tA reference to a command that you can type is enclosed in\n"
"\t\tdouble quotes.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:395
#, no-wrap
msgid ""
"\t\t\t\t\t*key-notation* *key-codes* *keycodes*\n"
"These names for keys are used in the documentation.  They can also be used\n"
"with the \":map\" command (insert the key name by pressing CTRL-K and then the\n"
"key you want the name for).\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:397
#, no-wrap
msgid ""
"notation\tmeaning\t\t    equivalent\tdecimal value(s)\t~\n"
"-----------------------------------------------------------------------\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:415
#, no-wrap
msgid ""
"<Nul>\t\tzero\t\t\tCTRL-@\t  0 (stored as 10) *<Nul>*\n"
"<BS>\t\tbackspace\t\tCTRL-H\t  8\t*backspace*\n"
"<Tab>\t\ttab\t\t\tCTRL-I\t  9\t*tab* *Tab*\n"
"\t\t\t\t\t\t\t*linefeed*\n"
"<NL>\t\tlinefeed\t\tCTRL-J\t 10 (used for <Nul>)\n"
"<FF>\t\tformfeed\t\tCTRL-L\t 12\t*formfeed*\n"
"<CR>\t\tcarriage return\t\tCTRL-M\t 13\t*carriage-return*\n"
"<Return>\tsame as <CR>\t\t\t\t*<Return>*\n"
"<Enter>\t\tsame as <CR>\t\t\t\t*<Enter>*\n"
"<Esc>\t\tescape\t\t\tCTRL-[\t 27\t*escape* *<Esc>*\n"
"<Space>\t\tspace\t\t\t\t 32\t*space*\n"
"<lt>\t\tless-than\t\t<\t 60\t*<lt>*\n"
"<Bslash>\tbackslash\t\t\\\t 92\t*backslash* *<Bslash>*\n"
"<Bar>\t\tvertical bar\t\t|\t124\t*<Bar>*\n"
"<Del>\t\tdelete\t\t\t\t127\n"
"<CSI>\t\tcommand sequence intro  ALT-Esc 155\t*<CSI>*\n"
"<xCSI>\t\tCSI when typed in the GUI\t\t*<xCSI>*\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:418
#, no-wrap
msgid ""
"<EOL>\t\tend-of-line (can be <CR>, <LF> or <CR><LF>,\n"
"\t\tdepends on system and 'fileformat')\t*<EOL>*\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:455
#, no-wrap
msgid ""
"<Up>\t\tcursor-up\t\t\t*cursor-up* *cursor_up*\n"
"<Down>\t\tcursor-down\t\t\t*cursor-down* *cursor_down*\n"
"<Left>\t\tcursor-left\t\t\t*cursor-left* *cursor_left*\n"
"<Right>\t\tcursor-right\t\t\t*cursor-right* *cursor_right*\n"
"<S-Up>\t\tshift-cursor-up\n"
"<S-Down>\tshift-cursor-down\n"
"<S-Left>\tshift-cursor-left\n"
"<S-Right>\tshift-cursor-right\n"
"<C-Left>\tcontrol-cursor-left\n"
"<C-Right>\tcontrol-cursor-right\n"
"<F1> - <F12>\tfunction keys 1 to 12\t\t*function_key* *function-key*\n"
"<S-F1> - <S-F12> shift-function keys 1 to 12\t*<S-F1>*\n"
"<Help>\t\thelp key\n"
"<Undo>\t\tundo key\n"
"<Insert>\tinsert key\n"
"<Home>\t\thome\t\t\t\t*home*\n"
"<End>\t\tend\t\t\t\t*end*\n"
"<PageUp>\tpage-up\t\t\t\t*page_up* *page-up*\n"
"<PageDown>\tpage-down\t\t\t*page_down* *page-down*\n"
"<kHome>\t\tkeypad home (upper left)\t*keypad-home*\n"
"<kEnd>\t\tkeypad end (lower left)\t\t*keypad-end*\n"
"<kPageUp>\tkeypad page-up (upper right)\t*keypad-page-up*\n"
"<kPageDown>\tkeypad page-down (lower right)\t*keypad-page-down*\n"
"<kPlus>\t\tkeypad +\t\t\t*keypad-plus*\n"
"<kMinus>\tkeypad -\t\t\t*keypad-minus*\n"
"<kMultiply>\tkeypad *\t\t\t*keypad-multiply*\n"
"<kDivide>\tkeypad /\t\t\t*keypad-divide*\n"
"<kEnter>\tkeypad Enter\t\t\t*keypad-enter*\n"
"<kPoint>\tkeypad Decimal point\t\t*keypad-point*\n"
"<k0> - <k9>\tkeypad 0 to 9\t\t\t*keypad-0* *keypad-9*\n"
"<S-...>\t\tshift-key\t\t\t*shift* *<S-*\n"
"<C-...>\t\tcontrol-key\t\t\t*control* *ctrl* *<C-*\n"
"<M-...>\t\talt-key or meta-key\t\t*meta* *alt* *<M-*\n"
"<A-...>\t\tsame as <M-...>\t\t\t*<A-*\n"
"<D-...>\t\tcommand-key (Macintosh only)\t*<D-*\n"
"<t_xx>\t\tkey with \"xx\" entry in termcap\n"
"-----------------------------------------------------------------------\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:461
msgid ""
"Note: The shifted cursor keys, the help key, and the undo key are only "
"available on a few terminals.  On the Amiga, shifted function key 10 "
"produces a code (CSI) that is also used by key sequences.  It will be "
"recognized only after typing another key."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:466
msgid ""
"Note: There are two codes for the delete key.  127 is the decimal ASCII "
"value for the delete key, which is always recognized.  Some delete keys send "
"another value, in which case this value is obtained from the termcap entry "
"\"kD\".  Both values have the same effect.  Also see |:fixdel|."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:473
msgid ""
"Note: The keypad keys are used in the same way as the corresponding \"normal"
"\" keys.  For example, <kHome> has the same effect as <Home>.  If a keypad "
"key sends the same raw key code as its non-keypad equivalent, it will be "
"recognized as the non-keypad code.  For example, when <kHome> sends the same "
"code as <Home>, when pressing <kHome> Vim will think <Home> was pressed.  "
"Mapping <kHome> will not work then."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:492
#, no-wrap
msgid ""
"\t\t\t\t\t\t\t\t*<>*\n"
"Examples are often given in the <> notation.  Sometimes this is just to make\n"
"clear what you need to type, but often it can be typed literally, e.g., with\n"
"the \":map\" command.  The rules are:\n"
" 1.  Any printable characters are typed directly, except backslash and '<'\n"
" 2.  A backslash is represented with \"\\\\\", double backslash, or \"<Bslash>\".\n"
" 3.  A real '<' is represented with \"\\<\" or \"<lt>\".  When there is no\n"
"     confusion possible, a '<' can be used directly.\n"
" 4.  \"<key>\" means the special key typed.  This is the notation explained in\n"
"     the table above.  A few examples:\n"
"\t   <Esc>\t\tEscape key\n"
"\t   <C-G>\t\tCTRL-G\n"
"\t   <Up>\t\t\tcursor up key\n"
"\t   <C-LeftMouse>\tControl- left mouse click\n"
"\t   <S-F11>\t\tShifted function key 11\n"
"\t   <M-a>\t\tMeta- a  ('a' with bit 8 set)\n"
"\t   <M-A>\t\tMeta- A  ('A' with bit 8 set)\n"
"\t   <t_kd>\t\t\"kd\" termcap entry (cursor down key)\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:499
#, no-wrap
msgid ""
"If you want to use the full <> notation in Vim, you have to make sure the '<'\n"
"flag is excluded from 'cpoptions' (when 'compatible' is not set, it already is\n"
"by default). >\n"
"\t:set cpo-=<\n"
"The <> notation uses <lt> to escape the special meaning of key names.  Using a\n"
"backslash also works, but only when 'cpoptions' does not include the 'B' flag.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:507
#, no-wrap
msgid ""
"Examples for mapping CTRL-H to the six characters \"<Home>\": >\n"
"\t:imap <C-H> \\<Home>\n"
"\t:imap <C-H> <lt>Home>\n"
"The first one only works when the 'B' flag is not in 'cpoptions'.  The second\n"
"one always works.\n"
"To get a literal \"<lt>\" in a mapping: >\n"
"\t:map <C-L> <lt>lt>\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:512
msgid ""
"For mapping, abbreviation and menu commands you can then copy-paste the "
"examples and use them directly.  Or type them literally, including the '<' "
"and '>' characters.  This does NOT work for other commands, like \":set\" "
"and \":autocmd\"!"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:515
#, no-wrap
msgid "5. Modes, introduction\t\t\t\t*vim-modes-intro* *vim-modes*\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:517
msgid "Vim has six BASIC modes:"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:523
#, no-wrap
msgid ""
"\t\t\t\t\t*Normal* *Normal-mode* *command-mode*\n"
"Normal mode\t\tIn Normal mode you can enter all the normal editor\n"
"\t\t\tcommands.  If you start the editor you are in this\n"
"\t\t\tmode (unless you have set the 'insertmode' option,\n"
"\t\t\tsee below).  This is also known as command mode.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:530
#, no-wrap
msgid ""
"Visual mode\t\tThis is like Normal mode, but the movement commands\n"
"\t\t\textend a highlighted area.  When a non-movement\n"
"\t\t\tcommand is used, it is executed for the highlighted\n"
"\t\t\tarea.  See |Visual-mode|.\n"
"\t\t\tIf the 'showmode' option is on \"-- VISUAL --\" is shown\n"
"\t\t\tat the bottom of the window.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:536
#, no-wrap
msgid ""
"Select mode\t\tThis looks most like the MS-Windows selection mode.\n"
"\t\t\tTyping a printable character deletes the selection\n"
"\t\t\tand starts Insert mode.  See |Select-mode|.\n"
"\t\t\tIf the 'showmode' option is on \"-- SELECT --\" is shown\n"
"\t\t\tat the bottom of the window.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:541
#, no-wrap
msgid ""
"Insert mode\t\tIn Insert mode the text you type is inserted into the\n"
"\t\t\tbuffer.  See |Insert-mode|.\n"
"\t\t\tIf the 'showmode' option is on \"-- INSERT --\" is shown\n"
"\t\t\tat the bottom of the window.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:547
#, no-wrap
msgid ""
"Command-line mode\tIn Command-line mode (also called Cmdline mode) you\n"
"Cmdline mode\t\tcan enter one line of text at the bottom of the\n"
"\t\t\twindow.  This is for the Ex commands, \":\", the pattern\n"
"\t\t\tsearch commands, \"?\" and \"/\", and the filter command,\n"
"\t\t\t\"!\".  |Cmdline-mode|\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:551
#, no-wrap
msgid ""
"Ex mode\t\t\tLike Command-line mode, but after entering a command\n"
"\t\t\tyou remain in Ex mode.  Very limited editing of the\n"
"\t\t\tcommand line.  |Ex-mode|\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:553
msgid "There are six ADDITIONAL modes.  These are variants of the BASIC modes:"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:558
#, no-wrap
msgid ""
"\t\t\t\t*Operator-pending* *Operator-pending-mode*\n"
"Operator-pending mode\tThis is like Normal mode, but after an operator\n"
"\t\t\tcommand has started, and Vim is waiting for a {motion}\n"
"\t\t\tto specify the text that the operator will work on.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:565
#, no-wrap
msgid ""
"Replace mode\t\tReplace mode is a special case of Insert mode.  You\n"
"\t\t\tcan do the same things as in Insert mode, but for\n"
"\t\t\teach character you enter, one character of the existing\n"
"\t\t\ttext is deleted.  See |Replace-mode|.\n"
"\t\t\tIf the 'showmode' option is on \"-- REPLACE --\" is\n"
"\t\t\tshown at the bottom of the window.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:571
#, no-wrap
msgid ""
"Virtual Replace mode\tVirtual Replace mode is similar to Replace mode, but\n"
"\t\t\tinstead of file characters you are replacing screen\n"
"\t\t\treal estate.  See |Virtual-Replace-mode|.\n"
"\t\t\tIf the 'showmode' option is on \"-- VREPLACE --\" is\n"
"\t\t\tshown at the bottom of the window.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:577
#, no-wrap
msgid ""
"Insert Normal mode\tEntered when CTRL-O given in Insert mode.  This is\n"
"\t\t\tlike Normal mode, but after executing one command Vim\n"
"\t\t\treturns to Insert mode.\n"
"\t\t\tIf the 'showmode' option is on \"-- (insert) --\" is\n"
"\t\t\tshown at the bottom of the window.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:584
#, no-wrap
msgid ""
"Insert Visual mode\tEntered when starting a Visual selection from Insert\n"
"\t\t\tmode, e.g., by using CTRL-O and then \"v\", \"V\" or\n"
"\t\t\tCTRL-V.  When the Visual selection ends, Vim returns\n"
"\t\t\tto Insert mode.\n"
"\t\t\tIf the 'showmode' option is on \"-- (insert) VISUAL --\"\n"
"\t\t\tis shown at the bottom of the window.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:590
#, no-wrap
msgid ""
"Insert Select mode\tEntered when starting Select mode from Insert mode.\n"
"\t\t\tE.g., by dragging the mouse or <S-Right>.\n"
"\t\t\tWhen the Select mode ends, Vim returns to Insert mode.\n"
"\t\t\tIf the 'showmode' option is on \"-- (insert) SELECT --\"\n"
"\t\t\tis shown at the bottom of the window.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:593
#, no-wrap
msgid "6. Switching from mode to mode\t\t\t\t*mode-switching*\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:601
msgid ""
"If for any reason you do not know which mode you are in, you can always get "
"back to Normal mode by typing <Esc> twice.  This doesn't work for Ex mode "
"though, use \":visual\".  You will know you are back in Normal mode when you "
"see the screen flash or hear the bell after you type <Esc>.  However, when "
"pressing <Esc> after using CTRL-O in Insert mode you get a beep but you are "
"still in Insert mode, type <Esc> again."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:613
#, no-wrap
msgid ""
"\t\t\t\t\t\t\t*i_esc*\n"
"\t\tTO mode\t\t\t\t\t\t    ~\n"
"\t\tNormal\tVisual\tSelect\tInsert\t  Replace   Cmd-line  Ex ~\n"
"FROM mode\t\t\t\t\t\t\t\t ~\n"
"Normal\t\t\tv V ^V\t  *4\t *1\t   R gR     : / ? !   Q\n"
"Visual\t\t *2\t\t  ^G\t c C\t    --\t      :       --\n"
"Select\t\t *5\t^O ^G\t\t *6\t    --\t      --      --\n"
"Insert\t\t <Esc>\t  --\t  --\t\t  <Insert>    --      --\n"
"Replace\t\t <Esc>\t  --\t  --\t<Insert>\t      --      --\n"
"Command-line\t *3\t  --\t  --\t :start\t    --\t\t      --\n"
"Ex\t\t :vi\t  --\t  --\t --\t    --\t      --\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:616
msgid "- NA -- not possible"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:644
#, no-wrap
msgid ""
"*1 Go from Normal mode to Insert mode by giving the command \"i\", \"I\", \"a\",\n"
"   \"A\", \"o\", \"O\", \"c\", \"C\", \"s\" or S\".\n"
"*2 Go from Visual mode to Normal mode by giving a non-movement command, which\n"
"   causes the command to be executed, or by hitting <Esc> \"v\", \"V\" or \"CTRL-V\"\n"
"   (see |v_v|), which just stops Visual mode without side effects.\n"
"*3 Go from Command-line mode to Normal mode by:\n"
"   - Hitting <CR> or <NL>, which causes the entered command to be executed.\n"
"   - Deleting the complete line (e.g., with CTRL-U) and giving a final <BS>.\n"
"   - Hitting CTRL-C or <Esc>, which quits the command-line without executing\n"
"     the command.\n"
"   In the last case <Esc> may be the character defined with the 'wildchar'\n"
"   option, in which case it will start command-line completion.  You can\n"
"   ignore that and type <Esc> again.  {Vi: when hitting <Esc> the command-line\n"
"   is executed.  This is unexpected for most people; therefore it was changed\n"
"   in Vim.  But when the <Esc> is part of a mapping, the command-line is\n"
"   executed.  If you want the Vi behaviour also when typing <Esc>, use \":cmap\n"
"   ^V<Esc> ^V^M\"}\n"
"*4 Go from Normal to Select mode by:\n"
"   - use the mouse to select text while 'selectmode' contains \"mouse\"\n"
"   - use a non-printable command to move the cursor while keeping the Shift\n"
"     key pressed, and the 'selectmode' option contains \"key\"\n"
"   - use \"v\", \"V\" or \"CTRL-V\" while 'selectmode' contains \"cmd\"\n"
"   - use \"gh\", \"gH\" or \"g CTRL-H\"  |g_CTRL-H|\n"
"*5 Go from Select mode to Normal mode by using a non-printable command to move\n"
"   the cursor, without keeping the Shift key pressed.\n"
"*6 Go from Select mode to Insert mode by typing a printable character.  The\n"
"   selection is deleted and the character is inserted.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:646
msgid ""
"If the 'insertmode' option is on, editing a file will start in Insert mode."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:653
#, no-wrap
msgid ""
"\t*CTRL-\\_CTRL-N* *i_CTRL-\\_CTRL-N* *c_CTRL-\\_CTRL-N* *v_CTRL-\\_CTRL-N*\n"
"Additionally the command CTRL-\\ CTRL-N or <C-\\><C-N> can be used to go to\n"
"Normal mode from any other mode.  This can be used to make sure Vim is in\n"
"Normal mode, without causing a beep like <Esc> would.  However, this does not\n"
"work in Ex mode.  When used after a command that takes an argument, such as\n"
"|f| or |m|, the timeout set with 'ttimeoutlen' applies.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:659
#, no-wrap
msgid ""
"\t*CTRL-\\_CTRL-G* *i_CTRL-\\_CTRL-G* *c_CTRL-\\_CTRL-G* *v_CTRL-\\_CTRL-G*\n"
"The command CTRL-\\ CTRL-G or <C-\\><C-G> can be used to go to Insert mode when\n"
"'insertmode' is set.  Otherwise it goes to Normal mode.  This can be used to\n"
"make sure Vim is in the mode indicated by 'insertmode', without knowing in\n"
"what mode Vim currently is.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:676
#, no-wrap
msgid ""
"\t\t\t\t    *Q* *mode-Ex* *Ex-mode* *Ex* *EX* *E501*\n"
"Q\t\t\tSwitch to \"Ex\" mode.  This is a bit like typing \":\"\n"
"\t\t\tcommands one after another, except:\n"
"\t\t\t- You don't have to keep pressing \":\".\n"
"\t\t\t- The screen doesn't get updated after each command.\n"
"\t\t\t- There is no normal command-line editing.\n"
"\t\t\t- Mappings and abbreviations are not used.\n"
"\t\t\tIn fact, you are editing the lines with the \"standard\"\n"
"\t\t\tline-input editing commands (<Del> or <BS> to erase,\n"
"\t\t\tCTRL-U to kill the whole line).\n"
"\t\t\tVim will enter this mode by default if it's invoked as\n"
"\t\t\t\"ex\" on the command-line.\n"
"\t\t\tUse the \":vi\" command |:visual| to exit \"Ex\" mode.\n"
"\t\t\tNote: In older versions of Vim \"Q\" formatted text,\n"
"\t\t\tthat is now done with |gq|.  But if you use the\n"
"\t\t\t|vimrc_example.vim| script \"Q\" works like \"gq\".\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:683
#, no-wrap
msgid ""
"\t\t\t\t\t*gQ*\n"
"gQ\t\t\tSwitch to \"Ex\" mode like with \"Q\", but really behave\n"
"\t\t\tlike typing \":\" commands after another.  All command\n"
"\t\t\tline editing, completion etc. is available.\n"
"\t\t\tUse the \":vi\" command |:visual| to exit \"Ex\" mode.\n"
"\t\t\t{not in Vi}\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:686
#, no-wrap
msgid "7. The window contents\t\t\t\t\t*window-contents*\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:696
#, no-wrap
msgid ""
"In Normal mode and Insert/Replace mode the screen window will show the current\n"
"contents of the buffer: What You See Is What You Get.  There are two\n"
"exceptions:\n"
"- When the 'cpoptions' option contains '$', and the change is within one line,\n"
"  the text is not directly deleted, but a '$' is put at the last deleted\n"
"  character.\n"
"- When inserting text in one window, other windows on the same text are not\n"
"  updated until the insert is finished.\n"
"{Vi: The screen is not always updated on slow terminals}\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:699
msgid ""
"Lines longer than the window width will wrap, unless the 'wrap' option is "
"off (see below).  The 'linebreak' option can be set to wrap at a blank "
"character."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:702
msgid ""
"If the window has room after the last line of the buffer, Vim will show '~' "
"in the first column of the last lines in the window, like this: >"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:709
#, no-wrap
msgid ""
"\t+-----------------------+\n"
"\t|some line\t\t|\n"
"\t|last line\t\t|\n"
"\t|~\t\t\t|\n"
"\t|~\t\t\t|\n"
"\t+-----------------------+\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:711
msgid "Thus the '~' lines indicate that the end of the buffer was reached."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:714
msgid ""
"If the last line in a window doesn't fit, Vim will indicate this with a '@' "
"in the first column of the last lines in the window, like this: >"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:721
#, no-wrap
msgid ""
"\t+-----------------------+\n"
"\t|first line\t\t|\n"
"\t|second line\t\t|\n"
"\t|@\t\t\t|\n"
"\t|@\t\t\t|\n"
"\t+-----------------------+\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:724
msgid ""
"Thus the '@' lines indicate that there is a line that doesn't fit in the "
"window."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:729
msgid ""
"When the \"lastline\" flag is present in the 'display' option, you will not "
"see '@' characters at the left side of window.  If the last line doesn't fit "
"completely, only the part that fits is shown, and the last three characters "
"of the last line are replaced with \"@@@\", like this: >"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:736
#, no-wrap
msgid ""
"\t+-----------------------+\n"
"\t|first line\t\t|\n"
"\t|second line\t\t|\n"
"\t|a very long line that d|\n"
"\t|oesn't fit in the wi@@@|\n"
"\t+-----------------------+\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:742
msgid ""
"If there is a single line that is too long to fit in the window, this is a "
"special situation.  Vim will show only part of the line, around where the "
"cursor is.  There are no special characters shown, so that you can edit all "
"parts of this line.  {Vi: gives an \"internal error\" on lines that do not "
"fit in the window}"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:746
msgid ""
"The '@' occasion in the 'highlight' option can be used to set special "
"highlighting for the '@' and '~' characters.  This makes it possible to "
"distinguish them from real characters in the buffer."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:748
msgid ""
"The 'showbreak' option contains the string to put in front of wrapped lines."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:757
#, no-wrap
msgid ""
"\t\t\t\t\t\t\t*wrap-off*\n"
"If the 'wrap' option is off, long lines will not wrap.  Only the part that\n"
"fits on the screen is shown.  If the cursor is moved to a part of the line\n"
"that is not shown, the screen is scrolled horizontally.  The advantage of\n"
"this method is that columns are shown as they are and lines that cannot fit\n"
"on the screen can be edited.  The disadvantage is that you cannot see all the\n"
"characters of a line at once.  The 'sidescroll' option can be set to the\n"
"minimal number of columns to scroll.  {Vi: has no 'wrap' option}\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:765
msgid ""
"All normal ASCII characters are displayed directly on the screen.  The <Tab> "
"is replaced with the number of spaces that it represents.  Other non-"
"printing characters are replaced with \"^{char}\", where {char} is the non-"
"printing character with 64 added.  Thus character 7 (bell) will be shown as "
"\"^G\".  Characters between 127 and 160 are replaced with \"~{char}\", where "
"{char} is the character with 64 subtracted.  These characters occupy more "
"than one position on the screen.  The cursor can only be positioned on the "
"first one."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:770
#, no-wrap
msgid ""
"If you set the 'number' option, all lines will be preceded with their\n"
"number.  Tip: If you don't like wrapping lines to mix with the line numbers,\n"
"set the 'showbreak' option to eight spaces:\n"
"\t\":set showbreak=\\ \\ \\ \\ \\ \\ \\ \\ \"\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:774
msgid ""
"If you set the 'list' option, <Tab> characters will not be shown as several "
"spaces, but as \"^I\".  A '$' will be placed at the end of the line, so you "
"can find trailing blanks."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:778
msgid ""
"In Command-line mode only the command-line itself is shown correctly.  The "
"display of the buffer contents is updated as soon as you go back to Command "
"mode."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:781
msgid ""
"The last line of the window is used for status and other messages.  The "
"status messages will only be used if an option is on:"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:786
#, no-wrap
msgid ""
"status message\t\t\toption\t     default\tUnix default\t~\n"
"current mode\t\t\t'showmode'\ton\t    on\n"
"command characters\t\t'showcmd'\ton\t    off\n"
"cursor position\t\t\t'ruler'\t\toff\t    off\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:790
msgid ""
"The current mode is \"-- INSERT --\" or \"-- REPLACE --\", see "
"|'showmode'|.  The command characters are those that you typed but were not "
"used yet.  {Vi: does not show the characters you typed or the cursor "
"position}"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:794
#, no-wrap
msgid ""
"If you have a slow terminal you can switch off the status messages to speed\n"
"up editing:\n"
"\t:set nosc noru nosm\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:798
msgid ""
"If there is an error, an error message will be shown for at least one second "
"(in reverse video).  {Vi: error messages may be overwritten with other "
"messages before you have a chance to read them}"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:801
msgid ""
"Some commands show how many lines were affected.  Above which threshold this "
"happens can be controlled with the 'report' option (default 2)."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:808
msgid ""
"On the Amiga Vim will run in a CLI window.  The name Vim and the full name "
"of the current file name will be shown in the title bar.  When the window is "
"resized, Vim will automatically redraw the window.  You may make the window "
"as small as you like, but if it gets too small not a single line will fit in "
"it.  Make it at least 40 characters wide to be able to read most messages on "
"the last line."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:811
msgid ""
"On most Unix systems, resizing the window is recognized and handled "
"correctly by Vim.  {Vi: not ok}"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:814
#, no-wrap
msgid "8. Definitions\t\t\t\t\t\t*definitions*\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:819
#, no-wrap
msgid ""
"  screen\t\tThe whole area that Vim uses to work in.  This can be\n"
"\t\t\ta terminal emulator window.  Also called \"the Vim\n"
"\t\t\twindow\".\n"
"  window\t\tA view on a buffer.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:822
msgid ""
"A screen contains one or more windows, separated by status lines and with "
"the command line at the bottom."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:834
#, no-wrap
msgid ""
"\t+-------------------------------+\n"
"screen\t| window 1\t| window 2\t|\n"
"\t|\t\t|\t\t|\n"
"\t|\t\t|\t\t|\n"
"\t|= status line =|= status line =|\n"
"\t| window 3\t\t\t|\n"
"\t|\t\t\t\t|\n"
"\t|\t\t\t\t|\n"
"\t|==== status line ==============|\n"
"\t|command line\t\t\t|\n"
"\t+-------------------------------+\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:837
msgid ""
"The command line is also used for messages.  It scrolls up the screen when "
"there is not enough room in the command line."
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:839
msgid "A difference is made between four types of lines:"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:857
#, no-wrap
msgid ""
"  buffer lines\t\tThe lines in the buffer.  This is the same as the\n"
"\t\t\tlines as they are read from/written to a file.  They\n"
"\t\t\tcan be thousands of characters long.\n"
"  logical lines\t\tThe buffer lines with folding applied.  Buffer lines\n"
"\t\t\tin a closed fold are changed to a single logical line:\n"
"\t\t\t\"+-- 99 lines folded\".  They can be thousands of\n"
"\t\t\tcharacters long.\n"
"  window lines\t\tThe lines displayed in a window: A range of logical\n"
"\t\t\tlines with wrapping, line breaks, etc.  applied.  They\n"
"\t\t\tcan only be as long as the width of the window allows,\n"
"\t\t\tlonger lines are wrapped or truncated.\n"
"  screen lines\t\tThe lines of the screen that Vim uses.  Consists of\n"
"\t\t\tthe window lines of all windows, with status lines\n"
"\t\t\tand the command line added.  They can only be as long\n"
"\t\t\tas the width of the screen allows.  When the command\n"
"\t\t\tline gets longer it wraps and lines are scrolled to\n"
"\t\t\tmake room.\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:859
#, no-wrap
msgid "buffer lines\tlogical lines\twindow lines\tscreen lines ~\n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:874
#, no-wrap
msgid ""
"1. one\t\t1. one\t\t1. +-- folded   1.  +-- folded\n"
"2. two\t\t2. +-- folded\t2. five\t\t2.  five\n"
"3. three\t3. five\t\t3. six\t\t3.  six\n"
"4. four\t\t4. six\t\t4. seven\t4.  seven\n"
"5. five\t\t5. seven\t\t\t5.  === status line ===\n"
"6. six\t\t\t\t\t\t6.  aaa\n"
"7. seven\t\t\t\t\t7.  bbb\n"
"\t\t\t\t\t\t8.  ccc ccc c\n"
"1. aaa\t\t1. aaa\t\t1. aaa\t\t9.  cc\n"
"2. bbb\t\t2. bbb\t\t2. bbb\t\t10. ddd\n"
"3. ccc ccc ccc\t3. ccc ccc ccc\t3. ccc ccc c\t11. ~ \n"
"4. ddd\t\t4. ddd\t\t4. cc\t\t12. === status line ===\n"
"\t\t\t\t5. ddd\t\t13. (command line)\n"
"\t\t\t\t6. ~ \n"
msgstr ""

#. type: Plain text
#: original/TXT/intro.txt:876
#, no-wrap
msgid " vim:tw=78:ts=8:ft=help:norl:\n"
msgstr ""
