#. extracted from usr_11.txt
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2009-08-01 19:54+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Translate Toolkit 1.3.0\n"

#: usr_11.txt:1
msgid "*usr_11.txt*\tFor Vim version 7.2.  Last change: 2006 Apr 24"
msgstr ""

#: usr_11.txt:3
msgid "\t\t     VIM USER MANUAL - by Bram Moolenaar"
msgstr ""

#: usr_11.txt:5
msgid "\t\t\t   Recovering from a crash"
msgstr ""

#: usr_11.txt:8
msgid ""
"Did your computer crash?  And you just spent hours editing?  Don't panic!  "
"Vim\n"
"keeps enough information on harddisk to be able to restore most of your "
"work.\n"
"This chapter shows you how to get your work back and explains how the swap\n"
"file is used."
msgstr ""

#: usr_11.txt:13
msgid ""
"|11.1|\tBasic recovery\n"
"|11.2|\tWhere is the swap file?\n"
"|11.3|\tCrashed or not?\n"
"|11.4|\tFurther reading"
msgstr ""

#: usr_11.txt:18
msgid ""
"     Next chapter: |usr_12.txt|  Clever tricks\n"
" Previous chapter: |usr_10.txt|  Making big changes\n"
"Table of contents: |usr_toc.txt|"
msgstr ""

#: usr_11.txt:22
msgid ""
"============================================================================"
"==\n"
"*11.1*\tBasic recovery"
msgstr ""

#: usr_11.txt:25
msgid ""
"In most cases recovering a file is quite simple, assuming you know which "
"file\n"
"you were editing (and the harddisk is still working).  Start Vim on the "
"file,\n"
"with the \"-r\" argument added: >"
msgstr ""

#: usr_11.txt:29
msgid "\tvim -r help.txt"
msgstr ""

#: usr_11.txt:31
msgid ""
"Vim will read the swap file (used to store text you were editing) and may "
"read\n"
"bits and pieces of the original file.  If all is well, you will see these\n"
"messages (with different file names, of course):"
msgstr ""

#: usr_11.txt:35
msgid ""
"\tUsing swap file \".help.txt.swp\" ~\n"
"\tOriginal file \"~/vim/runtime/doc/help.txt\" ~\n"
"\tRecovery completed. You should check if everything is OK. ~\n"
"\t(You might want to write out this file under another name ~\n"
"\tand run diff with the original file to check for changes) ~\n"
"\tDelete the .swp file afterwards. ~"
msgstr ""

#: usr_11.txt:42
msgid "To be on the safe side, write this file under another name: >"
msgstr ""

#: usr_11.txt:44
msgid "\t:write help.txt.recovered"
msgstr ""

#: usr_11.txt:46
msgid ""
"Compare the file with the original file to check if you ended up with what "
"you\n"
"expected.  Vimdiff is very useful for this |08.7|.  Watch out for the "
"original\n"
"file to contain a more recent version (you saved the file just before the\n"
"computer crashed).  And check that no lines are missing (something went "
"wrong\n"
"that Vim could not recover).\n"
"   If Vim produces warning messages when recovering, read them carefully.\n"
"This is rare though."
msgstr ""

#: usr_11.txt:54
msgid ""
"It's normal that the last few changes can not be recovered.  Vim flushes the\n"
"changes to disk when you don't type for about four seconds, or after typing\n"
"about two hundred characters.  This is set with the 'updatetime' and\n"
"'updatecount' options.  Thus when Vim didn't get a chance to save itself "
"when\n"
"the system went down, the changes after the last flush will be lost."
msgstr ""

#: usr_11.txt:60
msgid ""
"If you were editing without a file name, give an empty string as argument: >"
msgstr ""

#: usr_11.txt:62
msgid "\tvim -r \"\""
msgstr ""

#: usr_11.txt:64
msgid ""
"You must be in the right directory, otherwise Vim can't find the swap file."
msgstr ""

#: usr_11.txt:66
msgid ""
"============================================================================"
"==\n"
"*11.2*\tWhere is the swap file?"
msgstr ""

#: usr_11.txt:69
msgid ""
"Vim can store the swap file in several places.  Normally it is in the same\n"
"directory as the original file.  To find it, change to the directory of the\n"
"file, and use: >"
msgstr ""

#: usr_11.txt:73
msgid "\tvim -r"
msgstr ""

#: usr_11.txt:75
msgid ""
"Vim will list the swap files that it can find.  It will also look in other\n"
"directories where the swap file for files in the current directory may be\n"
"located.  It will not find swap files in any other directories though, it\n"
"doesn't search the directory tree.\n"
"   The output could look like this:"
msgstr ""

#: usr_11.txt:81
msgid ""
"\tSwap files found: ~\n"
"\t   In current directory: ~\n"
"\t1.    .main.c.swp ~\n"
"\t\t  owned by: mool   dated: Tue May 29 21:00:25 2001 ~\n"
"\t\t file name: ~mool/vim/vim6/src/main.c ~\n"
"\t\t  modified: YES ~\n"
"\t\t user name: mool   host name: masaka.moolenaar.net ~\n"
"\t\tprocess ID: 12525 ~\n"
"\t   In directory ~/tmp: ~\n"
"\t      -- none -- ~\n"
"\t   In directory /var/tmp: ~\n"
"\t      -- none -- ~\n"
"\t   In directory /tmp: ~\n"
"\t      -- none -- ~"
msgstr ""

#: usr_11.txt:96
msgid ""
"If there are several swap files that look like they may be the one you want "
"to\n"
"use, a list is given of these swap files and you are requested to enter the\n"
"number of the one you want to use.  Carefully look at the dates to decide\n"
"which one you want to use.\n"
"   In case you don't know which one to use, just try them one by one and "
"check\n"
"the resulting files if they are what you expected."
msgstr ""

#: usr_11.txt:104
msgid "USING A SPECIFIC SWAP FILE"
msgstr ""

#: usr_11.txt:106
msgid ""
"If you know which swap file needs to be used, you can recover by giving the\n"
"swap file name.  Vim will then finds out the name of the original file from\n"
"the swap file."
msgstr ""

#: usr_11.txt:110
msgid ""
"Example: >\n"
"\tvim -r .help.txt.swo"
msgstr ""

#: usr_11.txt:113
msgid ""
"This is also handy when the swap file is in another directory than expected.\n"
"If this still does not work, see what file names Vim reports and rename the\n"
"files accordingly.  Check the 'directory' option to see where Vim may have\n"
"put the swap file."
msgstr ""

#: usr_11.txt:118
msgid ""
"\tNote:\n"
"\tVim tries to find the swap file by searching the directories in the\n"
"\t'dir' option, looking for files that match \"filename.sw?\".  If\n"
"\twildcard expansion doesn't work (e.g., when the 'shell' option is\n"
"\tinvalid), Vim does a desperate try to find the file \"filename.swp\".\n"
"\tIf that fails too, you will have to give the name of the swapfile\n"
"\titself to be able to recover the file."
msgstr ""

#: usr_11.txt:126
msgid ""
"============================================================================"
"==\n"
"*11.3*\tCrashed or not?\t\t\t\t\t*ATTENTION* *E325*"
msgstr ""

#: usr_11.txt:129
msgid ""
"Vim tries to protect you from doing stupid things.  Suppose you innocently\n"
"start editing a file, expecting the contents of the file to show up.  "
"Instead,\n"
"Vim produces a very long message:"
msgstr ""

#: usr_11.txt:133
msgid ""
"\t\tE325: ATTENTION ~\n"
"\tFound a swap file by the name \".main.c.swp\" ~\n"
"\t\t  owned by: mool   dated: Tue May 29 21:09:28 2001 ~\n"
"\t\t file name: ~mool/vim/vim6/src/main.c ~\n"
"\t\t  modified: no ~\n"
"\t\t user name: mool   host name: masaka.moolenaar.net ~\n"
"\t\tprocess ID: 12559 (still running) ~\n"
"\tWhile opening file \"main.c\" ~\n"
"\t\t     dated: Tue May 29 19:46:12 2001 ~\n"
" ~\n"
"\t(1) Another program may be editing the same file. ~\n"
"\t    If this is the case, be careful not to end up with two ~\n"
"\t    different instances of the same file when making changes. ~\n"
"\t    Quit, or continue with caution. ~\n"
" ~\n"
"\t(2) An edit session for this file crashed. ~\n"
"\t    If this is the case, use \":recover\" or \"vim -r main.c\" ~\n"
"\t    to recover the changes (see \":help recovery\"). ~\n"
"\t    If you did this already, delete the swap file \".main.c.swp\" ~\n"
"\t    to avoid this message. ~"
msgstr ""

#: usr_11.txt:154
msgid ""
"You get this message, because, when starting to edit a file, Vim checks if a\n"
"swap file already exists for that file.  If there is one, there must be\n"
"something wrong.  It may be one of these two situations."
msgstr ""

#: usr_11.txt:158
msgid ""
"1. Another edit session is active on this file.  Look in the message for the\n"
"   line with \"process ID\".  It might look like this:"
msgstr ""

#: usr_11.txt:161
msgid "\t\tprocess ID: 12559 (still running) ~"
msgstr ""

#: usr_11.txt:163
msgid ""
"   The text \"(still running)\" indicates that the process editing this file\n"
"   runs on the same computer.  When working on a non-Unix system you will "
"not\n"
"   get this extra hint.  When editing a file over a network, you may not see\n"
"   the hint, because the process might be running on another computer.  In\n"
"   those two cases you must find out what the situation is yourself.\n"
"      If there is another Vim editing the same file, continuing to edit will\n"
"   result in two versions of the same file.  The one that is written last "
"will\n"
"   overwrite the other one, resulting in loss of changes.  You better quit\n"
"   this Vim."
msgstr ""

#: usr_11.txt:173
msgid ""
"2. The swap file might be the result from a previous crash of Vim or the\n"
"   computer.  Check the dates mentioned in the message.  If the date of the\n"
"   swap file is newer than the file you were editing, and this line appears:"
msgstr ""

#: usr_11.txt:177
msgid "\t\tmodified: YES ~"
msgstr ""

#: usr_11.txt:179
msgid ""
"   Then you very likely have a crashed edit session that is worth "
"recovering.\n"
"      If the date of the file is newer than the date of the swap file, then\n"
"   either it was changed after the crash (perhaps you recovered it earlier,\n"
"   but didn't delete the swap file?), or else the file was saved before the\n"
"   crash but after the last write of the swap file (then you're lucky: you\n"
"   don't even need that old swap file).  Vim will warn you for this with "
"this\n"
"   extra line:"
msgstr ""

#: usr_11.txt:187
msgid "      NEWER than swap file! ~"
msgstr ""

#: usr_11.txt:190
msgid "UNREADABLE SWAP FILE"
msgstr ""

#: usr_11.txt:192
msgid "Sometimes the line"
msgstr ""

#: usr_11.txt:194
msgid "\t[cannot be read] ~"
msgstr ""

#: usr_11.txt:196
msgid ""
"will appear under the name of the swap file.  This can be good or bad,\n"
"depending on circumstances."
msgstr ""

#: usr_11.txt:199
msgid ""
"It is good if a previous editing session crashed without having made any\n"
"changes to the file.  Then a directory listing of the swap file will show\n"
"that it has zero bytes.  You may delete it and proceed."
msgstr ""

#: usr_11.txt:203
msgid ""
"It is slightly bad if you don't have read permission for the swap file.  You\n"
"may want to view the file read-only, or quit.  On multi-user systems, if you\n"
"yourself did the last changes under a different login name, a logout\n"
"followed by a login under that other name might cure the \"read error\".  Or\n"
"else you might want to find out who last edited (or is editing) the file and\n"
"have a talk with them."
msgstr ""

#: usr_11.txt:210
msgid ""
"It is very bad if it means there is a physical read error on the disk\n"
"containing the swap file.  Fortunately, this almost never happens.\n"
"You may want to view the file read-only at first (if you can), to see the\n"
"extent of the changes that were \"forgotten\".  If you are the one in charge "
"of\n"
"that file, be prepared to redo your last changes."
msgstr ""

#: usr_11.txt:217
msgid "WHAT TO DO?"
msgstr ""

#: usr_11.txt:219
msgid ""
"If dialogs are supported you will be asked to select one of five choices:"
msgstr ""

#: usr_11.txt:221
msgid ""
"  Swap file \".main.c.swp\" already exists! ~\n"
"  [O]pen Read-Only, (E)dit anyway, (R)ecover, (Q)uit, (A)bort, (D)elete it: "
"~"
msgstr ""

#: usr_11.txt:224
msgid ""
"O  Open the file readonly.  Use this when you just want to view the file and\n"
"   don't need to recover it.  You might want to use this when you know "
"someone\n"
"   else is editing the file, but you just want to look in it and not make\n"
"   changes."
msgstr ""

#: usr_11.txt:229
msgid ""
"E  Edit the file anyway.  Use this with caution!  If the file is being "
"edited\n"
"   in another Vim, you might end up with two versions of the file.  Vim will\n"
"   try to warn you when this happens, but better be safe then sorry."
msgstr ""

#: usr_11.txt:233
msgid ""
"R  Recover the file from the swap file.  Use this if you know that the swap\n"
"   file contains changes that you want to recover."
msgstr ""

#: usr_11.txt:236
msgid ""
"Q  Quit.  This avoids starting to edit the file.  Use this if there is "
"another\n"
"   Vim editing the same file.\n"
"      When you just started Vim, this will exit Vim.  When starting Vim with\n"
"   files in several windows, Vim quits only if there is a swap file for the\n"
"   first one.  When using an edit command, the file will not be loaded and "
"you\n"
"   are taken back to the previously edited file."
msgstr ""

#: usr_11.txt:243
msgid ""
"A  Abort.  Like Quit, but also abort further commands.  This is useful when\n"
"   loading a script that edits several files, such as a session with "
"multiple\n"
"   windows."
msgstr ""

#: usr_11.txt:247
msgid ""
"D  Delete the swap file.  Use this when you are sure you no longer need it.\n"
"   For example, when it doesn't contain changes, or when the file itself is\n"
"   newer than the swap file.\n"
"      On Unix this choice is only offered when the process that created the\n"
"   swap file does not appear to be running."
msgstr ""

#: usr_11.txt:253
msgid ""
"If you do not get the dialog (you are running a version of Vim that does not\n"
"support it), you will have to do it manually.  To recover the file, use this\n"
"command: >"
msgstr ""

#: usr_11.txt:257
msgid "\t:recover"
msgstr ""

#: usr_11.txt:260
msgid ""
"Vim cannot always detect that a swap file already exists for a file.  This "
"is\n"
"the case when the other edit session puts the swap files in another "
"directory\n"
"or when the path name for the file is different when editing it on different\n"
"machines.  Therefore, don't rely on Vim always warning you."
msgstr ""

#: usr_11.txt:265
msgid ""
"If you really don't want to see this message, you can add the 'A' flag to "
"the\n"
"'shortmess' option.  But it's very unusual that you need this."
msgstr ""

#: usr_11.txt:268
msgid ""
"============================================================================"
"==\n"
"*11.4*\tFurther reading"
msgstr ""

#: usr_11.txt:271
msgid ""
"|swap-file|\tAn explanation about where the swap file will be created and\n"
"\t\twhat its name is.\n"
"|:preserve|\tManually flushing the swap file to disk.\n"
"|:swapname|\tSee the name of the swap file for the current file.\n"
"'updatecount'\tNumber of key strokes after which the swap file is flushed to\n"
"\t\tdisk.\n"
"'updatetime'\tTimeout after which the swap file is flushed to disk.\n"
"'swapsync'\tWhether the disk is synced when the swap file is flushed.\n"
"'directory'\tList of directory names where to store the swap file.\n"
"'maxmem'\tLimit for memory usage before writing text to the swap file.\n"
"'maxmemtot'\tSame, but for all files in total."
msgstr ""

#: usr_11.txt:283
msgid ""
"============================================================================"
"=="
msgstr ""

#: usr_11.txt:285
msgid "Next chapter: |usr_12.txt|  Clever tricks"
msgstr ""

#: usr_11.txt:287
msgid "Copyright: see |manual-copyright|  vim:tw=78:ts=8:ft=help:norl:"
msgstr ""
