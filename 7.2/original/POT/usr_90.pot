#. extracted from usr_90.txt
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2009-08-04 13:42+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Translate Toolkit 1.3.0\n"

#: usr_90.txt:1
msgid "*usr_90.txt*\tFor Vim version 7.2.  Last change: 2006 Apr 24"
msgstr ""

#: usr_90.txt:3
msgid "\t\t     VIM USER MANUAL - by Bram Moolenaar"
msgstr ""

#: usr_90.txt:5
msgid "\t\t\t\tInstalling Vim"
msgstr ""

#: usr_90.txt:7
msgid ""
"\t\t\t\t\t\t\t\t*install*\n"
"Before you can use Vim you have to install it.  Depending on your system "
"it's\n"
"simple or easy.  This chapter gives a few hints and also explains how\n"
"upgrading to a new version is done."
msgstr ""

#: usr_90.txt:12
msgid ""
"|90.1|\tUnix\n"
"|90.2|\tMS-Windows\n"
"|90.3|\tUpgrading\n"
"|90.4|\tCommon installation issues\n"
"|90.5|\tUninstalling Vim"
msgstr ""

#: usr_90.txt:18
msgid ""
" Previous chapter: |usr_45.txt|  Select your language\n"
"Table of contents: |usr_toc.txt|"
msgstr ""

#: usr_90.txt:21
msgid ""
"============================================================================"
"==\n"
"*90.1*\tUnix"
msgstr ""

#: usr_90.txt:24
msgid ""
"First you have to decide if you are going to install Vim system-wide or for "
"a\n"
"single user.  The installation is almost the same, but the directory where "
"Vim\n"
"is installed in differs.\n"
"   For a system-wide installation the base directory \"/usr/local\" is often\n"
"used.  But this may be different for your system.  Try finding out where "
"other\n"
"packages are installed.\n"
"   When installing for a single user, you can use your home directory as the\n"
"base.  The files will be placed in subdirectories like \"bin\" and "
"\"shared/vim\"."
msgstr ""

#: usr_90.txt:34
msgid "FROM A PACKAGE"
msgstr ""

#: usr_90.txt:36
msgid ""
"You can get precompiled binaries for many different UNIX systems.  There is "
"a\n"
"long list with links on this page:"
msgstr ""

#: usr_90.txt:39
msgid "\thttp://www.vim.org/binaries.html ~"
msgstr ""

#: usr_90.txt:41
msgid ""
"Volunteers maintain the binaries, so they are often out of date.  It is a\n"
"good idea to compile your own UNIX version from the source.  Also, creating\n"
"the editor from the source allows you to control which features are "
"compiled.\n"
"This does require a compiler though."
msgstr ""

#: usr_90.txt:46
msgid ""
"If you have a Linux distribution, the \"vi\" program is probably a minimal\n"
"version of Vim.  It doesn't do syntax highlighting, for example.  Try "
"finding\n"
"another Vim package in your distribution, or search on the web site."
msgstr ""

#: usr_90.txt:51
msgid "FROM SOURCES"
msgstr ""

#: usr_90.txt:53
msgid "To compile and install Vim, you will need the following:"
msgstr ""

#: usr_90.txt:55
msgid ""
"\t-  A C compiler (GCC preferred)\n"
"\t-  The GZIP program (you can get it from www.gnu.org)\n"
"\t-  The Vim source and runtime archives"
msgstr ""

#: usr_90.txt:59
msgctxt "usr_90.txt:59"
msgid ""
"To get the Vim archives, look in this file for a mirror near you, this "
"should\n"
"provide the fastest download:"
msgstr ""

#: usr_90.txt:62
msgctxt "usr_90.txt:62"
msgid "\tftp://ftp.vim.org/pub/vim/MIRRORS ~"
msgstr ""

#: usr_90.txt:64
msgid ""
"Or use the home site ftp.vim.org, if you think it's fast enough.  Go to the\n"
"\"unix\" directory and you'll find a list of files there.  The version number "
"is\n"
"embedded in the file name.  You will want to get the most recent version.\n"
"   You can get the files for Unix in two ways: One big archive that contains\n"
"everything, or four smaller ones that each fit on a floppy disk.  For "
"version\n"
"6.1 the single big one is called:"
msgstr ""

#: usr_90.txt:71
msgid "\tvim-6.1.tar.bz2 ~"
msgstr ""

#: usr_90.txt:73
msgid ""
"You need the bzip2 program to uncompress it.  If you don't have it, get the\n"
"four smaller files, which can be uncompressed with gzip.  For Vim 6.1 they "
"are\n"
"called:"
msgstr ""

#: usr_90.txt:77
msgid ""
"\tvim-6.1-src1.tar.gz ~\n"
"\tvim-6.1-src2.tar.gz ~\n"
"\tvim-6.1-rt1.tar.gz ~\n"
"\tvim-6.1-rt2.tar.gz ~"
msgstr ""

#: usr_90.txt:83
msgid "COMPILING"
msgstr ""

#: usr_90.txt:85
msgid "First create a top directory to work in, for example: >"
msgstr ""

#: usr_90.txt:87
msgid ""
"\tmkdir ~/vim\n"
"\tcd ~/vim"
msgstr ""

#: usr_90.txt:90
msgid ""
"Then unpack the archives there.  If you have the one big archive, you unpack\n"
"it like this: >"
msgstr ""

#: usr_90.txt:93
msgid "\tbzip2 -d -c path/vim-6.1.tar.bz2 | tar xf -"
msgstr ""

#: usr_90.txt:95
msgid "Change \"path\" to where you have downloaded the file. >"
msgstr ""

#: usr_90.txt:97
msgid ""
"\tgzip -d -c path/vim-6.1-src1.tar.gz | tar xf -\n"
"\tgzip -d -c path/vim-6.1-src2.tar.gz | tar xf -\n"
"\tgzip -d -c path/vim-6.1-rt1.tar.gz | tar xf -\n"
"\tgzip -d -c path/vim-6.1-rt2.tar.gz | tar xf -"
msgstr ""

#: usr_90.txt:102
msgid ""
"If you are satisfied with getting the default features, and your environment\n"
"is setup properly, you should be able to compile Vim with just this: >"
msgstr ""

#: usr_90.txt:105
msgid ""
"\tcd vim61/src\n"
"\tmake"
msgstr ""

#: usr_90.txt:108
msgid ""
"The make program will run configure and compile everything.  Further on we\n"
"will explain how to compile with different features.\n"
"   If there are errors while compiling, carefully look at the error "
"messages.\n"
"There should be a hint about what went wrong.  Hopefully you will be able to\n"
"correct it.  You might have to disable some features to make Vim compile.\n"
"Look in the Makefile for specific hints for your system."
msgstr ""

#: usr_90.txt:116
msgid "TESTING"
msgstr ""

#: usr_90.txt:118
msgid "Now you can check if compiling worked OK: >"
msgstr ""

#: usr_90.txt:120
msgid "\tmake test"
msgstr ""

#: usr_90.txt:122
msgid ""
"This will run a sequence of test scripts to verify that Vim works as "
"expected.\n"
"Vim will be started many times and all kinds of text and messages flash by.\n"
"If it is alright you will finally see:"
msgstr ""

#: usr_90.txt:126
msgid ""
"\ttest results: ~\n"
"\tALL DONE ~"
msgstr ""

#: usr_90.txt:129
msgid ""
"If there are one or two messages about failed tests, Vim might still work, "
"but\n"
"not perfectly.  If you see a lot of error messages or Vim doesn't finish "
"until\n"
"the end, there must be something wrong.  Either try to find out yourself, or\n"
"find someone who can solve it.  You could look in the |maillist-archive| for "
"a\n"
"solution.  If everything else fails, you could ask in the vim |maillist| if\n"
"someone can help you."
msgstr ""

#: usr_90.txt:137
msgid ""
"INSTALLING\n"
"\t\t\t\t\t\t\t*install-home*\n"
"If you want to install in your home directory, edit the Makefile and search\n"
"for a line:"
msgstr ""

#: usr_90.txt:142
msgid "\t#prefix = $(HOME) ~"
msgstr ""

#: usr_90.txt:144
msgid ""
"Remove the # at the start of the line.\n"
"   When installing for the whole system, Vim has most likely already "
"selected\n"
"a good installation directory for you.  You can also specify one, see below.\n"
"You need to become root for the following."
msgstr ""

#: usr_90.txt:149
msgid "To install Vim do: >"
msgstr ""

#: usr_90.txt:151
msgid "\tmake install"
msgstr ""

#: usr_90.txt:153
msgid ""
"That should move all the relevant files to the right place.  Now you can try\n"
"running vim to verify that it works.  Use two simple tests to check if Vim "
"can\n"
"find its runtime files: >"
msgstr ""

#: usr_90.txt:157
msgid ""
"\t:help\n"
"\t:syntax enable"
msgstr ""

#: usr_90.txt:160
msgid ""
"If this doesn't work, use this command to check where Vim is looking for the\n"
"runtime files: >"
msgstr ""

#: usr_90.txt:163
msgid "\t:echo $VIMRUNTIME"
msgstr ""

#: usr_90.txt:165
msgid ""
"You can also start Vim with the \"-V\" argument to see what happens during\n"
"startup: >"
msgstr ""

#: usr_90.txt:168
msgid "\tvim -V"
msgstr ""

#: usr_90.txt:170
msgid ""
"Don't forget that the user manual assumes you Vim in a certain way.  After\n"
"installing Vim, follow the instructions at |not-compatible| to make Vim work\n"
"as assumed in this manual."
msgstr ""

#: usr_90.txt:175
msgid "SELECTING FEATURES"
msgstr ""

#: usr_90.txt:177
msgid ""
"Vim has many ways to select features.  One of the simple ways is to edit the\n"
"Makefile.  There are many directions and examples.  Often you can enable or\n"
"disable a feature by uncommenting a line.\n"
"   An alternative is to run \"configure\" separately.  This allows you to\n"
"specify configuration options manually.  The disadvantage is that you have "
"to\n"
"figure out what exactly to type.\n"
"   Some of the most interesting configure arguments follow.  These can also "
"be\n"
"enabled from the Makefile."
msgstr ""

#: usr_90.txt:186
msgid "\t--prefix={directory}\t\tTop directory where to install Vim."
msgstr ""

#: usr_90.txt:188
msgid ""
"\t--with-features=tiny\t\tCompile with many features disabled.\n"
"\t--with-features=small\t\tCompile with some features disabled.\n"
"\t--with-features=big\t\tCompile with more features enabled.\n"
"\t--with-features=huge\t\tCompile with most features enabled.\n"
"\t\t\t\t\tSee |+feature-list| for which feature\n"
"\t\t\t\t\tis enabled in which case."
msgstr ""

#: usr_90.txt:195
msgid ""
"\t--enable-perlinterp\t\tEnable the Perl interface.  There are\n"
"\t\t\t\t\tsimilar arguments for ruby, python and\n"
"\t\t\t\t\ttcl."
msgstr ""

#: usr_90.txt:199
msgid ""
"\t--disable-gui\t\t\tDo not compile the GUI interface.\n"
"\t--without-x\t\t\tDo not compile X-windows features.\n"
"\t\t\t\t\tWhen both of these are used, Vim will\n"
"\t\t\t\t\tnot connect to the X server, which\n"
"\t\t\t\t\tmakes startup faster."
msgstr ""

#: usr_90.txt:205
msgid "To see the whole list use: >"
msgstr ""

#: usr_90.txt:207
msgid "\t./configure --help"
msgstr ""

#: usr_90.txt:209
msgid ""
"You can find a bit of explanation for each feature, and links for more\n"
"information here: |feature-list|.\n"
"   For the adventurous, edit the file \"feature.h\".  You can also change the\n"
"source code yourself!"
msgstr ""

#: usr_90.txt:214
msgid ""
"============================================================================"
"==\n"
"*90.2*\tMS-Windows"
msgstr ""

#: usr_90.txt:217
msgid ""
"There are two ways to install the Vim program for Microsoft Windows.  You "
"can\n"
"uncompress several archives, or use a self-installing big archive.  Most "
"users\n"
"with fairly recent computers will prefer the second method.  For the first\n"
"one, you will need:"
msgstr ""

#: usr_90.txt:222
msgid ""
"\t- An archive with binaries for Vim.\n"
"\t- The Vim runtime archive.\n"
"\t- A program to unpack the zip files."
msgstr ""

#: usr_90.txt:226
msgctxt "usr_90.txt:226"
msgid ""
"To get the Vim archives, look in this file for a mirror near you, this "
"should\n"
"provide the fastest download:"
msgstr ""

#: usr_90.txt:229
msgctxt "usr_90.txt:229"
msgid "\tftp://ftp.vim.org/pub/vim/MIRRORS ~"
msgstr ""

#: usr_90.txt:231
msgid ""
"Or use the home site ftp.vim.org, if you think it's fast enough.  Go to the\n"
"\"pc\" directory and you'll find a list of files there.  The version number is\n"
"embedded in the file name.  You will want to get the most recent version.\n"
"We will use \"61\" here, which is version 6.1."
msgstr ""

#: usr_90.txt:236
msgid "\tgvim61.exe\t\tThe self-installing archive."
msgstr ""

#: usr_90.txt:238
msgid ""
"This is all you need for the second method.  Just launch the executable, and\n"
"follow the prompts."
msgstr ""

#: usr_90.txt:241
msgid ""
"For the first method you must chose one of the binary archives.  These are\n"
"available:"
msgstr ""

#: usr_90.txt:244
msgid ""
"\tgvim61.zip\t\tThe normal MS-Windows GUI version.\n"
"\tgvim61ole.zip\t\tThe MS-Windows GUI version with OLE support.\n"
"\t\t\t\tUses more memory, supports interfacing with\n"
"\t\t\t\tother OLE applications.\n"
"\tvim61w32.zip\t\t32 bit MS-Windows console version.  For use in\n"
"\t\t\t\ta Win NT/2000/XP console.  Does not work well\n"
"\t\t\t\ton Win 95/98.\n"
"\tvim61d32.zip\t\t32 bit MS-DOS version.  For use in the\n"
"\t\t\t\tWin 95/98 console window.\n"
"\tvim61d16.zip\t\t16 bit MS-DOS version.  Only for old systems.\n"
"\t\t\t\tDoes not support long filenames."
msgstr ""

#: usr_90.txt:256
msgid ""
"You only need one of them.  Although you could install both a GUI and a\n"
"console version.  You always need to get the archive with runtime files."
msgstr ""

#: usr_90.txt:259
msgid "\tvim61rt.zip\t\tThe runtime files."
msgstr ""

#: usr_90.txt:261
msgid ""
"Use your un-zip program to unpack the files.  For example, using the \"unzip\"\n"
"program: >"
msgstr ""

#: usr_90.txt:264
msgid ""
"\tcd c:\\\n"
"\tunzip path\\gvim61.zip\n"
"\tunzip path\\vim61rt.zip"
msgstr ""

#: usr_90.txt:268
msgid ""
"This will unpack the files in the directory \"c:\\vim\\vim61\".  If you already\n"
"have a \"vim\" directory somewhere, you will want to move to the directory "
"just\n"
"above it.\n"
"   Now change to the \"vim\\vim61\" directory and run the install program: >"
msgstr ""

#: usr_90.txt:273
msgid "\tinstall"
msgstr ""

#: usr_90.txt:275
msgid ""
"Carefully look through the messages and select the options you want to use.\n"
"If you finally select \"do it\" the install program will carry out the actions\n"
"you selected.\n"
"   The install program doesn't move the runtime files.  They remain where "
"you\n"
"unpacked them."
msgstr ""

#: usr_90.txt:281
msgid ""
"In case you are not satisfied with the features included in the supplied\n"
"binaries, you could try compiling Vim yourself.  Get the source archive from\n"
"the same location as where the binaries are.  You need a compiler for which "
"a\n"
"makefile exists.  Microsoft Visual C works, but is expensive.  The Free\n"
"Borland command-line compiler 5.5 can be used, as well as the free MingW and\n"
"Cygwin compilers.  Check the file src/INSTALLpc.txt for hints."
msgstr ""

#: usr_90.txt:288
msgid ""
"============================================================================"
"==\n"
"*90.3*\tUpgrading"
msgstr ""

#: usr_90.txt:291
msgid ""
"If you are running one version of Vim and want to install another, here is\n"
"what to do."
msgstr ""

#: usr_90.txt:295
msgctxt "usr_90.txt:295"
msgid "UNIX"
msgstr ""

#: usr_90.txt:297
msgid ""
"When you type \"make install\" the runtime files will be copied to a directory\n"
"which is specific for this version.  Thus they will not overwrite a previous\n"
"version.  This makes it possible to use two or more versions next to\n"
"each other.\n"
"   The executable \"vim\" will overwrite an older version.  If you don't care\n"
"about keeping the old version, running \"make install\" will work fine.  You "
"can\n"
"delete the old runtime files manually.  Just delete the directory with the\n"
"version number in it and all files below it.  Example: >"
msgstr ""

#: usr_90.txt:306
msgid "\trm -rf /usr/local/share/vim/vim58"
msgstr ""

#: usr_90.txt:308
msgid ""
"There are normally no changed files below this directory.  If you did change\n"
"the \"filetype.vim\" file, for example, you better merge the changes into the\n"
"new version before deleting it."
msgstr ""

#: usr_90.txt:312
msgid ""
"If you are careful and want to try out the new version for a while before\n"
"switching to it, install the new version under another name.  You need to\n"
"specify a configure argument.  For example: >"
msgstr ""

#: usr_90.txt:316
msgid "\t./configure --with-vim-name=vim6"
msgstr ""

#: usr_90.txt:318
msgid ""
"Before running \"make install\", you could use \"make -n install\" to check that\n"
"no valuable existing files are overwritten.\n"
"   When you finally decide to switch to the new version, all you need to do "
"is\n"
"to rename the binary to \"vim\".  For example: >"
msgstr ""

#: usr_90.txt:323
msgid "\tmv /usr/local/bin/vim6 /usr/local/bin/vim"
msgstr ""

#: usr_90.txt:326
msgctxt "usr_90.txt:326"
msgid "MS-WINDOWS"
msgstr ""

#: usr_90.txt:328
msgid ""
"Upgrading is mostly equal to installing a new version.  Just unpack the "
"files\n"
"in the same place as the previous version.  A new directory will be created,\n"
"e.g., \"vim61\", for the files of the new version.  Your runtime files, vimrc\n"
"file, viminfo, etc. will be left alone.\n"
"   If you want to run the new version next to the old one, you will have to "
"do\n"
"some handwork.  Don't run the install program, it will overwrite a few files\n"
"of the old version.  Execute the new binaries by specifying the full path.\n"
"The program should be able to automatically find the runtime files for the\n"
"right version.  However, this won't work if you set the $VIMRUNTIME variable\n"
"somewhere.\n"
"   If you are satisfied with the upgrade, you can delete the files of the\n"
"previous version.  See |90.5|."
msgstr ""

#: usr_90.txt:341
msgid ""
"============================================================================"
"==\n"
"*90.4*\tCommon installation issues"
msgstr ""

#: usr_90.txt:344
msgid ""
"This section describes some of the common problems that occur when "
"installing\n"
"Vim and suggests some solutions.  It also contains answers to many\n"
"installation questions."
msgstr ""

#: usr_90.txt:349
msgid "Q: I Do Not Have Root Privileges.  How Do I Install Vim? (Unix)"
msgstr ""

#: usr_90.txt:351
msgid ""
"Use the following configuration command to install Vim in a directory called\n"
"$HOME/vim: >"
msgstr ""

#: usr_90.txt:354
msgid "\t./configure --prefix=$HOME"
msgstr ""

#: usr_90.txt:356
msgid ""
"This gives you a personal copy of Vim.  You need to put $HOME/bin in your\n"
"path to execute the editor.  Also see |install-home|."
msgstr ""

#: usr_90.txt:360
msgid "Q: The Colors Are Not Right on My Screen. (Unix)"
msgstr ""

#: usr_90.txt:362
msgid ""
"Check your terminal settings by using the following command in a shell: >"
msgstr ""

#: usr_90.txt:364
msgid "\techo $TERM"
msgstr ""

#: usr_90.txt:366
msgid ""
"If the terminal type listed is not correct, fix it.  For more hints, see\n"
"|06.2|.  Another solution is to always use the GUI version of Vim, called\n"
"gvim.  This avoids the need for a correct terminal setup."
msgstr ""

#: usr_90.txt:371
msgid "Q: My Backspace And Delete Keys Don't Work Right"
msgstr ""

#: usr_90.txt:373
msgid ""
"The definition of what key sends what code is very unclear for backspace "
"<BS>\n"
"and Delete <Del> keys.  First of all, check your $TERM setting.  If there is\n"
"nothing wrong with it, try this: >"
msgstr ""

#: usr_90.txt:377
msgid ""
"\t:set t_kb=^V<BS>\n"
"\t:set t_kD=^V<Del>"
msgstr ""

#: usr_90.txt:380
msgid ""
"In the first line you need to press CTRL-V and then hit the backspace key.\n"
"In the second line you need to press CTRL-V and then hit the Delete key.\n"
"You can put these lines in your vimrc file, see |05.1|.  A disadvantage is\n"
"that it won't work when you use another terminal some day.  Look here for\n"
"alternate solutions: |:fixdel|."
msgstr ""

#: usr_90.txt:387
msgid ""
"Q: I Am Using RedHat Linux.  Can I Use the Vim That Comes with the System?"
msgstr ""

#: usr_90.txt:389
msgid ""
"By default RedHat installs a minimal version of Vim.  Check your RPM "
"packages\n"
"for something named \"Vim-enhanced-version.rpm\" and install that."
msgstr ""

#: usr_90.txt:393
msgid "Q: How Do I Turn Syntax Coloring On?  How do I make plugins work?"
msgstr ""

#: usr_90.txt:395
msgid ""
"Use the example vimrc script.  You can find an explanation on how to use it\n"
"here: |not-compatible|."
msgstr ""

#: usr_90.txt:398
msgid "See chapter 6 for information about syntax highlighting: |usr_06.txt|."
msgstr ""

#: usr_90.txt:401
msgid "Q: What Is a Good vimrc File to Use?"
msgstr ""

#: usr_90.txt:403
msgid "See the www.vim.org Web site for several good examples."
msgstr ""

#: usr_90.txt:406
msgid "Q: Where Do I Find a Good Vim Plugin?"
msgstr ""

#: usr_90.txt:408
msgid ""
"See the Vim-online site: http://vim.sf.net.  Many users have uploaded useful\n"
"Vim scripts and plugins there."
msgstr ""

#: usr_90.txt:412
msgid "Q: Where Do I Find More Tips?"
msgstr ""

#: usr_90.txt:414
msgid ""
"See the Vim-online site: http://vim.sf.net.  There is an archive with hints\n"
"from Vim users.  You might also want to search in the |maillist-archive|."
msgstr ""

#: usr_90.txt:417
msgid ""
"============================================================================"
"==\n"
"*90.5*\tUninstalling Vim"
msgstr ""

#: usr_90.txt:420
msgid ""
"In the unlikely event you want to uninstall Vim completely, this is how you "
"do\n"
"it."
msgstr ""

#: usr_90.txt:424
msgctxt "usr_90.txt:424"
msgid "UNIX"
msgstr ""

#: usr_90.txt:426
msgid ""
"When you installed Vim as a package, check your package manager to find out\n"
"how to remove the package again.\n"
"   If you installed Vim from sources you can use this command: >"
msgstr ""

#: usr_90.txt:430
msgid "\tmake uninstall"
msgstr ""

#: usr_90.txt:432
msgid ""
"However, if you have deleted the original files or you used an archive that\n"
"someone supplied, you can't do this.  Do delete the files manually, here is "
"an\n"
"example for when \"/usr/local\" was used as the root: >"
msgstr ""

#: usr_90.txt:436
msgid ""
"\trm -rf /usr/local/share/vim/vim61\n"
"\trm /usr/local/bin/eview\n"
"\trm /usr/local/bin/evim\n"
"\trm /usr/local/bin/ex\n"
"\trm /usr/local/bin/gview\n"
"\trm /usr/local/bin/gvim\n"
"\trm /usr/local/bin/gvim\n"
"\trm /usr/local/bin/gvimdiff\n"
"\trm /usr/local/bin/rgview\n"
"\trm /usr/local/bin/rgvim\n"
"\trm /usr/local/bin/rview\n"
"\trm /usr/local/bin/rvim\n"
"\trm /usr/local/bin/rvim\n"
"\trm /usr/local/bin/view\n"
"\trm /usr/local/bin/vim\n"
"\trm /usr/local/bin/vimdiff\n"
"\trm /usr/local/bin/vimtutor\n"
"\trm /usr/local/bin/xxd\n"
"\trm /usr/local/man/man1/eview.1\n"
"\trm /usr/local/man/man1/evim.1\n"
"\trm /usr/local/man/man1/ex.1\n"
"\trm /usr/local/man/man1/gview.1\n"
"\trm /usr/local/man/man1/gvim.1\n"
"\trm /usr/local/man/man1/gvimdiff.1\n"
"\trm /usr/local/man/man1/rgview.1\n"
"\trm /usr/local/man/man1/rgvim.1\n"
"\trm /usr/local/man/man1/rview.1\n"
"\trm /usr/local/man/man1/rvim.1\n"
"\trm /usr/local/man/man1/view.1\n"
"\trm /usr/local/man/man1/vim.1\n"
"\trm /usr/local/man/man1/vimdiff.1\n"
"\trm /usr/local/man/man1/vimtutor.1\n"
"\trm /usr/local/man/man1/xxd.1"
msgstr ""

#: usr_90.txt:471
msgctxt "usr_90.txt:471"
msgid "MS-WINDOWS"
msgstr ""

#: usr_90.txt:473
msgid ""
"If you installed Vim with the self-installing archive you can run\n"
"the \"uninstall-gui\" program located in the same directory as the other Vim\n"
"programs, e.g. \"c:\\vim\\vim61\".  You can also launch it from the Start menu "
"if\n"
"installed the Vim entries there.  This will remove most of the files, menu\n"
"entries and desktop shortcuts.  Some files may remain however, as they need "
"a\n"
"Windows restart before being deleted.\n"
"   You will be given the option to remove the whole \"vim\" directory.  It\n"
"probably contains your vimrc file and other runtime files that you created, "
"so\n"
"be careful."
msgstr ""

#: usr_90.txt:483
msgid ""
"Else, if you installed Vim with the zip archives, the preferred way is to "
"use\n"
"the \"uninstal\" program (note the missing l at the end).  You can find it in\n"
"the same directory as the \"install\" program, e.g., \"c:\\vim\\vim61\".  This\n"
"should also work from the usual \"install/remove software\" page.\n"
"   However, this only removes the registry entries for Vim.  You have to\n"
"delete the files yourself.  Simply select the directory \"vim\\vim61\" and "
"delete\n"
"it recursively.  There should be no files there that you changed, but you\n"
"might want to check that first.\n"
"   The \"vim\" directory probably contains your vimrc file and other runtime\n"
"files that you created.  You might want to keep that."
msgstr ""

#: usr_90.txt:494
msgid ""
"============================================================================"
"=="
msgstr ""

#: usr_90.txt:496
msgid "Table of contents: |usr_toc.txt|"
msgstr ""

#: usr_90.txt:498
msgid "Copyright: see |manual-copyright|  vim:tw=78:ts=8:ft=help:norl:"
msgstr ""
