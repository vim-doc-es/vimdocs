# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the Vim package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Vim 7.2\n"
"Report-Msgid-Bugs-To: vim@bugs.org\n"
"POT-Creation-Date: 2009-11-24 01:12+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: ENCODING"

#. type: Plain text
#: original/TXT/usr_toc.txt:4 original/TXT/usr_01.txt:4
#: original/TXT/usr_02.txt:4 original/TXT/usr_03.txt:4
#: original/TXT/usr_04.txt:4 original/TXT/usr_05.txt:4
#: original/TXT/usr_06.txt:4 original/TXT/usr_07.txt:4
#: original/TXT/usr_08.txt:4 original/TXT/usr_09.txt:4
#: original/TXT/usr_10.txt:4 original/TXT/usr_11.txt:4
#: original/TXT/usr_12.txt:4 original/TXT/usr_20.txt:4
#: original/TXT/usr_21.txt:4 original/TXT/usr_22.txt:4
#: original/TXT/usr_23.txt:4 original/TXT/usr_24.txt:4
#, no-wrap
msgid "\t\t     VIM USER MANUAL - by Bram Moolenaar\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_toc.txt:7 original/TXT/usr_toc.txt:58
#: original/TXT/usr_toc.txt:172 original/TXT/usr_toc.txt:280
#: original/TXT/usr_toc.txt:339 original/TXT/usr_toc.txt:351
#: original/TXT/usr_01.txt:19 original/TXT/usr_01.txt:50
#: original/TXT/usr_01.txt:100 original/TXT/usr_01.txt:181
#: original/TXT/usr_02.txt:25 original/TXT/usr_02.txt:69
#: original/TXT/usr_02.txt:130 original/TXT/usr_02.txt:179
#: original/TXT/usr_02.txt:239 original/TXT/usr_02.txt:307
#: original/TXT/usr_02.txt:369 original/TXT/usr_02.txt:406
#: original/TXT/usr_02.txt:560 original/TXT/usr_03.txt:28
#: original/TXT/usr_03.txt:74 original/TXT/usr_03.txt:101
#: original/TXT/usr_03.txt:147 original/TXT/usr_03.txt:172
#: original/TXT/usr_03.txt:223 original/TXT/usr_03.txt:265
#: original/TXT/usr_03.txt:320 original/TXT/usr_03.txt:491
#: original/TXT/usr_03.txt:552 original/TXT/usr_03.txt:650
#: original/TXT/usr_04.txt:27 original/TXT/usr_04.txt:74
#: original/TXT/usr_04.txt:160 original/TXT/usr_04.txt:194
#: original/TXT/usr_04.txt:269 original/TXT/usr_04.txt:324
#: original/TXT/usr_04.txt:360 original/TXT/usr_04.txt:390
#: original/TXT/usr_04.txt:446 original/TXT/usr_04.txt:469
#: original/TXT/usr_04.txt:510 original/TXT/usr_05.txt:24
#: original/TXT/usr_05.txt:63 original/TXT/usr_05.txt:219
#: original/TXT/usr_05.txt:266 original/TXT/usr_05.txt:418
#: original/TXT/usr_05.txt:467 original/TXT/usr_05.txt:506
#: original/TXT/usr_05.txt:621 original/TXT/usr_06.txt:24
#: original/TXT/usr_06.txt:50 original/TXT/usr_06.txt:135
#: original/TXT/usr_06.txt:189 original/TXT/usr_06.txt:266
#: original/TXT/usr_06.txt:272 original/TXT/usr_07.txt:24
#: original/TXT/usr_07.txt:63 original/TXT/usr_07.txt:179
#: original/TXT/usr_07.txt:266 original/TXT/usr_07.txt:316
#: original/TXT/usr_07.txt:404 original/TXT/usr_07.txt:444
#: original/TXT/usr_07.txt:475 original/TXT/usr_08.txt:26
#: original/TXT/usr_08.txt:82 original/TXT/usr_08.txt:109
#: original/TXT/usr_08.txt:161 original/TXT/usr_08.txt:215
#: original/TXT/usr_08.txt:278 original/TXT/usr_08.txt:337
#: original/TXT/usr_08.txt:477 original/TXT/usr_08.txt:509
#: original/TXT/usr_08.txt:597 original/TXT/usr_09.txt:21
#: original/TXT/usr_09.txt:124 original/TXT/usr_09.txt:175
#: original/TXT/usr_09.txt:259 original/TXT/usr_09.txt:285
#: original/TXT/usr_10.txt:27 original/TXT/usr_10.txt:144
#: original/TXT/usr_10.txt:221 original/TXT/usr_10.txt:342
#: original/TXT/usr_10.txt:378 original/TXT/usr_10.txt:547
#: original/TXT/usr_10.txt:621 original/TXT/usr_10.txt:667
#: original/TXT/usr_10.txt:692 original/TXT/usr_10.txt:820
#: original/TXT/usr_11.txt:22 original/TXT/usr_11.txt:66
#: original/TXT/usr_11.txt:126 original/TXT/usr_11.txt:268
#: original/TXT/usr_11.txt:283 original/TXT/usr_12.txt:25
#: original/TXT/usr_12.txt:90 original/TXT/usr_12.txt:131
#: original/TXT/usr_12.txt:177 original/TXT/usr_12.txt:202
#: original/TXT/usr_12.txt:231 original/TXT/usr_12.txt:281
#: original/TXT/usr_12.txt:309 original/TXT/usr_12.txt:354
#: original/TXT/usr_20.txt:22 original/TXT/usr_20.txt:113
#: original/TXT/usr_20.txt:158 original/TXT/usr_20.txt:285
#: original/TXT/usr_20.txt:327 original/TXT/usr_20.txt:380
#: original/TXT/usr_21.txt:24 original/TXT/usr_21.txt:47
#: original/TXT/usr_21.txt:87 original/TXT/usr_21.txt:236
#: original/TXT/usr_21.txt:385 original/TXT/usr_21.txt:438
#: original/TXT/usr_21.txt:495 original/TXT/usr_22.txt:22
#: original/TXT/usr_22.txt:148 original/TXT/usr_22.txt:213
#: original/TXT/usr_22.txt:272 original/TXT/usr_22.txt:396
#: original/TXT/usr_23.txt:23 original/TXT/usr_23.txt:114
#: original/TXT/usr_23.txt:156 original/TXT/usr_23.txt:238
#: original/TXT/usr_23.txt:324 original/TXT/usr_23.txt:339
#: original/TXT/usr_24.txt:28 original/TXT/usr_24.txt:96
#: original/TXT/usr_24.txt:119 original/TXT/usr_24.txt:268
#: original/TXT/usr_24.txt:305 original/TXT/usr_24.txt:336
#: original/TXT/usr_24.txt:369 original/TXT/usr_24.txt:493
#: original/TXT/usr_24.txt:537 original/TXT/usr_24.txt:583
#: original/TXT/usr_24.txt:602
#, no-wrap
msgid "==============================================================================\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_toc.txt:353 original/TXT/usr_01.txt:185
#: original/TXT/usr_02.txt:564 original/TXT/usr_03.txt:654
#: original/TXT/usr_04.txt:514 original/TXT/usr_05.txt:625
#: original/TXT/usr_06.txt:276 original/TXT/usr_07.txt:479
#: original/TXT/usr_08.txt:601 original/TXT/usr_09.txt:289
#: original/TXT/usr_10.txt:824 original/TXT/usr_11.txt:287
#: original/TXT/usr_12.txt:358 original/TXT/usr_20.txt:384
#: original/TXT/usr_21.txt:499 original/TXT/usr_22.txt:400
#: original/TXT/usr_23.txt:343 original/TXT/usr_24.txt:606
msgid "Copyright: see |manual-copyright| vim:tw=78:ts=8:ft=help:norl:"
msgstr ""

#. type: Plain text
#: original/TXT/usr_05.txt:530 original/TXT/usr_23.txt:272
#, no-wrap
msgid "\t:set nowrap\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_12.txt:211 original/TXT/usr_23.txt:279
#, no-wrap
msgid "\tg CTRL-G\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_22.txt:224 original/TXT/usr_23.txt:129
#, no-wrap
msgid "\tgf\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:2
#, no-wrap
msgid "*usr_23.txt*\tFor Vim version 7.2.  Last change: 2006 Apr 24\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:6
#, no-wrap
msgid "\t\t\t     Editing other files\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:12
msgid ""
"This chapter is about editing files that are not ordinary files.  With Vim "
"you can edit files that are compressed or encrypted.  Some files need to be "
"accessed over the internet.  With some restrictions, binary files can be "
"edited as well."
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:18
#, no-wrap
msgid ""
"|23.1|\tDOS, Mac and Unix files\n"
"|23.2|\tFiles on the internet\n"
"|23.3|\tEncryption\n"
"|23.4|\tBinary files\n"
"|23.5|\tCompressed files\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:22
#, no-wrap
msgid ""
"     Next chapter: |usr_24.txt|  Inserting quickly\n"
" Previous chapter: |usr_22.txt|  Finding the file to edit\n"
"Table of contents: |usr_toc.txt|\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:25
#, no-wrap
msgid "*23.1*\tDOS, Mac and Unix files\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:40
#, no-wrap
msgid ""
"Back in the early days, the old Teletype machines used two characters to\n"
"start a new line.  One to move the carriage back to the first position\n"
"(carriage return, <CR>), another to move the paper up (line feed, <LF>).\n"
"   When computers came out, storage was expensive.  Some people decided that\n"
"they did not need two characters for end-of-line.  The UNIX people decided\n"
"they could use <Line Feed> only for end-of-line.  The Apple people\n"
"standardized on <CR>.  The MS-DOS (and Microsoft Windows) folks decided to\n"
"keep the old <CR><LF>.\n"
"   This means that if you try to move a file from one system to another, you\n"
"have line-break problems.  The Vim editor automatically recognizes the\n"
"different file formats and handles things properly behind your back.\n"
"   The option 'fileformats' contains the various formats that will be tried\n"
"when a new file is edited.  The following command, for example, tells Vim to\n"
"try UNIX format first and MS-DOS format second: >\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:42
#, no-wrap
msgid "\t:set fileformats=unix,dos\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:47
msgid ""
"You will notice the format in the message you get when editing a file.  You "
"don't see anything if you edit a native file format.  Thus editing a Unix "
"file on Unix won't result in a remark.  But when you edit a dos file, Vim "
"will notify you of this:"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:49
#, no-wrap
msgid "\t\"/tmp/test\" [dos] 3L, 71C ~\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:53
#, no-wrap
msgid ""
"For a Mac file you would see \"[mac]\".\n"
"   The detected file format is stored in the 'fileformat' option.  To see\n"
"which format you have, execute the following command: >\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:55
#, no-wrap
msgid "\t:set fileformat?\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:57
msgid "The three names that Vim uses are:"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:61
#, no-wrap
msgid ""
"\tunix\t\t<LF>\n"
"\tdos\t\t<CR><LF>\n"
"\tmac\t\t<CR>\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:64
msgid "USING THE MAC FORMAT"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:75
#, no-wrap
msgid ""
"On Unix, <LF> is used to break a line.  It's not unusual to have a <CR>\n"
"character halfway a line.  Incidentally, this happens quite often in Vi (and\n"
"Vim) scripts.\n"
"   On the Macintosh, where <CR> is the line break character, it's possible to\n"
"have a <LF> character halfway a line.\n"
"   The result is that it's not possible to be 100% sure whether a file\n"
"containing both <CR> and <LF> characters is a Mac or a Unix file.  Therefore,\n"
"Vim assumes that on Unix you probably won't edit a Mac file, and doesn't check\n"
"for this type of file.  To check for this format anyway, add \"mac\" to\n"
"'fileformats': >\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:77
#, no-wrap
msgid "\t:set fileformats+=mac\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:80
msgid ""
"Then Vim will take a guess at the file format.  Watch out for situations "
"where Vim guesses wrong."
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:83
msgid "OVERRULING THE FORMAT"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:88
msgid ""
"If you use the good old Vi and try to edit an MS-DOS format file, you will "
"find that each line ends with a ^M character.  (^M is <CR>).  The automatic "
"detection avoids this.  Suppose you do want to edit the file that way? Then "
"you need to overrule the format: >"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:90
#, no-wrap
msgid "\t:edit ++ff=unix file.txt\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:96
#, no-wrap
msgid ""
"The \"++\" string is an item that tells Vim that an option name follows, which\n"
"overrules the default for this single command.  \"++ff\" is used for\n"
"'fileformat'.  You could also use \"++ff=mac\" or \"++ff=dos\".\n"
"   This doesn't work for any option, only \"++ff\" and \"++enc\" are currently\n"
"implemented.  The full names \"++fileformat\" and \"++encoding\" also work.\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:99
msgid "CONVERSION"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:105
#, no-wrap
msgid ""
"You can use the 'fileformat' option to convert from one file format to\n"
"another.  Suppose, for example, that you have an MS-DOS file named README.TXT\n"
"that you want to convert to UNIX format.  Start by editing the MS-DOS format\n"
"file: >\n"
"\tvim README.TXT\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:108
msgid ""
"Vim will recognize this as a dos format file.  Now change the file format to "
"UNIX: >"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:111
#, no-wrap
msgid ""
"\t:set fileformat=unix\n"
"\t:write\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:113
msgid "The file is written in Unix format."
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:116
#, no-wrap
msgid "*23.2*\tFiles on the internet\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:119
msgid ""
"Someone sends you an e-mail message, which refers to a file by its URL.  For "
"example:"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:122
#, no-wrap
msgid ""
"\tYou can find the information here: ~\n"
"\t\tftp://ftp.vim.org/pub/vim/README ~\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:127
#, no-wrap
msgid ""
"You could start a program to download the file, save it on your local disk and\n"
"then start Vim to edit it.\n"
"   There is a much simpler way.  Move the cursor to any character of the URL.\n"
"Then use this command: >\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:137
#, no-wrap
msgid ""
"With a bit of luck, Vim will figure out which program to use for downloading\n"
"the file, download it and edit the copy.  To open the file in a new window use\n"
"CTRL-W f.\n"
"   If something goes wrong you will get an error message.  It's possible that\n"
"the URL is wrong, you don't have permission to read it, the network connection\n"
"is down, etc.  Unfortunately, it's hard to tell the cause of the error.  You\n"
"might want to try the manual way of downloading the file.\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:140
msgid ""
"Accessing files over the internet works with the netrw plugin.  Currently "
"URLs with these formats are recognized:"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:145
#, no-wrap
msgid ""
"\tftp://\t\tuses ftp\n"
"\trcp://\t\tuses rcp\n"
"\tscp://\t\tuses scp\n"
"\thttp://\t\tuses wget (reading only)\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:149
msgid ""
"Vim doesn't do the communication itself, it relies on the mentioned programs "
"to be available on your computer.  On most Unix systems \"ftp\" and \"rcp\" "
"will be present.  \"scp\" and \"wget\" might need to be installed."
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:153
msgid ""
"Vim detects these URLs for each command that starts editing a new file, also "
"with \":edit\" and \":split\", for example.  Write commands also work, "
"except for http://."
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:155
msgid "For more information, also about passwords, see |netrw|."
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:158
#, no-wrap
msgid "*23.3*\tEncryption\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:165
#, no-wrap
msgid ""
"Some information you prefer to keep to yourself.  For example, when writing\n"
"a test on a computer that students also use.  You don't want clever students\n"
"to figure out a way to read the questions before the exam starts.  Vim can\n"
"encrypt the file for you, which gives you some protection.\n"
"   To start editing a new file with encryption, use the \"-x\" argument to start\n"
"Vim.  Example: >\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:167
#, no-wrap
msgid "\tvim -x exam.txt\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:169
msgid "Vim prompts you for a key used for encrypting and decrypting the file:"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:171
#, no-wrap
msgid "\tEnter encryption key: ~\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:175
msgid ""
"Carefully type the secret key now.  You cannot see the characters you type, "
"they will be replaced by stars.  To avoid the situation that a typing "
"mistake will cause trouble, Vim asks you to enter the key again:"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:177
#, no-wrap
msgid "\tEnter same key again: ~\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:189
#, no-wrap
msgid ""
"You can now edit this file normally and put in all your secrets.  When you\n"
"finish editing the file and tell Vim to exit, the file is encrypted and\n"
"written.\n"
"   When you edit the file with Vim, it will ask you to enter the same key\n"
"again.  You don't need to use the \"-x\" argument.  You can also use the normal\n"
"\":edit\" command.  Vim adds a magic string to the file by which it recognizes\n"
"that the file was encrypted.\n"
"   If you try to view this file using another program, all you get is garbage.\n"
"Also, if you edit the file with Vim and enter the wrong key, you get garbage.\n"
"Vim does not have a mechanism to check if the key is the right one (this makes\n"
"it much harder to break the key).\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:192
msgid "SWITCHING ENCRYPTION ON AND OFF"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:196
#, no-wrap
msgid ""
"To disable the encryption of a file, set the 'key' option to an empty string:\n"
">\n"
"\t:set key=\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:203
#, no-wrap
msgid ""
"The next time you write the file this will be done without encryption.\n"
"   Setting the 'key' option to enable encryption is not a good idea, because\n"
"the password appears in the clear.  Anyone shoulder-surfing can read your\n"
"password.\n"
"   To avoid this problem, the \":X\" command was created.  It asks you for an\n"
"encryption key, just like the \"-x\" argument did: >\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:207
#, no-wrap
msgid ""
"\t:X\n"
"\tEnter encryption key: ******\n"
"\tEnter same key again: ******\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:210
msgid "LIMITS ON ENCRYPTION"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:220
#, no-wrap
msgid ""
"The encryption algorithm used by Vim is weak.  It is good enough to keep out\n"
"the casual prowler, but not good enough to keep out a cryptology expert with\n"
"lots of time on his hands.  Also you should be aware that the swap file is not\n"
"encrypted; so while you are editing, people with superuser privileges can read\n"
"the unencrypted text from this file.\n"
"   One way to avoid letting people read your swap file is to avoid using one.\n"
"If the -n argument is supplied on the command line, no swap file is used\n"
"(instead, Vim puts everything in memory).  For example, to edit the encrypted\n"
"file \"file.txt\" without a swap file use the following command: >\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:222
#, no-wrap
msgid "\tvim -x -n file.txt\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:224
msgid "When already editing a file, the swapfile can be disabled with: >"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:226
#, no-wrap
msgid "\t:setlocal noswapfile\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:229
msgid ""
"Since there is no swapfile, recovery will be impossible.  Save the file a "
"bit more often to avoid the risk of losing your changes."
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:237
#, no-wrap
msgid ""
"While the file is in memory, it is in plain text.  Anyone with privilege can\n"
"look in the editor's memory and discover the contents of the file.\n"
"   If you use a viminfo file, be aware that the contents of text registers are\n"
"written out in the clear as well.\n"
"   If you really want to secure the contents of a file, edit it only on a\n"
"portable computer not connected to a network, use good encryption tools, and\n"
"keep the computer locked up in a big safe when not in use.\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:240
#, no-wrap
msgid "*23.4*\tBinary files\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:247
#, no-wrap
msgid ""
"You can edit binary files with Vim.  Vim wasn't really made for this, thus\n"
"there are a few restrictions.  But you can read a file, change a character and\n"
"write it back, with the result that only that one character was changed and\n"
"the file is identical otherwise.\n"
"   To make sure that Vim does not use its clever tricks in the wrong way, add\n"
"the \"-b\" argument when starting Vim: >\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:249 original/TXT/usr_23.txt:301
#, no-wrap
msgid "\tvim -b datafile\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:253
msgid ""
"This sets the 'binary' option.  The effect of this is that unexpected side "
"effects are turned off.  For example, 'textwidth' is set to zero, to avoid "
"automatic formatting of lines.  And files are always read in Unix file "
"format."
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:257
msgid ""
"Binary mode can be used to change a message in a program.  Be careful not to "
"insert or delete any characters, it would stop the program from working.  "
"Use \"R\" to enter replace mode."
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:259
msgid ""
"Many characters in the file will be unprintable.  To see them in Hex format: "
">"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:261
#, no-wrap
msgid "\t:set display=uhex\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:265
msgid ""
"Otherwise, the \"ga\" command can be used to see the value of the character "
"under the cursor.  The output, when the cursor is on an <Esc>, looks like "
"this:"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:267
#, no-wrap
msgid "\t<^[>  27,  Hex 1b,  Octal 033 ~\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:270
msgid ""
"There might not be many line breaks in the file.  To get some overview "
"switch the 'wrap' option off: >"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:275
msgid "BYTE POSITION"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:277
msgid "To see on which byte you are in the file use this command: >"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:281
msgid "The output is verbose:"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:283
#, no-wrap
msgid "    Col 9-16 of 9-16; Line 277 of 330; Word 1806 of 2058; Byte 10580 of 12206 ~\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:289
#, no-wrap
msgid ""
"The last two numbers are the byte position in the file and the total number of\n"
"bytes.  This takes into account how 'fileformat' changes the number of bytes\n"
"that a line break uses.\n"
"    To move to a specific byte in the file, use the \"go\" command.  For\n"
"example, to move to byte 2345: >\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:291
#, no-wrap
msgid "\t2345go\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:294
msgid "USING XXD"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:299
#, no-wrap
msgid ""
"A real binary editor shows the text in two ways: as it is and in hex format.\n"
"You can do this in Vim by first converting the file with the \"xxd\" program.\n"
"This comes with Vim.\n"
"   First edit the file in binary mode: >\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:303
msgid "Now convert the file to a hex dump with xxd: >"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:305
#, no-wrap
msgid "\t:%!xxd\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:307
msgid "The text will look like this:"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:311
#, no-wrap
msgid ""
"\t0000000: 1f8b 0808 39d7 173b 0203 7474 002b 4e49  ....9..;..tt.+NI ~\n"
"\t0000010: 4b2c 8660 eb9c ecac c462 eb94 345e 2e30  K,.`.....b..4^.0 ~\n"
"\t0000020: 373b 2731 0b22 0ca6 c1a2 d669 1035 39d9  7;'1.\".....i.59. ~\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:318
#, no-wrap
msgid ""
"You can now view and edit the text as you like.  Vim treats the information as\n"
"ordinary text.  Changing the hex does not cause the printable character to be\n"
"changed, or the other way around.\n"
"   Finally convert it back with:\n"
">\n"
"\t:%!xxd -r\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:321
msgid ""
"Only changes in the hex part are used.  Changes in the printable text part "
"on the right are ignored."
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:323
msgid "See the manual page of xxd for more information."
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:326
#, no-wrap
msgid "*23.5*\tCompressed files\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:331
#, no-wrap
msgid ""
"This is easy: You can edit a compressed file just like any other file.  The\n"
"\"gzip\" plugin takes care of decompressing the file when you edit it.  And\n"
"compressing it again when you write it.\n"
"   These compression methods are currently supported:\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:335
#, no-wrap
msgid ""
"\t.Z\tcompress\n"
"\t.gz\tgzip\n"
"\t.bz2\tbzip2\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:338
msgid ""
"Vim uses the mentioned programs to do the actual compression and "
"decompression.  You might need to install the programs first."
msgstr ""

#. type: Plain text
#: original/TXT/usr_23.txt:342
msgid "Next chapter: |usr_24.txt| Inserting quickly"
msgstr ""
