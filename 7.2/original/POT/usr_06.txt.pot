# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the Vim package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Vim 7.2\n"
"Report-Msgid-Bugs-To: vim@bugs.org\n"
"POT-Creation-Date: 2009-11-25 22:49+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: ENCODING"

#. type: Plain text
#: original/TXT/usr_toc.txt:4 original/TXT/usr_01.txt:4
#: original/TXT/usr_02.txt:4 original/TXT/usr_03.txt:4
#: original/TXT/usr_04.txt:4 original/TXT/usr_05.txt:4
#: original/TXT/usr_06.txt:4 original/TXT/usr_07.txt:4
#: original/TXT/usr_08.txt:4 original/TXT/usr_09.txt:4
#: original/TXT/usr_10.txt:4 original/TXT/usr_11.txt:4
#: original/TXT/usr_12.txt:4 original/TXT/usr_20.txt:4
#: original/TXT/usr_21.txt:4 original/TXT/usr_22.txt:4
#: original/TXT/usr_23.txt:4 original/TXT/usr_24.txt:4
#, no-wrap
msgid "\t\t     VIM USER MANUAL - by Bram Moolenaar\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_toc.txt:7 original/TXT/usr_toc.txt:58
#: original/TXT/usr_toc.txt:172 original/TXT/usr_toc.txt:280
#: original/TXT/usr_toc.txt:339 original/TXT/usr_toc.txt:351
#: original/TXT/usr_01.txt:19 original/TXT/usr_01.txt:50
#: original/TXT/usr_01.txt:100 original/TXT/usr_01.txt:181
#: original/TXT/usr_02.txt:25 original/TXT/usr_02.txt:69
#: original/TXT/usr_02.txt:130 original/TXT/usr_02.txt:179
#: original/TXT/usr_02.txt:239 original/TXT/usr_02.txt:307
#: original/TXT/usr_02.txt:369 original/TXT/usr_02.txt:406
#: original/TXT/usr_02.txt:560 original/TXT/usr_03.txt:28
#: original/TXT/usr_03.txt:74 original/TXT/usr_03.txt:101
#: original/TXT/usr_03.txt:147 original/TXT/usr_03.txt:172
#: original/TXT/usr_03.txt:223 original/TXT/usr_03.txt:265
#: original/TXT/usr_03.txt:320 original/TXT/usr_03.txt:491
#: original/TXT/usr_03.txt:552 original/TXT/usr_03.txt:650
#: original/TXT/usr_04.txt:27 original/TXT/usr_04.txt:74
#: original/TXT/usr_04.txt:160 original/TXT/usr_04.txt:194
#: original/TXT/usr_04.txt:269 original/TXT/usr_04.txt:324
#: original/TXT/usr_04.txt:360 original/TXT/usr_04.txt:390
#: original/TXT/usr_04.txt:446 original/TXT/usr_04.txt:469
#: original/TXT/usr_04.txt:510 original/TXT/usr_05.txt:24
#: original/TXT/usr_05.txt:63 original/TXT/usr_05.txt:219
#: original/TXT/usr_05.txt:266 original/TXT/usr_05.txt:418
#: original/TXT/usr_05.txt:467 original/TXT/usr_05.txt:506
#: original/TXT/usr_05.txt:621 original/TXT/usr_06.txt:24
#: original/TXT/usr_06.txt:50 original/TXT/usr_06.txt:135
#: original/TXT/usr_06.txt:189 original/TXT/usr_06.txt:266
#: original/TXT/usr_06.txt:272 original/TXT/usr_07.txt:24
#: original/TXT/usr_07.txt:63 original/TXT/usr_07.txt:179
#: original/TXT/usr_07.txt:266 original/TXT/usr_07.txt:316
#: original/TXT/usr_07.txt:404 original/TXT/usr_07.txt:444
#: original/TXT/usr_07.txt:475 original/TXT/usr_08.txt:26
#: original/TXT/usr_08.txt:82 original/TXT/usr_08.txt:109
#: original/TXT/usr_08.txt:161 original/TXT/usr_08.txt:215
#: original/TXT/usr_08.txt:278 original/TXT/usr_08.txt:337
#: original/TXT/usr_08.txt:477 original/TXT/usr_08.txt:509
#: original/TXT/usr_08.txt:597 original/TXT/usr_09.txt:21
#: original/TXT/usr_09.txt:124 original/TXT/usr_09.txt:175
#: original/TXT/usr_09.txt:259 original/TXT/usr_09.txt:285
#: original/TXT/usr_10.txt:27 original/TXT/usr_10.txt:144
#: original/TXT/usr_10.txt:221 original/TXT/usr_10.txt:342
#: original/TXT/usr_10.txt:378 original/TXT/usr_10.txt:547
#: original/TXT/usr_10.txt:621 original/TXT/usr_10.txt:667
#: original/TXT/usr_10.txt:692 original/TXT/usr_10.txt:820
#: original/TXT/usr_11.txt:22 original/TXT/usr_11.txt:66
#: original/TXT/usr_11.txt:126 original/TXT/usr_11.txt:268
#: original/TXT/usr_11.txt:283 original/TXT/usr_12.txt:25
#: original/TXT/usr_12.txt:90 original/TXT/usr_12.txt:131
#: original/TXT/usr_12.txt:177 original/TXT/usr_12.txt:202
#: original/TXT/usr_12.txt:231 original/TXT/usr_12.txt:281
#: original/TXT/usr_12.txt:309 original/TXT/usr_12.txt:354
#: original/TXT/usr_20.txt:22 original/TXT/usr_20.txt:113
#: original/TXT/usr_20.txt:158 original/TXT/usr_20.txt:285
#: original/TXT/usr_20.txt:327 original/TXT/usr_20.txt:380
#: original/TXT/usr_21.txt:24 original/TXT/usr_21.txt:47
#: original/TXT/usr_21.txt:87 original/TXT/usr_21.txt:236
#: original/TXT/usr_21.txt:385 original/TXT/usr_21.txt:438
#: original/TXT/usr_21.txt:495 original/TXT/usr_22.txt:22
#: original/TXT/usr_22.txt:148 original/TXT/usr_22.txt:213
#: original/TXT/usr_22.txt:272 original/TXT/usr_22.txt:396
#: original/TXT/usr_23.txt:23 original/TXT/usr_23.txt:114
#: original/TXT/usr_23.txt:156 original/TXT/usr_23.txt:238
#: original/TXT/usr_23.txt:324 original/TXT/usr_23.txt:339
#: original/TXT/usr_24.txt:28 original/TXT/usr_24.txt:96
#: original/TXT/usr_24.txt:119 original/TXT/usr_24.txt:268
#: original/TXT/usr_24.txt:305 original/TXT/usr_24.txt:336
#: original/TXT/usr_24.txt:369 original/TXT/usr_24.txt:493
#: original/TXT/usr_24.txt:537 original/TXT/usr_24.txt:583
#: original/TXT/usr_24.txt:602
#, no-wrap
msgid "==============================================================================\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_toc.txt:353 original/TXT/usr_01.txt:185
#: original/TXT/usr_02.txt:564 original/TXT/usr_03.txt:654
#: original/TXT/usr_04.txt:514 original/TXT/usr_05.txt:625
#: original/TXT/usr_06.txt:276 original/TXT/usr_07.txt:479
#: original/TXT/usr_08.txt:601 original/TXT/usr_09.txt:289
#: original/TXT/usr_10.txt:824 original/TXT/usr_11.txt:287
#: original/TXT/usr_12.txt:358 original/TXT/usr_20.txt:384
#: original/TXT/usr_21.txt:499 original/TXT/usr_22.txt:400
#: original/TXT/usr_23.txt:343 original/TXT/usr_24.txt:606
msgid "Copyright: see |manual-copyright| vim:tw=78:ts=8:ft=help:norl:"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:2
#, no-wrap
msgid "*usr_06.txt*\tFor Vim version 7.2.  Last change: 2006 Apr 24\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:6
#, no-wrap
msgid "\t\t\t  Using syntax highlighting\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:12
msgid ""
"Black and white text is boring.  With colors your file comes to life.  This "
"not only looks nice, it also speeds up your work.  Change the colors used "
"for the different sorts of text.  Print your text, with the colors you see "
"on the screen."
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:19
#, no-wrap
msgid ""
"|06.1|\tSwitching it on\n"
"|06.2|\tNo or wrong colors?\n"
"|06.3|\tDifferent colors\n"
"|06.4|\tWith colors or without colors\n"
"|06.5|\tPrinting with colors\n"
"|06.6|\tFurther reading\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:23
#, no-wrap
msgid ""
"     Next chapter: |usr_07.txt|  Editing more than one file\n"
" Previous chapter: |usr_05.txt|  Set your settings\n"
"Table of contents: |usr_toc.txt|\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:26
#, no-wrap
msgid "*06.1*\tSwitching it on\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:28
msgid "It all starts with one simple command: >"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:30
#, no-wrap
msgid "\t:syntax enable\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:36
msgid ""
"That should work in most situations to get color in your files.  Vim will "
"automagically detect the type of file and load the right syntax "
"highlighting.  Suddenly comments are blue, keywords brown and strings red.  "
"This makes it easy to overview the file.  After a while you will find that "
"black&white text slows you down!"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:39
msgid ""
"If you always want to use syntax highlighting, put the \":syntax enable\" "
"command in your |vimrc| file."
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:42
msgid ""
"If you want syntax highlighting only when the terminal supports colors, you "
"can put this in your |vimrc| file: >"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:46
#, no-wrap
msgid ""
"\tif &t_Co > 1\n"
"\t   syntax enable\n"
"\tendif\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:49
msgid ""
"If you want syntax highlighting only in the GUI version, put the \":syntax "
"enable\" command in your |gvimrc| file."
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:52
#, no-wrap
msgid "*06.2*\tNo or wrong colors?\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:54
msgid "There can be a number of reasons why you don't see colors:"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:60
#, no-wrap
msgid ""
"- Your terminal does not support colors.\n"
"\tVim will use bold, italic and underlined text, but this doesn't look\n"
"\tvery nice.  You probably will want to try to get a terminal with\n"
"\tcolors.  For Unix, I recommend the xterm from the XFree86 project:\n"
"\t|xfree-xterm|.\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:64
#, no-wrap
msgid ""
"- Your terminal does support colors, but Vim doesn't know this.\n"
"\tMake sure your $TERM setting is correct.  For example, when using an\n"
"\txterm that supports colors: >\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:68
#, no-wrap
msgid ""
"\t\tsetenv TERM xterm-color\n"
"<\n"
"\tor (depending on your shell): >\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:70
#, no-wrap
msgid "\t\tTERM=xterm-color; export TERM\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:74
#, no-wrap
msgid ""
"<\tThe terminal name must match the terminal you are using.  If it\n"
"\tstill doesn't work, have a look at |xterm-color|, which shows a few\n"
"\tways to make Vim display colors (not only for an xterm).\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:78
#, no-wrap
msgid ""
"- The file type is not recognized.\n"
"\tVim doesn't know all file types, and sometimes it's near to impossible\n"
"\tto tell what language a file uses.  Try this command: >\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:84
#, no-wrap
msgid ""
"\t\t:set filetype\n"
"<\n"
"\tIf the result is \"filetype=\" then the problem is indeed that Vim\n"
"\tdoesn't know what type of file this is.  You can set the type\n"
"\tmanually: >\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:86
#, no-wrap
msgid "\t\t:set filetype=fortran\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:93
#, no-wrap
msgid ""
"<\tTo see which types are available, look in the directory\n"
"\t$VIMRUNTIME/syntax.  For the GUI you can use the Syntax menu.\n"
"\tSetting the filetype can also be done with a |modeline|, so that the\n"
"\tfile will be highlighted each time you edit it.  For example, this\n"
"\tline can be used in a Makefile (put it near the start or end of the\n"
"\tfile): >\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:95
#, no-wrap
msgid "\t\t# vim: syntax=make\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:99
#, no-wrap
msgid ""
"<\tYou might know how to detect the file type yourself.  Often the file\n"
"\tname extension (after the dot) can be used.\n"
"\tSee |new-filetype| for how to tell Vim to detect that file type.\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:104
#, no-wrap
msgid ""
"- There is no highlighting for your file type.\n"
"\tYou could try using a similar file type by manually setting it as\n"
"\tmentioned above.  If that isn't good enough, you can write your own\n"
"\tsyntax file, see |mysyntaxfile|.\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:107
msgid "Or the colors could be wrong:"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:114
#, no-wrap
msgid ""
"- The colored text is very hard to read.\n"
"\tVim guesses the background color that you are using.  If it is black\n"
"\t(or another dark color) it will use light colors for text.  If it is\n"
"\twhite (or another light color) it will use dark colors for text.  If\n"
"\tVim guessed wrong the text will be hard to read.  To solve this, set\n"
"\tthe 'background' option.  For a dark background: >\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:116
#, no-wrap
msgid "\t\t:set background=dark\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:118
#, no-wrap
msgid "<\tAnd for a light background: >\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:120
#, no-wrap
msgid "\t\t:set background=light\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:125
#, no-wrap
msgid ""
"<\tMake sure you put this _before_ the \":syntax enable\" command,\n"
"\totherwise the colors will already have been set.  You could do\n"
"\t\":syntax reset\" after setting 'background' to make Vim set the default\n"
"\tcolors again.\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:134
#, no-wrap
msgid ""
"- The colors are wrong when scrolling bottom to top.\n"
"\tVim doesn't read the whole file to parse the text.  It starts parsing\n"
"\twherever you are viewing the file.  That saves a lot of time, but\n"
"\tsometimes the colors are wrong.  A simple fix is hitting CTRL-L.  Or\n"
"\tscroll back a bit and then forward again.\n"
"\tFor a real fix, see |:syn-sync|.  Some syntax files have a way to make\n"
"\tit look further back, see the help for the specific syntax file.  For\n"
"\texample, |tex.vim| for the TeX syntax.\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:137
#, no-wrap
msgid "*06.3*\tDifferent colors\t\t\t\t*:syn-default-override*\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:140
msgid ""
"If you don't like the default colors, you can select another color scheme.  "
"In the GUI use the Edit/Color Scheme menu.  You can also type the command: >"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:142
#, no-wrap
msgid "\t:colorscheme evening\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:145
msgid ""
"\"evening\" is the name of the color scheme.  There are several others you "
"might want to try out.  Look in the directory $VIMRUNTIME/colors."
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:148
msgid ""
"When you found the color scheme that you like, add the \":colorscheme\" "
"command to your |vimrc| file."
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:150
msgid "You could also write your own color scheme.  This is how you do it:"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:153
#, no-wrap
msgid ""
"1. Select a color scheme that comes close.  Copy this file to your own Vim\n"
"   directory.  For Unix, this should work: >\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:158
#, no-wrap
msgid ""
"\t!mkdir ~/.vim/colors\n"
"\t!cp $VIMRUNTIME/colors/morning.vim ~/.vim/colors/mine.vim\n"
"<\n"
"   This is done from Vim, because it knows the value of $VIMRUNTIME.\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:160
#, no-wrap
msgid "2. Edit the color scheme file.  These entries are useful:\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:168
#, no-wrap
msgid ""
"\tterm\t\tattributes in a B&W terminal\n"
"\tcterm\t\tattributes in a color terminal\n"
"\tctermfg\t\tforeground color in a color terminal\n"
"\tctermbg\t\tbackground color in a color terminal\n"
"\tgui\t\tattributes in the GUI\n"
"\tguifg\t\tforeground color in the GUI\n"
"\tguibg\t\tbackground color in the GUI\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:170
#, no-wrap
msgid "   For example, to make comments green: >\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:176
#, no-wrap
msgid ""
"\t:highlight Comment ctermfg=green guifg=green\n"
"<\n"
"   Attributes you can use for \"cterm\" and \"gui\" are \"bold\" and \"underline\".\n"
"   If you want both, use \"bold,underline\".  For details see the |:highlight|\n"
"   command.\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:178
#, no-wrap
msgid "3. Tell Vim to always use your color scheme.  Put this line in your |vimrc|: >\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:180
#, no-wrap
msgid "\tcolorscheme mine\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:183
msgid ""
"If you want to see what the most often used color combinations look like, "
"use this command: >"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:185
#, no-wrap
msgid "\t:runtime syntax/colortest.vim\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:188
msgid ""
"You will see text in various color combinations.  You can check which ones "
"are readable and look nice."
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:191
#, no-wrap
msgid "*06.4*\tWith colors or without colors\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:194
msgid ""
"Displaying text in color takes a lot of effort.  If you find the displaying "
"too slow, you might want to disable syntax highlighting for a moment: >"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:196
#, no-wrap
msgid "\t:syntax clear\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:198
msgid "When editing another file (or the same one) the colors will come back."
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:201
#, no-wrap
msgid ""
"\t\t\t\t\t\t\t*:syn-off*\n"
"If you want to stop highlighting completely use: >\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:203
#, no-wrap
msgid "\t:syntax off\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:206
msgid ""
"This will completely disable syntax highlighting and remove it immediately "
"for all buffers."
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:209
#, no-wrap
msgid ""
"\t\t\t\t\t\t\t*:syn-manual*\n"
"If you want syntax highlighting only for specific files, use this: >\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:211
#, no-wrap
msgid "\t:syntax manual\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:215
msgid ""
"This will enable the syntax highlighting, but not switch it on automatically "
"when starting to edit a buffer.  To switch highlighting on for the current "
"buffer, set the 'syntax' option: >"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:218
#, no-wrap
msgid ""
"\t:set syntax=ON\n"
"<\n"
"==============================================================================\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:220
#, no-wrap
msgid "*06.5*\tPrinting with colors\t\t\t\t*syntax-printing*\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:222
msgid ""
"In the MS-Windows version you can print the current file with this command: >"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:224
#, no-wrap
msgid "\t:hardcopy\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:229
msgid ""
"You will get the usual printer dialog, where you can select the printer and "
"a few settings.  If you have a color printer, the paper output should look "
"the same as what you see inside Vim.  But when you use a dark background the "
"colors will be adjusted to look good on white paper."
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:235
#, no-wrap
msgid ""
"There are several options that change the way Vim prints:\n"
"\t'printdevice'\n"
"\t'printheader'\n"
"\t'printfont'\n"
"\t'printoptions'\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:238
msgid ""
"To print only a range of lines, use Visual mode to select the lines and then "
"type the command: >"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:240
#, no-wrap
msgid "\tv100j:hardcopy\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:244
msgid ""
"\"v\" starts Visual mode.  \"100j\" moves a hundred lines down, they will be "
"highlighted.  Then \":hardcopy\" will print those lines.  You can use other "
"commands to move in Visual mode, of course."
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:248
msgid ""
"This also works on Unix, if you have a PostScript printer.  Otherwise, you "
"will have to do a bit more work.  You need to convert the text to HTML "
"first, and then print it from a web browser such as Netscape."
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:250
msgid "Convert the current file to HTML with this command: >"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:252
#, no-wrap
msgid "\t:source $VIMRUNTIME/syntax/2html.vim\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:258
#, no-wrap
msgid ""
"You will see it crunching away, this can take quite a while for a large file.\n"
"Some time later another window shows the HTML code.  Now write this somewhere\n"
"(doesn't matter where, you throw it away later):\n"
">\n"
"\t:write main.c.html\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:262
msgid ""
"Open this file in your favorite browser and print it from there.  If all "
"goes well, the output should look exactly as it does in Vim.  See |2html."
"vim| for details.  Don't forget to delete the HTML file when you are done "
"with it."
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:265
msgid ""
"Instead of printing, you could also put the HTML file on a web server, and "
"let others look at the colored text."
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:268
#, no-wrap
msgid "*06.6*\tFurther reading\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:271
#, no-wrap
msgid ""
"|usr_44.txt|  Your own syntax highlighted.\n"
"|syntax|      All the details.\n"
msgstr ""

#. type: Plain text
#: original/TXT/usr_06.txt:275
msgid "Next chapter: |usr_07.txt| Editing more than one file"
msgstr ""
