#. extracted from index.txt
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2009-08-04 13:46+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Translate Toolkit 1.3.0\n"

#: index.txt:1
msgid "*index.txt*     For Vim version 7.2.  Last change: 2008 May 04"
msgstr ""

#: index.txt:4
msgid "\t\t  VIM REFERENCE MANUAL    by Bram Moolenaar"
msgstr ""

#: index.txt:6
msgid ""
"\t\t\t\t\t\t\t\t*index*\n"
"This file contains a list of all commands for each mode, with a tag and a\n"
"short description.  The lists are sorted on ASCII value."
msgstr ""

#: index.txt:10
msgid ""
"Tip: When looking for certain functionality, use a search command.  E.g.,\n"
"to look for deleting something, use: \"/delete\"."
msgstr ""

#: index.txt:13
msgid ""
"1. Insert mode\t\t\t\t|insert-index|\n"
"2. Normal mode\t\t\t\t|normal-index|\n"
"   2.1. Text objects\t\t\t|objects|\n"
"   2.2. Window commands\t\t\t|CTRL-W|\n"
"   2.3. Square bracket commands\t\t|[|\n"
"   2.4. Commands starting with 'g'\t|g|\n"
"   2.5. Commands starting with 'z'\t|z|\n"
"3. Visual mode\t\t\t\t|visual-index|\n"
"4. Command-line editing\t\t\t|ex-edit-index|\n"
"5. EX commands\t\t\t\t|ex-cmd-index|"
msgstr ""

#: index.txt:24
msgid ""
"For an overview of options see help.txt |option-list|.\n"
"For an overview of built-in functions see |functions|.\n"
"For a list of Vim variables see |vim-variable|.\n"
"For a complete listing of all help items see |help-tags|."
msgstr ""

#: index.txt:29
msgid ""
"============================================================================"
"==\n"
"1. Insert mode\t\t\t\t\t\t*insert-index*"
msgstr ""

#: index.txt:32
msgid ""
"tag\t\tchar\t\taction\t~\n"
"-----------------------------------------------------------------------\n"
"|i_CTRL-@|\tCTRL-@\t\tinsert previously inserted text and stop\n"
"\t\t\t\tinsert\n"
"|i_CTRL-A|\tCTRL-A\t\tinsert previously inserted text\n"
"\t\tCTRL-B\t\tnot used |i_CTRL-B-gone|\n"
"|i_CTRL-C|\tCTRL-C\t\tquit insert mode, without checking for\n"
"\t\t\t\tabbreviation, unless 'insertmode' set.\n"
"|i_CTRL-D|\tCTRL-D\t\tdelete one shiftwidth of indent in the current\n"
"\t\t\t\tline\n"
"|i_CTRL-E|\tCTRL-E\t\tinsert the character which is below the cursor\n"
"\t\tCTRL-F\t\tnot used (but by default it's in 'cinkeys' to\n"
"\t\t\t\tre-indent the current line)\n"
"|i_CTRL-G_j|\tCTRL-G CTRL-J\tline down, to column where inserting started\n"
"|i_CTRL-G_j|\tCTRL-G j\tline down, to column where inserting started\n"
"|i_CTRL-G_j|\tCTRL-G <Down>\tline down, to column where inserting started\n"
"|i_CTRL-G_k|\tCTRL-G CTRL-K\tline up, to column where inserting started\n"
"|i_CTRL-G_k|\tCTRL-G k\tline up, to column where inserting started\n"
"|i_CTRL-G_k|\tCTRL-G <Up>\tline up, to column where inserting started\n"
"|i_CTRL-G_u|\tCTRL-G u\tstart new undoable edit\n"
"|i_<BS>|\t<BS>\t\tdelete character before the cursor\n"
"|i_digraph|\t{char1}<BS>{char2}\n"
"\t\t\t\tenter digraph (only when 'digraph' option set)\n"
"|i_CTRL-H|\tCTRL-H\t\tsame as <BS>\n"
"|i_<Tab>|\t<Tab>\t\tinsert a <Tab> character\n"
"|i_CTRL-I|\tCTRL-I\t\tsame as <Tab>\n"
"|i_<NL>|\t<NL>\t\tsame as <CR>\n"
"|i_CTRL-J|\tCTRL-J\t\tsame as <CR>\n"
"|i_CTRL-K|\tCTRL-K {char1} {char2}\n"
"\t\t\t\tenter digraph\n"
"|i_CTRL-L|\tCTRL-L\t\twhen 'insertmode' set: Leave Insert mode\n"
"|i_<CR>|\t<CR>\t\tbegin new line\n"
"|i_CTRL-M|\tCTRL-M\t\tsame as <CR>\n"
"|i_CTRL-N|\tCTRL-N\t\tfind next match for keyword in front of the\n"
"\t\t\t\tcursor\n"
"|i_CTRL-O|\tCTRL-O\t\texecute a single command and return to insert\n"
"\t\t\t\tmode\n"
"|i_CTRL-P|\tCTRL-P\t\tfind previous match for keyword in front of\n"
"\t\t\t\tthe cursor\n"
"|i_CTRL-Q|\tCTRL-Q\t\tsame as CTRL-V, unless used for terminal\n"
"\t\t\t\tcontrol flow\n"
"|i_CTRL-R|\tCTRL-R {0-9a-z\"%#*:=}\n"
"\t\t\t\tinsert the contents of a register\n"
"|i_CTRL-R_CTRL-R| CTRL-R CTRL-R {0-9a-z\"%#*:=}\n"
"\t\t\t\tinsert the contents of a register literally\n"
"|i_CTRL-R_CTRL-O| CTRL-R CTRL-O {0-9a-z\"%#*:=}\n"
"\t\t\t\tinsert the contents of a register literally\n"
"\t\t\t\tand don't auto-indent\n"
"|i_CTRL-R_CTRL-P| CTRL-R CTRL-P {0-9a-z\"%#*:=}\n"
"\t\t\t\tinsert the contents of a register literally\n"
"\t\t\t\tand fix indent.\n"
"\t\tCTRL-S\t\t(used for terminal control flow)\n"
"|i_CTRL-T|\tCTRL-T\t\tinsert one shiftwidth of indent in current\n"
"\t\t\t\tline\n"
"|i_CTRL-U|\tCTRL-U\t\tdelete all entered characters in the current\n"
"\t\t\t\tline\n"
"|i_CTRL-V|\tCTRL-V {char}\tinsert next non-digit literally\n"
"|i_CTRL-V_digit| CTRL-V {number} insert three digit decimal number as a "
"single\n"
"\t\t\t\tbyte.\n"
"|i_CTRL-W|\tCTRL-W\t\tdelete word before the cursor\n"
"|i_CTRL-X|\tCTRL-X {mode}\tenter CTRL-X sub mode, see |i_CTRL-X_index|\n"
"|i_CTRL-Y|\tCTRL-Y\t\tinsert the character which is above the cursor\n"
"|i_CTRL-Z|\tCTRL-Z\t\twhen 'insertmode' set: suspend Vim\n"
"|i_<Esc>|\t<Esc>\t\tend insert mode (unless 'insertmode' set)\n"
"|i_CTRL-[|\tCTRL-[\t\tsame as <Esc>\n"
"|i_CTRL-\\_CTRL-N| CTRL-\\ CTRL-N\t go to Normal mode\n"
"|i_CTRL-\\_CTRL-G| CTRL-\\ CTRL-G\t go to mode specified with 'insertmode'\n"
"\t\tCTRL-\\ a - z\treserved for extensions\n"
"\t\tCTRL-\\ others\tnot used\n"
"|i_CTRL-]|\tCTRL-]\t\ttrigger abbreviation\n"
"|i_CTRL-^|\tCTRL-^\t\ttoggle use of |:lmap| mappings\n"
"|i_CTRL-_|\tCTRL-_\t\tWhen 'allowrevins' set: change language\n"
"\t\t\t\t(Hebrew, Farsi) {only when compiled with\n"
"\t\t\t\t+rightleft feature}"
msgstr ""

#: index.txt:107
msgid ""
"\t\t<Space> to '~'\tnot used, except '0' and '^' followed by\n"
"\t\t\t\tCTRL-D"
msgstr ""

#: index.txt:110
msgid ""
"|i_0_CTRL-D|\t0 CTRL-D\tdelete all indent in the current line\n"
"|i_^_CTRL-D|\t^ CTRL-D\tdelete all indent in the current line, restore\n"
"\t\t\t\tit in the next line"
msgstr ""

#: index.txt:114
msgid "|i_<Del>|\t<Del>\t\tdelete character under the cursor"
msgstr ""

#: index.txt:116
msgid ""
"\t\tMeta characters (0x80 to 0xff, 128 to 255)\n"
"\t\t\t\tnot used"
msgstr ""

#: index.txt:119
msgid ""
"|i_<Left>|\t<Left>\t\tcursor one character left\n"
"|i_<S-Left>|\t<S-Left>\tcursor one word left\n"
"|i_<C-Left>|\t<C-Left>\tcursor one word left\n"
"|i_<Right>|\t<Right>\t\tcursor one character right\n"
"|i_<S-Right>|\t<S-Right>\tcursor one word right\n"
"|i_<C-Right>|\t<C-Right>\tcursor one word right\n"
"|i_<Up>|\t<Up>\t\tcursor one line up\n"
"|i_<S-Up>|\t<S-Up>\t\tsame as <PageUp>\n"
"|i_<Down>|\t<Down>\t\tcursor one line down\n"
"|i_<S-Down>|\t<S-Down>\tsame as <PageDown>\n"
"|i_<Home>|\t<Home>\t\tcursor to start of line\n"
"|i_<C-Home>|\t<C-Home>\tcursor to start of file\n"
"|i_<End>|\t<End>\t\tcursor past end of line\n"
"|i_<C-End>|\t<C-End>\t\tcursor past end of file\n"
"|i_<PageUp>|\t<PageUp>\tone screenful backward\n"
"|i_<PageDown>|\t<PageDown>\tone screenful forward\n"
"|i_<F1>|\t<F1>\t\tsame as <Help>\n"
"|i_<Help>|\t<Help>\t\tstop insert mode and display help window\n"
"|i_<Insert>|\t<Insert>\ttoggle Insert/Replace mode\n"
"|i_<LeftMouse>|\t<LeftMouse>\tcursor at mouse click\n"
"|i_<MouseDown>|\t<MouseDown>\tscroll three lines downwards\n"
"|i_<S-MouseDown>| <S-MouseDown>\tscroll a full page downwards\n"
"|i_<MouseUp>|\t<MouseUp>\tscroll three lines upwards\n"
"|i_<S-MouseUp>|\t<S-MouseUp>\tscroll a full page upwards"
msgstr ""

#: index.txt:144
msgid "commands in CTRL-X submode\t\t\t\t*i_CTRL-X_index*"
msgstr ""

#: index.txt:146
msgid ""
"|i_CTRL-X_CTRL-D|\tCTRL-X CTRL-D\tcomplete defined identifiers\n"
"|i_CTRL-X_CTRL-E|\tCTRL-X CTRL-E\tscroll up\n"
"|i_CTRL-X_CTRL-F|\tCTRL-X CTRL-F\tcomplete file names\n"
"|i_CTRL-X_CTRL-I|\tCTRL-X CTRL-I\tcomplete identifiers\n"
"|i_CTRL-X_CTRL-K|\tCTRL-X CTRL-K\tcomplete identifiers from dictionary\n"
"|i_CTRL-X_CTRL-L|\tCTRL-X CTRL-L\tcomplete whole lines\n"
"|i_CTRL-X_CTRL-N|\tCTRL-X CTRL-N\tnext completion\n"
"|i_CTRL-X_CTRL-O|\tCTRL-X CTRL-O\tomni completion\n"
"|i_CTRL-X_CTRL-P|\tCTRL-X CTRL-P\tprevious completion\n"
"|i_CTRL-X_CTRL-S|\tCTRL-X CTRL-S\tspelling suggestions\n"
"|i_CTRL-X_CTRL-T|\tCTRL-X CTRL-T\tcomplete identifiers from thesaurus\n"
"|i_CTRL-X_CTRL-Y|\tCTRL-X CTRL-Y\tscroll down\n"
"|i_CTRL-X_CTRL-U|\tCTRL-X CTRL-U\tcomplete with 'completefunc'\n"
"|i_CTRL-X_CTRL-V|\tCTRL-X CTRL-V\tcomplete like in : command line\n"
"|i_CTRL-X_CTRL-]|\tCTRL-X CTRL-]\tcomplete tags\n"
"|i_CTRL-X_s|\t\tCTRL-X s\tspelling suggestions\n"
"{not available when compiled without the +insert_expand feature}"
msgstr ""

#: index.txt:164
msgid ""
"============================================================================"
"==\n"
"2. Normal mode\t\t\t\t\t\t*normal-index*"
msgstr ""

#: index.txt:167
msgid ""
"CHAR\t any non-blank character\n"
"WORD\t a sequence of non-blank characters\n"
"N\t a number entered before the command\n"
"{motion} a cursor movement command\n"
"Nmove\t the text that is moved over with a {motion}\n"
"SECTION\t a section that possibly starts with '}' instead of '{'"
msgstr ""

#: index.txt:174
msgid "note: 1 = cursor movement command; 2 = can be undone/redone"
msgstr ""

#: index.txt:176
msgid ""
"tag\t\tchar\t      note action in Normal mode\t~\n"
"----------------------------------------------------------------------------"
"--\n"
"\t\tCTRL-@\t\t   not used\n"
"|CTRL-A|\tCTRL-A\t\t2  add N to number at/after cursor\n"
"|CTRL-B|\tCTRL-B\t\t1  scroll N screens Backwards\n"
"|CTRL-C|\tCTRL-C\t\t   interrupt current (search) command\n"
"|CTRL-D|\tCTRL-D\t\t   scroll Down N lines (default: half a screen)\n"
"|CTRL-E|\tCTRL-E\t\t   scroll N lines upwards (N lines Extra)\n"
"|CTRL-F|\tCTRL-F\t\t1  scroll N screens Forward\n"
"|CTRL-G|\tCTRL-G\t\t   display current file name and position\n"
"|<BS>|\t\t<BS>\t\t1  same as \"h\"\n"
"|CTRL-H|\tCTRL-H\t\t1  same as \"h\"\n"
"|<Tab>|\t\t<Tab>\t\t1  go to N newer entry in jump list\n"
"|CTRL-I|\tCTRL-I\t\t1  same as <Tab>\n"
"|<NL>|\t\t<NL>\t\t1  same as \"j\"\n"
"|CTRL-J|\tCTRL-J\t\t1  same as \"j\"\n"
"\t\tCTRL-K\t\t   not used\n"
"|CTRL-L|\tCTRL-L\t\t   redraw screen\n"
"|<CR>|\t\t<CR>\t\t1  cursor to the first CHAR N lines lower\n"
"|CTRL-M|\tCTRL-M\t\t1  same as <CR>\n"
"|CTRL-N|\tCTRL-N\t\t1  same as \"j\"\n"
"|CTRL-O|\tCTRL-O\t\t1  go to N older entry in jump list\n"
"|CTRL-P|\tCTRL-P\t\t1  same as \"k\"\n"
"\t\tCTRL-Q\t\t   (used for terminal control flow)\n"
"|CTRL-R|\tCTRL-R\t\t2  redo changes which were undone with 'u'\n"
"\t\tCTRL-S\t\t   (used for terminal control flow)\n"
"|CTRL-T|\tCTRL-T\t\t   jump to N older Tag in tag list\n"
"|CTRL-U|\tCTRL-U\t\t   scroll N lines Upwards (default: half a\n"
"\t\t\t\t   screen)\n"
"|CTRL-V|\tCTRL-V\t\t   start blockwise Visual mode\n"
"|CTRL-W|\tCTRL-W {char}\t   window commands, see |CTRL-W|\n"
"|CTRL-X|\tCTRL-X\t\t2  subtract N from number at/after cursor\n"
"|CTRL-Y|\tCTRL-Y\t\t   scroll N lines downwards\n"
"|CTRL-Z|\tCTRL-Z\t\t   suspend program (or start new shell)\n"
"\t\tCTRL-[ <Esc>\t   not used\n"
"|CTRL-\\_CTRL-N| CTRL-\\ CTRL-N\t   go to Normal mode (no-op)\n"
"|CTRL-\\_CTRL-G| CTRL-\\ CTRL-G\t   go to mode specified with 'insertmode'\n"
"\t\tCTRL-\\ a - z\t   reserved for extensions\n"
"\t\tCTRL-\\ others      not used\n"
"|CTRL-]|\tCTRL-]\t\t   :ta to ident under cursor\n"
"|CTRL-^|\tCTRL-^\t\t   edit Nth alternate file (equivalent to\n"
"\t\t\t\t   \":e #N\")\n"
"\t\tCTRL-_\t\t   not used"
msgstr ""

#: index.txt:220
msgid ""
"|<Space>|\t<Space>\t\t1  same as \"l\"\n"
"|!|\t\t!{motion}{filter}\n"
"\t\t\t\t2  filter Nmove text through the {filter}\n"
"\t\t\t\t   command\n"
"|!!|\t\t!!{filter}\t2  filter N lines through the {filter} command\n"
"|quote|\t\t\"{a-zA-Z0-9.%#:-\"}  use register {a-zA-Z0-9.%#:-\"} for next\n"
"\t\t\t\t   delete, yank or put (uppercase to append)\n"
"\t\t\t\t   ({.%#:} only work with put)\n"
"|#|\t\t#\t\t1  search backward for the Nth occurrence of\n"
"\t\t\t\t   the ident under the cursor\n"
"|$|\t\t$\t\t1  cursor to the end of Nth next line\n"
"|%|\t\t%\t\t1  find the next (curly/square) bracket on\n"
"\t\t\t\t   this line and go to its match, or go to\n"
"\t\t\t\t   matching comment bracket, or go to matching\n"
"\t\t\t\t   preprocessor directive.\n"
"|N%|\t\t{count}%\t1  go to N percentage in the file\n"
"|&|\t\t&\t\t2  repeat last :s\n"
"|'|\t\t'{a-zA-Z0-9}\t1  cursor to the first CHAR on the line with\n"
"\t\t\t\t   mark {a-zA-Z0-9}\n"
"|''|\t\t''\t\t1  cursor to the first CHAR of the line where\n"
"\t\t\t\t   the cursor was before the latest jump.\n"
"|'(|\t\t'(\t\t1  cursor to the first CHAR on the line of the\n"
"\t\t\t\t   start of the current sentence\n"
"|')|\t\t')\t\t1  cursor to the first CHAR on the line of the\n"
"\t\t\t\t   end of the current sentence\n"
"|'<|\t\t'<\t\t1  cursor to the first CHAR of the line where\n"
"\t\t\t\t   highlighted area starts/started in the\n"
"\t\t\t\t   current buffer.\n"
"|'>|\t\t'>\t\t1  cursor to the first CHAR of the line where\n"
"\t\t\t\t   highlighted area ends/ended in the current\n"
"\t\t\t\t   buffer.\n"
"|'[|\t\t'[\t\t1  cursor to the first CHAR on the line of the\n"
"\t\t\t\t   start of last operated text or start of put\n"
"\t\t\t\t   text\n"
"|']|\t\t']\t\t1  cursor to the first CHAR on the line of the\n"
"\t\t\t\t   end of last operated text or end of put\n"
"\t\t\t\t   text\n"
"|'{|\t\t'{\t\t1  cursor to the first CHAR on the line of the\n"
"\t\t\t\t   start of the current paragraph\n"
"|'}|\t\t'}\t\t1  cursor to the first CHAR on the line of the\n"
"\t\t\t\t   end of the current paragraph\n"
"|(|\t\t(\t\t1  cursor N sentences backward\n"
"|)|\t\t)\t\t1  cursor N sentences forward\n"
"|star|\t\t*\t\t1  search forward for the Nth occurrence of\n"
"\t\t\t\t   the ident under the cursor\n"
"|+|\t\t+\t\t1  same as <CR>\n"
"|,|\t\t,\t\t1  repeat latest f, t, F or T in opposite\n"
"\t\t\t\t   direction N times\n"
"|-|\t\t-\t\t1  cursor to the first CHAR N lines higher\n"
"|.|\t\t.\t\t2  repeat last change with count replaced with\n"
"\t\t\t\t   N\n"
"|/|\t\t/{pattern}<CR>\t1  search forward for the Nth occurrence of\n"
"\t\t\t\t   {pattern}\n"
"|/<CR>|\t\t/<CR>\t\t1  search forward for {pattern} of last search\n"
"|count|\t\t0\t\t1  cursor to the first char of the line\n"
"|count|\t\t1\t\t   prepend to command to give a count\n"
"|count|\t\t2\t\t\t\"\n"
"|count|\t\t3\t\t\t\"\n"
"|count|\t\t4\t\t\t\"\n"
"|count|\t\t5\t\t\t\"\n"
"|count|\t\t6\t\t\t\"\n"
"|count|\t\t7\t\t\t\"\n"
"|count|\t\t8\t\t\t\"\n"
"|count|\t\t9\t\t\t\"\n"
"|:|\t\t:\t\t1  start entering an Ex command\n"
"|N:|\t\t{count}:\t   start entering an Ex command with range\n"
"\t\t\t\t   from current line to N-1 lines down\n"
"|;|\t\t;\t\t1  repeat latest f, t, F or T N times\n"
"|<|\t\t<{motion}\t2  shift Nmove lines one 'shiftwidth'\n"
"\t\t\t\t   leftwards\n"
"|<<|\t\t<<\t\t2  shift N lines one 'shiftwidth' leftwards\n"
"|=|\t\t={motion}\t2  filter Nmove lines through \"indent\"\n"
"|==|\t\t==\t\t2  filter N lines through \"indent\"\n"
"|>|\t\t>{motion}\t2  shift Nmove lines one 'shiftwidth'\n"
"\t\t\t\t   rightwards\n"
"|>>|\t\t>>\t\t2  shift N lines one 'shiftwidth' rightwards\n"
"|?|\t\t?{pattern}<CR>\t1  search backward for the Nth previous\n"
"\t\t\t\t   occurrence of {pattern}\n"
"|?<CR>|\t\t?<CR>\t\t1  search backward for {pattern} of last search\n"
"|@|\t\t@{a-z}\t\t2  execute the contents of register {a-z}\n"
"\t\t\t\t   N times\n"
"|@:|\t\t@:\t\t   repeat the previous \":\" command N times\n"
"|@@|\t\t@@\t\t2  repeat the previous @{a-z} N times\n"
"|A|\t\tA\t\t2  append text after the end of the line N times\n"
"|B|\t\tB\t\t1  cursor N WORDS backward\n"
"|C|\t\t[\"x]C\t\t2  change from the cursor position to the end\n"
"\t\t\t\t   of the line, and N-1 more lines [into\n"
"\t\t\t\t   buffer x]; synonym for \"c$\"\n"
"|D|\t\t[\"x]D\t\t2  delete the characters under the cursor\n"
"\t\t\t\t   until the end of the line and N-1 more\n"
"\t\t\t\t   lines [into buffer x]; synonym for \"d$\"\n"
"|E|\t\tE\t\t1  cursor forward to the end of WORD N\n"
"|F|\t\tF{char}\t\t1  cursor to the Nth occurrence of {char} to\n"
"\t\t\t\t   the left\n"
"|G|\t\tG\t\t1  cursor to line N, default last line\n"
"|H|\t\tH\t\t1  cursor to line N from top of screen\n"
"|I|\t\tI\t\t2  insert text before the first CHAR on the\n"
"\t\t\t\t   line N times\n"
"|J|\t\tJ\t\t2  Join N lines; default is 2\n"
"|K|\t\tK\t\t   lookup Keyword under the cursor with\n"
"\t\t\t\t   'keywordprg'\n"
"|L|\t\tL\t\t1  cursor to line N from bottom of screen\n"
"|M|\t\tM\t\t1  cursor to middle line of screen\n"
"|N|\t\tN\t\t1  repeat the latest '/' or '?' N times in\n"
"\t\t\t\t   opposite direction\n"
"|O|\t\tO\t\t2  begin a new line above the cursor and\n"
"\t\t\t\t   insert text, repeat N times\n"
"|P|\t\t[\"x]P\t\t2  put the text [from buffer x] before the\n"
"\t\t\t\t   cursor N times\n"
"|Q|\t\tQ\t\t   switch to \"Ex\" mode\n"
"|R|\t\tR\t\t2  enter replace mode: overtype existing\n"
"\t\t\t\t   characters, repeat the entered text N-1\n"
"\t\t\t\t   times\n"
"|S|\t\t[\"x]S\t\t2  delete N lines [into buffer x] and start\n"
"\t\t\t\t   insert; synonym for \"cc\".\n"
"|T|\t\tT{char}\t\t1  cursor till after Nth occurrence of {char}\n"
"\t\t\t\t   to the left\n"
"|U|\t\tU\t\t2  undo all latest changes on one line\n"
"|V|\t\tV\t\t   start linewise Visual mode\n"
"|W|\t\tW\t\t1  cursor N WORDS forward\n"
"|X|\t\t[\"x]X\t\t2  delete N characters before the cursor [into\n"
"\t\t\t\t   buffer x]\n"
"|Y|\t\t[\"x]Y\t\t   yank N lines [into buffer x]; synonym for\n"
"\t\t\t\t   \"yy\"\n"
"|ZZ|\t\tZZ\t\t   store current file if modified, and exit\n"
"|ZQ|\t\tZQ\t\t   exit current file always\n"
"|[|\t\t[{char}\t\t   square bracket command (see |[| below)\n"
"\t\t\\\t\t   not used\n"
"|]|\t\t]{char}\t\t   square bracket command (see |]| below)\n"
"|^|\t\t^\t\t1  cursor to the first CHAR of the line\n"
"|_|\t\t_\t\t1  cursor to the first CHAR N - 1 lines lower\n"
"|`|\t\t`{a-zA-Z0-9}\t1  cursor to the mark {a-zA-Z0-9}\n"
"|`(|\t\t`(\t\t1  cursor to the start of the current sentence\n"
"|`)|\t\t`)\t\t1  cursor to the end of the current sentence\n"
"|`<|\t\t`<\t\t1  cursor to the start of the highlighted area\n"
"|`>|\t\t`>\t\t1  cursor to the end of the highlighted area\n"
"|`[|\t\t`[\t\t1  cursor to the start of last operated text\n"
"\t\t\t\t   or start of putted text\n"
"|`]|\t\t`]\t\t1  cursor to the end of last operated text or\n"
"\t\t\t\t   end of putted text\n"
"|``|\t\t``\t\t1  cursor to the position before latest jump\n"
"|`{|\t\t`{\t\t1  cursor to the start of the current paragraph\n"
"|`}|\t\t`}\t\t1  cursor to the end of the current paragraph\n"
"|a|\t\ta\t\t2  append text after the cursor N times\n"
"|b|\t\tb\t\t1  cursor N words backward\n"
"|c|\t\t[\"x]c{motion}\t2  delete Nmove text [into buffer x] and start\n"
"\t\t\t\t   insert\n"
"|cc|\t\t[\"x]cc\t\t2  delete N lines [into buffer x] and start\n"
"\t\t\t\t   insert\n"
"|d|\t\t[\"x]d{motion}\t2  delete Nmove text [into buffer x]\n"
"|dd|\t\t[\"x]dd\t\t2  delete N lines [into buffer x]\n"
"|do|\t\tdo\t\t2  same as \":diffget\"\n"
"|dp|\t\tdp\t\t2  same as \":diffput\"\n"
"|e|\t\te\t\t1  cursor forward to the end of word N\n"
"|f|\t\tf{char}\t\t1  cursor to Nth occurrence of {char} to the\n"
"\t\t\t\t   right\n"
"|g|\t\tg{char}\t\t   extended commands, see |g| below\n"
"|h|\t\th\t\t1  cursor N chars to the left\n"
"|i|\t\ti\t\t2  insert text before the cursor N times\n"
"|j|\t\tj\t\t1  cursor N lines downward\n"
"|k|\t\tk\t\t1  cursor N lines upward\n"
"|l|\t\tl\t\t1  cursor N chars to the right\n"
"|m|\t\tm{A-Za-z}\t   set mark {A-Za-z} at cursor position\n"
"|n|\t\tn\t\t1  repeat the latest '/' or '?' N times\n"
"|o|\t\to\t\t2  begin a new line below the cursor and\n"
"\t\t\t\t   insert text, repeat N times\n"
"|p|\t\t[\"x]p\t\t2  put the text [from register x] after the\n"
"\t\t\t\t   cursor N times\n"
"|q|\t\tq{0-9a-zA-Z\"}\t   record typed characters into named register\n"
"\t\t\t\t   {0-9a-zA-Z\"} (uppercase to append)\n"
"|q|\t\tq\t\t   (while recording) stops recording\n"
"|q:|\t\tq:\t\t   edit : command-line in command-line window\n"
"|q/|\t\tq/\t\t   edit / command-line in command-line window\n"
"|q?|\t\tq?\t\t   edit ? command-line in command-line window\n"
"|r|\t\tr{char}\t\t2  replace N chars with {char}\n"
"|s|\t\t[\"x]s\t\t2  (substitute) delete N characters [into\n"
"\t\t\t\t   buffer x] and start insert\n"
"|t|\t\tt{char}\t\t1  cursor till before Nth occurrence of {char}\n"
"\t\t\t\t   to the right\n"
"|u|\t\tu\t\t2  undo changes\n"
"|v|\t\tv\t\t   start characterwise Visual mode\n"
"|w|\t\tw\t\t1  cursor N words forward\n"
"|x|\t\t[\"x]x\t\t2  delete N characters under and after the\n"
"\t\t\t\t   cursor [into buffer x]\n"
"|y|\t\t[\"x]y{motion}\t   yank Nmove text [into buffer x]\n"
"|yy|\t\t[\"x]yy\t\t   yank N lines [into buffer x]\n"
"|z|\t\tz{char}\t\t   commands starting with 'z', see |z| below\n"
"|{|\t\t{\t\t1  cursor N paragraphs backward\n"
"|bar|\t\t|\t\t1  cursor to column N\n"
"|}|\t\t}\t\t1  cursor N paragraphs forward\n"
"|~|\t\t~\t\t2  'tildeop' off: switch case of N characters\n"
"\t\t\t\t   under cursor and move the cursor N\n"
"\t\t\t\t   characters to the right\n"
"|~|\t\t~{motion}\t   'tildeop' on: switch case of Nmove text\n"
"|<C-End>|\t<C-End>\t\t1  same as \"G\"\n"
"|<C-Home>|\t<C-Home>\t1  same as \"gg\"\n"
"|<C-Left>|\t<C-Left>\t1  same as \"b\"\n"
"|<C-LeftMouse>|\t<C-LeftMouse>\t   \":ta\" to the keyword at the mouse click\n"
"|<C-Right>|\t<C-Right>\t1  same as \"w\"\n"
"|<C-RightMouse>| <C-RightMouse>\t   same as \"CTRL-T\"\n"
"|<Del>|\t\t[\"x]<Del>\t2  same as \"x\"\n"
"|N<Del>|\t{count}<Del>\t   remove the last digit from {count}\n"
"|<Down>|\t<Down>\t\t1  same as \"j\"\n"
"|<End>|\t\t<End>\t\t1  same as \"$\"\n"
"|<F1>|\t\t<F1>\t\t   same as <Help>\n"
"|<Help>|\t<Help>\t\t   open a help window\n"
"|<Home>|\t<Home>\t\t1  same as \"0\"\n"
"|<Insert>|\t<Insert>\t2  same as \"i\"\n"
"|<Left>|\t<Left>\t\t1  same as \"h\"\n"
"|<LeftMouse>|\t<LeftMouse>\t1  move cursor to the mouse click position\n"
"|<MiddleMouse>| <MiddleMouse>\t2  same as \"gP\" at the mouse click position\n"
"|<PageDown>|\t<PageDown>\t   same as CTRL-F\n"
"|<PageUp>|\t<PageUp>\t   same as CTRL-B\n"
"|<Right>|\t<Right>\t\t1  same as \"l\"\n"
"|<RightMouse>|\t<RightMouse>\t   start Visual mode, move cursor to the mouse\n"
"\t\t\t\t   click position\n"
"|<S-Down>|\t<S-Down>\t1  same as CTRL-F\n"
"|<S-Left>|\t<S-Left>\t1  same as \"b\"\n"
"|<S-LeftMouse>|\t<S-LeftMouse>\t   same as \"*\" at the mouse click position\n"
"|<S-Right>|\t<S-Right>\t1  same as \"w\"\n"
"|<S-RightMouse>| <S-RightMouse>\t   same as \"#\" at the mouse click position\n"
"|<S-Up>|\t<S-Up>\t\t1  same as CTRL-B\n"
"|<Undo>|\t<Undo>\t\t2  same as \"u\"\n"
"|<Up>|\t\t<Up>\t\t1  same as \"k\"\n"
"|<MouseDown>|\t<MouseDown>\t   scroll three lines downwards\n"
"|<S-MouseDown>|\t<S-MouseDown>\t   scroll a full page downwards\n"
"|<MouseUp>|\t<MouseUp>\t   scroll three lines upwards\n"
"|<S-MouseUp>|\t<S-MouseUp>\t   scroll a full page upwards"
msgstr ""

#: index.txt:449
msgid ""
"============================================================================"
"==\n"
"2.1 Text objects\t\t\t\t\t\t*objects*"
msgstr ""

#: index.txt:452
msgid ""
"These can be used after an operator or in Visual mode to select an object."
msgstr ""

#: index.txt:454
msgid ""
"tag\t\tcommand\t\t   action in Normal mode\t~\n"
"----------------------------------------------------------------------------"
"--\n"
"|v_aquote|\ta\"\t\t   double quoted string\n"
"|v_a'|\t\ta'\t\t   single quoted string\n"
"|v_a(|\t\ta(\t\t   same as ab\n"
"|v_a)|\t\ta)\t\t   same as ab\n"
"|v_a<|\t\ta<\t\t   \"a <>\" from '<' to the matching '>'\n"
"|v_a>|\t\ta>\t\t   same as a<\n"
"|v_aB|\t\taB\t\t   \"a Block\" from \"[{\" to \"]}\" (with brackets)\n"
"|v_aW|\t\taW\t\t   \"a WORD\" (with white space)\n"
"|v_a[|\t\ta[\t\t   \"a []\" from '[' to the matching ']'\n"
"|v_a]|\t\ta]\t\t   same as a[\n"
"|v_a`|\t\ta`\t\t   string in backticks\n"
"|v_ab|\t\tab\t\t   \"a block\" from \"[(\" to \"])\" (with braces)\n"
"|v_ap|\t\tap\t\t   \"a paragraph\" (with white space)\n"
"|v_as|\t\tas\t\t   \"a sentence\" (with white space)\n"
"|v_at|\t\tat\t\t   \"a tag block\" (with white space)\n"
"|v_aw|\t\taw\t\t   \"a word\" (with white space)\n"
"|v_a{|\t\ta{\t\t   same as aB\n"
"|v_a}|\t\ta}\t\t   same as aB\n"
"|v_iquote|\ti\"\t\t   double quoted string without the quotes\n"
"|v_i'|\t\ti'\t\t   single quoted string without the quotes\n"
"|v_i(|\t\ti(\t\t   same as ib\n"
"|v_i)|\t\ti)\t\t   same as ib\n"
"|v_i<|\t\ti<\t\t   \"inner <>\" from '<' to the matching '>'\n"
"|v_i>|\t\ti>\t\t   same as i<\n"
"|v_iB|\t\tiB\t\t   \"inner Block\" from \"[{\" and \"]}\"\n"
"|v_iW|\t\tiW\t\t   \"inner WORD\"\n"
"|v_i[|\t\ti[\t\t   \"inner []\" from '[' to the matching ']'\n"
"|v_i]|\t\ti]\t\t   same as i[\n"
"|v_i`|\t\ti`\t\t   string in backticks without the backticks\n"
"|v_ib|\t\tib\t\t   \"inner block\" from \"[(\" to \"])\"\n"
"|v_ip|\t\tip\t\t   \"inner paragraph\"\n"
"|v_is|\t\tis\t\t   \"inner sentence\"\n"
"|v_it|\t\tit\t\t   \"inner tag block\"\n"
"|v_iw|\t\tiw\t\t   \"inner word\"\n"
"|v_i{|\t\ti{\t\t   same as iB\n"
"|v_i}|\t\ti}\t\t   same as iB"
msgstr ""

#: index.txt:493
msgid ""
"============================================================================"
"==\n"
"2.2 Window commands\t\t\t\t\t\t*CTRL-W*"
msgstr ""

#: index.txt:496
msgid ""
"tag\t\tcommand\t\t   action in Normal mode\t~\n"
"----------------------------------------------------------------------------"
"--\n"
"|CTRL-W_CTRL-B|\tCTRL-W CTRL-B\t   same as \"CTRL-W b\"\n"
"|CTRL-W_CTRL-C|\tCTRL-W CTRL-C\t   same as \"CTRL-W c\"\n"
"|CTRL-W_CTRL-D|\tCTRL-W CTRL-D\t   same as \"CTRL-W d\"\n"
"|CTRL-W_CTRL-F|\tCTRL-W CTRL-F\t   same as \"CTRL-W f\"\n"
"\t\tCTRL-W CTRL-G\t   same as \"CTRL-W g ..\"\n"
"|CTRL-W_CTRL-H|\tCTRL-W CTRL-H\t   same as \"CTRL-W h\"\n"
"|CTRL-W_CTRL-I|\tCTRL-W CTRL-I\t   same as \"CTRL-W i\"\n"
"|CTRL-W_CTRL-J|\tCTRL-W CTRL-J\t   same as \"CTRL-W j\"\n"
"|CTRL-W_CTRL-K|\tCTRL-W CTRL-K\t   same as \"CTRL-W k\"\n"
"|CTRL-W_CTRL-L|\tCTRL-W CTRL-L\t   same as \"CTRL-W l\"\n"
"|CTRL-W_CTRL-N|\tCTRL-W CTRL-N\t   same as \"CTRL-W n\"\n"
"|CTRL-W_CTRL-O|\tCTRL-W CTRL-O\t   same as \"CTRL-W o\"\n"
"|CTRL-W_CTRL-P|\tCTRL-W CTRL-P\t   same as \"CTRL-W p\"\n"
"|CTRL-W_CTRL-Q|\tCTRL-W CTRL-Q\t   same as \"CTRL-W q\"\n"
"|CTRL-W_CTRL-R|\tCTRL-W CTRL-R\t   same as \"CTRL-W r\"\n"
"|CTRL-W_CTRL-S|\tCTRL-W CTRL-S\t   same as \"CTRL-W s\"\n"
"|CTRL-W_CTRL-T|\tCTRL-W CTRL-T\t   same as \"CTRL-W t\"\n"
"|CTRL-W_CTRL-V|\tCTRL-W CTRL-V\t   same as \"CTRL-W v\"\n"
"|CTRL-W_CTRL-W|\tCTRL-W CTRL-W\t   same as \"CTRL-W w\"\n"
"|CTRL-W_CTRL-X|\tCTRL-W CTRL-X\t   same as \"CTRL-W x\"\n"
"|CTRL-W_CTRL-Z|\tCTRL-W CTRL-Z\t   same as \"CTRL-W z\"\n"
"|CTRL-W_CTRL-]|\tCTRL-W CTRL-]\t   same as \"CTRL-W ]\"\n"
"|CTRL-W_CTRL-^|\tCTRL-W CTRL-^\t   same as \"CTRL-W ^\"\n"
"|CTRL-W_CTRL-_|\tCTRL-W CTRL-_\t   same as \"CTRL-W _\"\n"
"|CTRL-W_+|\tCTRL-W +\t   increase current window height N lines\n"
"|CTRL-W_-|\tCTRL-W -\t   decrease current window height N lines\n"
"|CTRL-W_<|\tCTRL-W <\t   decrease current window width N columns\n"
"|CTRL-W_=|\tCTRL-W =\t   make all windows the same height\n"
"|CTRL-W_>|\tCTRL-W >\t   increase current window width N columns\n"
"|CTRL-W_H|\tCTRL-W H\t   move current window to the far left\n"
"|CTRL-W_J|\tCTRL-W J\t   move current window to the very bottom\n"
"|CTRL-W_K|\tCTRL-W K\t   move current window to the very top\n"
"|CTRL-W_L|\tCTRL-W L\t   move current window to the far right\n"
"|CTRL-W_P|\tCTRL-W P\t   go to preview window\n"
"|CTRL-W_R|\tCTRL-W R\t   rotate windows upwards N times\n"
"|CTRL-W_S|\tCTRL-W S\t   same as \"CTRL-W s\"\n"
"|CTRL-W_T|\tCTRL-W T\t   move current window to a new tab page\n"
"|CTRL-W_W|\tCTRL-W W\t   go to N previous window (wrap around)\n"
"|CTRL-W_]|\tCTRL-W ]\t   split window and jump to tag under cursor\n"
"|CTRL-W_^|\tCTRL-W ^\t   split current window and edit alternate\n"
"\t\t\t\t   file N\n"
"|CTRL-W__|\tCTRL-W _\t   set current window height to N (default:\n"
"\t\t\t\t   very high)\n"
"|CTRL-W_b|\tCTRL-W b\t   go to bottom window\n"
"|CTRL-W_c|\tCTRL-W c\t   close current window (like |:close|)\n"
"|CTRL-W_d|\tCTRL-W d\t   split window and jump to definition under\n"
"\t\t\t\t   the cursor\n"
"|CTRL-W_f|\tCTRL-W f\t   split window and edit file name under the\n"
"\t\t\t\t   cursor\n"
"|CTRL-W_F|\tCTRL-W F\t   split window and edit file name under the\n"
"\t\t\t\t   cursor and jump to the line number\n"
"\t\t\t\t   following the file name.\n"
"|CTRL-W_g_CTRL-]| CTRL-W g CTRL-]  split window and do |:tjump| to tag under\n"
"\t\t\t\t   cursor\n"
"|CTRL-W_g]|\tCTRL-W g ]\t   split window and do |:tselect| for tag\n"
"\t\t\t\t   under cursor\n"
"|CTRL-W_g}|\tCTRL-W g }\t   do a |:ptjump| to the tag under the cursor\n"
"|CTRL-W_gf|\tCTRL-W g f\t   edit file name under the cursor in a new\n"
"\t\t\t\t   tab page\n"
"|CTRL-W_gF|\tCTRL-W g F\t   edit file name under the cursor in a new\n"
"\t\t\t\t   tab page and jump to the line number\n"
"\t\t\t\t   following the file name.\n"
"|CTRL-W_h|\tCTRL-W h\t   go to Nth left window (stop at first window)\n"
"|CTRL-W_i|\tCTRL-W i\t   split window and jump to declaration of\n"
"\t\t\t\t   identifier under the cursor\n"
"|CTRL-W_j|\tCTRL-W j\t   go N windows down (stop at last window)\n"
"|CTRL-W_k|\tCTRL-W k\t   go N windows up (stop at first window)\n"
"|CTRL-W_l|\tCTRL-W l\t   go to Nth right window (stop at last window)\n"
"|CTRL-W_n|\tCTRL-W n\t   open new window, N lines high\n"
"|CTRL-W_o|\tCTRL-W o\t   close all but current window (like |:only|)\n"
"|CTRL-W_p|\tCTRL-W p\t   go to previous (last accessed) window\n"
"|CTRL-W_q|\tCTRL-W q\t   quit current window (like |:quit|)\n"
"|CTRL-W_r|\tCTRL-W r\t   rotate windows downwards N times\n"
"|CTRL-W_s|\tCTRL-W s\t   split current window in two parts, new\n"
"\t\t\t\t   window N lines high\n"
"|CTRL-W_t|\tCTRL-W t\t   go to top window\n"
"|CTRL-W_v|\tCTRL-W v\t   split current window vertically, new window\n"
"\t\t\t\t   N lines wide\n"
"|CTRL-W_w|\tCTRL-W w\t   go to N next window (wrap around)\n"
"|CTRL-W_x|\tCTRL-W x\t   exchange current window with window N\n"
"\t\t\t\t   (default: next window)\n"
"|CTRL-W_z|\tCTRL-W z\t   close preview window\n"
"|CTRL-W_bar|\tCTRL-W |\t   set window width to N columns\n"
"|CTRL-W_}|\tCTRL-W }\t   show tag under cursor in preview window\n"
"|CTRL-W_<Down>|\tCTRL-W <Down>\t   same as \"CTRL-W j\"\n"
"|CTRL-W_<Up>|\tCTRL-W <Up>\t   same as \"CTRL-W k\"\n"
"|CTRL-W_<Left>|\tCTRL-W <Left>\t   same as \"CTRL-W h\"\n"
"|CTRL-W_<Right>| CTRL-W <Right>\t   same as \"CTRL-W l\""
msgstr ""

#: index.txt:587
msgid ""
"============================================================================"
"==\n"
"2.3 Square bracket commands\t\t\t\t\t*[* *]*"
msgstr ""

#: index.txt:590
msgid ""
"tag\t\tchar\t      note action in Normal mode\t~\n"
"----------------------------------------------------------------------------"
"--\n"
"|[_CTRL-D|\t[ CTRL-D\t   jump to first #define found in current and\n"
"\t\t\t\t   included files matching the word under the\n"
"\t\t\t\t   cursor, start searching at beginning of\n"
"\t\t\t\t   current file\n"
"|[_CTRL-I|\t[ CTRL-I\t   jump to first line in current and included\n"
"\t\t\t\t   files that contains the word under the\n"
"\t\t\t\t   cursor, start searching at beginning of\n"
"\t\t\t\t   current file\n"
"|[#|\t\t[#\t\t1  cursor to N previous unmatched #if, #else\n"
"\t\t\t\t   or #ifdef\n"
"|['|\t\t['\t\t1  cursor to previous lowercase mark, on first\n"
"\t\t\t\t   non-blank\n"
"|[(|\t\t[(\t\t1  cursor N times back to unmatched '('\n"
"|[star|\t\t[*\t\t1  same as \"[/\"\n"
"|[`|\t\t[`\t\t1  cursor to previous lowercase mark\n"
"|[/|\t\t[/\t\t1  cursor to N previous start of a C comment\n"
"|[D|\t\t[D\t\t   list all defines found in current and\n"
"\t\t\t\t   included files matching the word under the\n"
"\t\t\t\t   cursor, start searching at beginning of\n"
"\t\t\t\t   current file\n"
"|[I|\t\t[I\t\t   list all lines found in current and\n"
"\t\t\t\t   included files that contain the word under\n"
"\t\t\t\t   the cursor, start searching at beginning of\n"
"\t\t\t\t   current file\n"
"|[P|\t\t[P\t\t2  same as \"[p\"\n"
"|[[|\t\t[[\t\t1  cursor N sections backward\n"
"|[]|\t\t[]\t\t1  cursor N SECTIONS backward\n"
"|[c|\t\t[c\t\t1  cursor N times backwards to start of change\n"
"|[d|\t\t[d\t\t   show first #define found in current and\n"
"\t\t\t\t   included files matching the word under the\n"
"\t\t\t\t   cursor, start searching at beginning of\n"
"\t\t\t\t   current file\n"
"|[f|\t\t[f\t\t   same as \"gf\"\n"
"|[i|\t\t[i\t\t   show first line found in current and\n"
"\t\t\t\t   included files that contains the word under\n"
"\t\t\t\t   the cursor, start searching at beginning of\n"
"\t\t\t\t   current file\n"
"|[m|\t\t[m\t\t1  cursor N times back to start of member\n"
"\t\t\t\t   function\n"
"|[p|\t\t[p\t\t2  like \"P\", but adjust indent to current line\n"
"|[s|\t\t[s\t\t1  move to the previous misspelled word\n"
"|[z|\t\t[z\t\t1  move to start of open fold\n"
"|[{|\t\t[{\t\t1  cursor N times back to unmatched '{'\n"
"|[<MiddleMouse> [<MiddleMouse>\t2  same as \"[p\""
msgstr ""

#: index.txt:637
msgid ""
"|]_CTRL-D|\t] CTRL-D\t   jump to first #define found in current and\n"
"\t\t\t\t   included files matching the word under the\n"
"\t\t\t\t   cursor, start searching at cursor position\n"
"|]_CTRL-I|\t] CTRL-I\t   jump to first line in current and included\n"
"\t\t\t\t   files that contains the word under the\n"
"\t\t\t\t   cursor, start searching at cursor position\n"
"|]#|\t\t]#\t\t1  cursor to N next unmatched #endif or #else\n"
"|]'|\t\t]'\t\t1  cursor to next lowercase mark, on first\n"
"\t\t\t\t   non-blank\n"
"|])|\t\t])\t\t1  cursor N times forward to unmatched ')'\n"
"|]star|\t\t]*\t\t1  same as \"]/\"\n"
"|]`|\t\t]`\t\t1  cursor to next lowercase mark\n"
"|]/|\t\t]/\t\t1  cursor to N next end of a C comment\n"
"|]D|\t\t]D\t\t   list all #defines found in current and\n"
"\t\t\t\t   included files matching the word under the\n"
"\t\t\t\t   cursor, start searching at cursor position\n"
"|]I|\t\t]I\t\t   list all lines found in current and\n"
"\t\t\t\t   included files that contain the word under\n"
"\t\t\t\t   the cursor, start searching at cursor\n"
"\t\t\t\t   position\n"
"|]P|\t\t]P\t\t2  same as \"[p\"\n"
"|][|\t\t][\t\t1  cursor N SECTIONS forward\n"
"|]]|\t\t]]\t\t1  cursor N sections forward\n"
"|]c|\t\t]c\t\t1  cursor N times forward to start of change\n"
"|]d|\t\t]d\t\t   show first #define found in current and\n"
"\t\t\t\t   included files matching the word under the\n"
"\t\t\t\t   cursor, start searching at cursor position\n"
"|]f|\t\t]f\t\t   same as \"gf\"\n"
"|]i|\t\t]i\t\t   show first line found in current and\n"
"\t\t\t\t   included files that contains the word under\n"
"\t\t\t\t   the cursor, start searching at cursor\n"
"\t\t\t\t   position\n"
"|]m|\t\t]m\t\t1  cursor N times forward to end of member\n"
"\t\t\t\t   function\n"
"|]p|\t\t]p\t\t2  like \"p\", but adjust indent to current line\n"
"|]s|\t\t]s\t\t1  move to next misspelled word\n"
"|]z|\t\t]z\t\t1  move to end of open fold\n"
"|]}|\t\t]}\t\t1  cursor N times forward to unmatched '}'\n"
"|]<MiddleMouse> ]<MiddleMouse>\t2  same as \"]p\""
msgstr ""

#: index.txt:677
msgid ""
"============================================================================"
"==\n"
"2.4 Commands starting with 'g'\t\t\t\t\t\t*g*"
msgstr ""

#: index.txt:680
msgid ""
"tag\t\tchar\t      note action in Normal mode\t~\n"
"----------------------------------------------------------------------------"
"--\n"
"|g_CTRL-A|\tg CTRL-A\t   only when compiled with MEM_PROFILE\n"
"\t\t\t\t   defined: dump a memory profile\n"
"|g_CTRL-G|\tg CTRL-G\t   show information about current cursor\n"
"\t\t\t\t   position\n"
"|g_CTRL-H|\tg CTRL-H\t   start Select block mode\n"
"|g_CTRL-]|\tg CTRL-]\t   |:tjump| to the tag under the cursor\n"
"|g#|\t\tg#\t\t1  like \"#\", but without using \"\\<\" and \"\\>\"\n"
"|g$|\t\tg$\t\t1  when 'wrap' off go to rightmost character of\n"
"\t\t\t\t   the current line that is on the screen;\n"
"\t\t\t\t   when 'wrap' on go to the rightmost character\n"
"\t\t\t\t   of the current screen line\n"
"|g&|\t\tg&\t\t2  repeat last \":s\" on all lines\n"
"|g'|\t\tg'{mark}\t1  like |'| but without changing the jumplist\n"
"|g`|\t\tg`{mark}\t1  like |`| but without changing the jumplist\n"
"|gstar|\t\tg*\t\t1  like \"*\", but without using \"\\<\" and \"\\>\"\n"
"|g0|\t\tg0\t\t1  when 'wrap' off go to leftmost character of\n"
"\t\t\t\t   the current line that is on the screen;\n"
"\t\t\t\t   when 'wrap' on go to the leftmost character\n"
"\t\t\t\t   of the current screen line\n"
"|g8|\t\tg8\t\t   print hex value of bytes used in UTF-8\n"
"\t\t\t\t   character under the cursor\n"
"|g<|\t\tg<\t\t   display previous command output\n"
"|g?|\t\tg?\t\t2  Rot13 encoding operator\n"
"|g?g?|\t\tg??\t\t2  Rot13 encode current line\n"
"|g?g?|\t\tg?g?\t\t2  Rot13 encode current line\n"
"|gD|\t\tgD\t\t1  go to definition of word under the cursor\n"
"\t\t\t\t   in current file\n"
"|gE|\t\tgE\t\t1  go backwards to the end of the previous\n"
"\t\t\t\t   WORD\n"
"|gH|\t\tgH\t\t   start Select line mode\n"
"|gI|\t\tgI\t\t2  like \"I\", but always start in column 1\n"
"|gJ|\t\tgJ\t\t2  join lines without inserting space\n"
"|gP|\t\t[\"x]gP\t\t2  put the text [from register x] before the\n"
"\t\t\t\t   cursor N times, leave the cursor after it\n"
"|gR|\t\tgR\t\t2  enter Virtual Replace mode\n"
"|gU|\t\tgU{motion}\t2  make Nmove text uppercase\n"
"|gV|\t\tgV\t\t   don't reselect the previous Visual area\n"
"\t\t\t\t   when executing a mapping or menu in Select\n"
"\t\t\t\t   mode\n"
"|g]|\t\tg]\t\t   :tselect on the tag under the cursor\n"
"|g^|\t\tg^\t\t1  when 'wrap' off go to leftmost non-white\n"
"\t\t\t\t   character of the current line that is on\n"
"\t\t\t\t   the screen; when 'wrap' on go to the\n"
"\t\t\t\t   leftmost non-white character of the current\n"
"\t\t\t\t   screen line\n"
"|ga|\t\tga\t\t   print ascii value of character under the\n"
"\t\t\t\t   cursor\n"
"|gd|\t\tgd\t\t1  go to definition of word under the cursor\n"
"\t\t\t\t   in current function\n"
"|ge|\t\tge\t\t1  go backwards to the end of the previous\n"
"\t\t\t\t   word\n"
"|gf|\t\tgf\t\t   start editing the file whose name is under\n"
"\t\t\t\t   the cursor\n"
"|gF|\t\tgF\t\t   start editing the file whose name is under\n"
"\t\t\t\t   the cursor and jump to the line number\n"
"\t\t\t\t   following the filename.\n"
"|gg|\t\tgg\t\t1  cursor to line N, default first line\n"
"|gh|\t\tgh\t\t   start Select mode\n"
"|gi|\t\tgi\t\t2  like \"i\", but first move to the |'^| mark\n"
"|gj|\t\tgj\t\t1  like \"j\", but when 'wrap' on go N screen\n"
"\t\t\t\t   lines down\n"
"|gk|\t\tgk\t\t1  like \"k\", but when 'wrap' on go N screen\n"
"\t\t\t\t   lines up\n"
"|gm|\t\tgm\t\t1  go to character at middle of the screenline\n"
"|go|\t\tgo\t\t1  cursor to byte N in the buffer\n"
"|gp|\t\t[\"x]gp\t\t2  put the text [from register x] after the\n"
"\t\t\t\t   cursor N times, leave the cursor after it\n"
"|gq|\t\tgq{motion}\t2  format Nmove text\n"
"|gr|\t\tgr{char}\t2  virtual replace N chars with {char}\n"
"|gs|\t\tgs\t\t   go to sleep for N seconds (default 1)\n"
"|gu|\t\tgu{motion}\t2  make Nmove text lowercase\n"
"|gv|\t\tgv\t\t   reselect the previous Visual area\n"
"|gw|\t\tgw{motion}\t2  format Nmove text and keep cursor\n"
"|netrw-gx|\tgx\t\t   execute application for file name under the\n"
"\t\t\t\t   cursor (only with |netrw| plugin)\n"
"|g@|\t\tg@{motion}\t   call 'operatorfunc'\n"
"|g~|\t\tg~{motion}\t2  swap case for Nmove text\n"
"|g<Down>|\tg<Down>\t\t1  same as \"gj\"\n"
"|g<End>|\tg<End>\t\t1  same as \"g$\"\n"
"|g<Home>|\tg<Home>\t\t1  same as \"g0\"\n"
"|g<LeftMouse>|\tg<LeftMouse>\t   same as <C-LeftMouse>\n"
"\t\tg<MiddleMouse>\t   same as <C-MiddleMouse>\n"
"|g<RightMouse>|\tg<RightMouse>\t   same as <C-RightMouse>\n"
"|g<Up>|\t\tg<Up>\t\t1  same as \"gk\""
msgstr ""

#: index.txt:767
msgid ""
"============================================================================"
"==\n"
"2.5 Commands starting with 'z'\t\t\t\t\t\t*z*"
msgstr ""

#: index.txt:770
msgid ""
"tag\t\tchar\t      note action in Normal mode\t~\n"
"----------------------------------------------------------------------------"
"--\n"
"|z<CR>|\t\tz<CR>\t\t   redraw, cursor line to top of window,\n"
"\t\t\t\t   cursor on first non-blank\n"
"|zN<CR>|\tz{height}<CR>\t   redraw, make window {height} lines high\n"
"|z+|\t\tz+\t\t   cursor on line N (default line below\n"
"\t\t\t\t   window), otherwise like \"z<CR>\"\n"
"|z-|\t\tz-\t\t   redraw, cursor line at bottom of window,\n"
"\t\t\t\t   cursor on first non-blank\n"
"|z.|\t\tz.\t\t   redraw, cursor line to center of window,\n"
"\t\t\t\t   cursor on first non-blank\n"
"|z=|\t\tz=\t\t   give spelling suggestions\n"
"|zA|\t\tzA\t\t   open a closed fold or close an open fold\n"
"\t\t\t\t   recursively\n"
"|zC|\t\tzC\t\t   close folds recursively\n"
"|zD|\t\tzD\t\t   delete folds recursively\n"
"|zE|\t\tzE\t\t   eliminate all folds\n"
"|zF|\t\tzF\t\t   create a fold for N lines\n"
"|zG|\t\tzG\t\t   mark word as good spelled word\n"
"|zM|\t\tzM\t\t   set 'foldlevel' to zero\n"
"|zN|\t\tzN\t\t   set 'foldenable'\n"
"|zO|\t\tzO\t\t   open folds recursively\n"
"|zR|\t\tzR\t\t   set 'foldlevel' to the deepest fold\n"
"|zW|\t\tzW\t\t   mark word as wrong (bad) spelled word\n"
"|zX|\t\tzX\t\t   re-apply 'foldlevel'\n"
"|z^|\t\tz^\t\t   cursor on line N (default line above\n"
"\t\t\t\t   window), otherwise like \"z-\"\n"
"|za|\t\tza\t\t   open a closed fold, close an open fold\n"
"|zb|\t\tzb\t\t   redraw, cursor line at bottom of window\n"
"|zc|\t\tzc\t\t   close a fold\n"
"|zd|\t\tzd\t\t   delete a fold\n"
"|ze|\t\tze\t\t   when 'wrap' off scroll horizontally to\n"
"\t\t\t\t   position the cursor at the end (right side)\n"
"\t\t\t\t   of the screen\n"
"|zf|\t\tzf{motion}\t   create a fold for Nmove text\n"
"|zg|\t\tzg\t\t   mark word as good spelled word\n"
"|zh|\t\tzh\t\t   when 'wrap' off scroll screen N characters\n"
"\t\t\t\t   to the right\n"
"|zi|\t\tzi\t\t   toggle 'foldenable'\n"
"|zj|\t\tzj\t\t1  move to the start of the next fold\n"
"|zk|\t\tzk\t\t1  move to the end of the previous fold\n"
"|zl|\t\tzl\t\t   when 'wrap' off scroll screen N characters\n"
"\t\t\t\t   to the left\n"
"|zm|\t\tzm\t\t   subtract one from 'foldlevel'\n"
"|zn|\t\tzn\t\t   reset 'foldenable'\n"
"|zo|\t\tzo\t\t   open fold\n"
"|zr|\t\tzr\t\t   add one to 'foldlevel'\n"
"|zs|\t\tzs\t\t   when 'wrap' off scroll horizontally to\n"
"\t\t\t\t   position the cursor at the start (left\n"
"\t\t\t\t   side) of the screen\n"
"|zt|\t\tzt\t\t   redraw, cursor line at top of window\n"
"|zv|\t\tzv\t\t   open enough folds to view the cursor line\n"
"|zw|\t\tzw\t\t   mark word as wrong (bad) spelled word\n"
"|zx|\t\tzx\t\t   re-apply 'foldlevel' and do \"zv\"\n"
"|zz|\t\tzz\t\t   redraw, cursor line at center of window\n"
"|z<Left>|\tz<Left>\t\t   same as \"zh\"\n"
"|z<Right>|\tz<Right>\t   same as \"zl\""
msgstr ""

#: index.txt:828
msgid ""
"============================================================================"
"==\n"
"3. Visual mode\t\t\t\t\t\t*visual-index*"
msgstr ""

#: index.txt:831
msgid ""
"Most commands in Visual mode are the same as in Normal mode.  The ones "
"listed\n"
"here are those that are different."
msgstr ""

#: index.txt:834
msgid ""
"tag\t\tcommand\t      note action in Visual mode\t~\n"
"----------------------------------------------------------------------------"
"--\n"
"|v_CTRL-\\_CTRL-N| CTRL-\\ CTRL-N\t   stop Visual mode\n"
"|v_CTRL-\\_CTRL-G| CTRL-\\ CTRL-G\t   go to mode specified with 'insertmode'\n"
"|v_CTRL-C|\tCTRL-C\t\t   stop Visual mode\n"
"|v_CTRL-G|\tCTRL-G\t\t   toggle between Visual mode and Select mode\n"
"|v_<BS>|\t<BS>\t\t2  Select mode: delete highlighted area\n"
"|v_CTRL-H|\tCTRL-H\t\t2  same as <BS>\n"
"|v_CTRL-O|\tCTRL-O\t\t   switch from Select to Visual mode for one\n"
"\t\t\t\t   command\n"
"|v_CTRL-V|\tCTRL-V\t\t   make Visual mode blockwise or stop Visual\n"
"\t\t\t\t   mode\n"
"|v_<Esc>|\t<Esc>\t\t   stop Visual mode\n"
"|v_CTRL-]|\tCTRL-]\t\t   jump to highlighted tag\n"
"|v_!|\t\t!{filter}\t2  filter the highlighted lines through the\n"
"\t\t\t\t   external command {filter}\n"
"|v_:|\t\t:\t\t   start a command-line with the highlighted\n"
"\t\t\t\t   lines as a range\n"
"|v_<|\t\t<\t\t2  shift the highlighted lines one\n"
"\t\t\t\t   'shiftwidth' left\n"
"|v_=|\t\t=\t\t2  filter the highlighted lines through the\n"
"\t\t\t\t   external program given with the 'equalprg'\n"
"\t\t\t\t   option\n"
"|v_>|\t\t>\t\t2  shift the highlighted lines one\n"
"\t\t\t\t   'shiftwidth' right\n"
"|v_b_A|\t\tA\t\t2  block mode: append same text in all lines,\n"
"\t\t\t\t   after the highlighted area\n"
"|v_C|\t\tC\t\t2  delete the highlighted lines and start\n"
"\t\t\t\t   insert\n"
"|v_D|\t\tD\t\t2  delete the highlighted lines\n"
"|v_b_I|\t\tI\t\t2  block mode: insert same text in all lines,\n"
"\t\t\t\t   before the highlighted area\n"
"|v_J|\t\tJ\t\t2  join the highlighted lines\n"
"|v_K|\t\tK\t\t   run 'keywordprg' on the highlighted area\n"
"|v_O|\t\tO\t\t   Move horizontally to other corner of area.\n"
"\t\tQ\t\t   does not start Ex mode\n"
"|v_R|\t\tR\t\t2  delete the highlighted lines and start\n"
"\t\t\t\t   insert\n"
"|v_S|\t\tS\t\t2  delete the highlighted lines and start\n"
"\t\t\t\t   insert\n"
"|v_U|\t\tU\t\t2  make highlighted area uppercase\n"
"|v_V|\t\tV\t\t   make Visual mode linewise or stop Visual\n"
"\t\t\t\t   mode\n"
"|v_X|\t\tX\t\t2  delete the highlighted lines\n"
"|v_Y|\t\tY\t\t   yank the highlighted lines\n"
"|v_aquote|\ta\"\t\t   extend highlighted area with a double\n"
"\t\t\t\t   quoted string\n"
"|v_a'|\t\ta'\t\t   extend highlighted area with a single\n"
"\t\t\t\t   quoted string\n"
"|v_a(|\t\ta(\t\t   same as ab\n"
"|v_a)|\t\ta)\t\t   same as ab\n"
"|v_a<|\t\ta<\t\t   extend highlighted area with a <> block\n"
"|v_a>|\t\ta>\t\t   same as a<\n"
"|v_aB|\t\taB\t\t   extend highlighted area with a {} block\n"
"|v_aW|\t\taW\t\t   extend highlighted area with \"a WORD\"\n"
"|v_a[|\t\ta[\t\t   extend highlighted area with a [] block\n"
"|v_a]|\t\ta]\t\t   same as a[\n"
"|v_a`|\t\ta`\t\t   extend highlighted area with a backtick\n"
"\t\t\t\t   quoted string\n"
"|v_ab|\t\tab\t\t   extend highlighted area with a () block\n"
"|v_ap|\t\tap\t\t   extend highlighted area with a paragraph\n"
"|v_as|\t\tas\t\t   extend highlighted area with a sentence\n"
"|v_at|\t\tat\t\t   extend highlighted area with a tag block\n"
"|v_aw|\t\taw\t\t   extend highlighted area with \"a word\"\n"
"|v_a{|\t\ta{\t\t   same as aB\n"
"|v_a}|\t\ta}\t\t   same as aB\n"
"|v_c|\t\tc\t\t2  delete highlighted area and start insert\n"
"|v_d|\t\td\t\t2  delete highlighted area\n"
"|v_gJ|\t\tgJ\t\t2  join the highlighted lines without\n"
"\t\t\t\t   inserting spaces\n"
"|v_gq|\t\tgq\t\t2  format the highlighted lines\n"
"|v_gv|\t\tgv\t\t   exchange current and previous highlighted\n"
"\t\t\t\t   area\n"
"|v_iquote|\ti\"\t\t   extend highlighted area with a double\n"
"\t\t\t\t   quoted string (without quotes)\n"
"|v_i'|\t\ti'\t\t   extend highlighted area with a single\n"
"\t\t\t\t   quoted string (without quotes)\n"
"|v_i(|\t\ti(\t\t   same as ib\n"
"|v_i)|\t\ti)\t\t   same as ib\n"
"|v_i<|\t\ti<\t\t   extend highlighted area with inner <> block\n"
"|v_i>|\t\ti>\t\t   same as i<\n"
"|v_iB|\t\tiB\t\t   extend highlighted area with inner {} block\n"
"|v_iW|\t\tiW\t\t   extend highlighted area with \"inner WORD\"\n"
"|v_i[|\t\ti[\t\t   extend highlighted area with inner [] block\n"
"|v_i]|\t\ti]\t\t   same as i[\n"
"|v_i`|\t\ti`\t\t   extend highlighted area with a backtick\n"
"\t\t\t\t   quoted string (without the backticks)\n"
"|v_ib|\t\tib\t\t   extend highlighted area with inner () block\n"
"|v_ip|\t\tip\t\t   extend highlighted area with inner paragraph\n"
"|v_is|\t\tis\t\t   extend highlighted area with inner sentence\n"
"|v_it|\t\tit\t\t   extend highlighted area with inner tag block\n"
"|v_iw|\t\tiw\t\t   extend highlighted area with \"inner word\"\n"
"|v_i{|\t\ti{\t\t   same as iB\n"
"|v_i}|\t\ti}\t\t   same as iB\n"
"|v_o|\t\to\t\t   move cursor to other corner of area\n"
"|v_r|\t\tr\t\t2  delete highlighted area and start insert\n"
"|v_s|\t\ts\t\t2  delete highlighted area and start insert\n"
"|v_u|\t\tu\t\t2  make highlighted area lowercase\n"
"|v_v|\t\tv\t\t   make Visual mode characterwise or stop\n"
"\t\t\t\t   Visual mode\n"
"|v_x|\t\tx\t\t2  delete the highlighted area\n"
"|v_y|\t\ty\t\t   yank the highlighted area\n"
"|v_~|\t\t~\t\t2  swap case for the highlighted area"
msgstr ""

#: index.txt:938
msgid ""
"============================================================================"
"==\n"
"4. Command-line editing\t\t\t\t\t*ex-edit-index*"
msgstr ""

#: index.txt:941
msgid ""
"Get to the command-line with the ':', '!', '/' or '?' commands.\n"
"Normal characters are inserted at the current cursor position.\n"
"\"Completion\" below refers to context-sensitive completion.  It will complete\n"
"file names, tags, commands etc. as appropriate."
msgstr ""

#: index.txt:946
msgid ""
"\t\tCTRL-@\t\tnot used\n"
"|c_CTRL-A|\tCTRL-A\t\tdo completion on the pattern in front of the\n"
"\t\t\t\tcursor and insert all matches\n"
"|c_CTRL-B|\tCTRL-B\t\tcursor to begin of command-line\n"
"|c_CTRL-C|\tCTRL-C\t\tsame as <ESC>\n"
"|c_CTRL-D|\tCTRL-D\t\tlist completions that match the pattern in\n"
"\t\t\t\tfront of the cursor\n"
"|c_CTRL-E|\tCTRL-E\t\tcursor to end of command-line\n"
"|'cedit'|\tCTRL-F\t\tdefault value for 'cedit': opens the\n"
"\t\t\t\tcommand-line window; otherwise not used\n"
"\t\tCTRL-G\t\tnot used\n"
"|c_<BS>|\t<BS>\t\tdelete the character in front of the cursor\n"
"|c_digraph|\t{char1} <BS> {char2}\n"
"\t\t\t\tenter digraph when 'digraph' is on\n"
"|c_CTRL-H|\tCTRL-H\t\tsame as <BS>\n"
"|c_<Tab>|\t<Tab>\t\tif 'wildchar' is <Tab>: Do completion on\n"
"\t\t\t\tthe pattern in front of the cursor\n"
"|c_<S-Tab>|\t<S-Tab>\t\tsame as CTRL-P\n"
"|c_wildchar|\t'wildchar'\tDo completion on the pattern in front of the\n"
"\t\t\t\tcursor (default: <Tab>)\n"
"|c_CTRL-I|\tCTRL-I\t\tsame as <Tab>\n"
"|c_<NL>|\t<NL>\t\tsame as <CR>\n"
"|c_CTRL-J|\tCTRL-J\t\tsame as <CR>\n"
"|c_CTRL-K|\tCTRL-K {char1} {char2}\n"
"\t\t\t\tenter digraph\n"
"|c_CTRL-L|\tCTRL-L\t\tdo completion on the pattern in front of the\n"
"\t\t\t\tcursor and insert the longest common part\n"
"|c_<CR>|\t<CR>\t\texecute entered command\n"
"|c_<CR>|\tCTRL-M\t\tsame as <CR>\n"
"|c_CTRL-N|\tCTRL-N\t\tafter using 'wildchar' with multiple matches:\n"
"\t\t\t\tgo to next match, otherwise: same as <Down>\n"
"\t\tCTRL-O\t\tnot used\n"
"|c_CTRL-P|\tCTRL-P\t\tafter using 'wildchar' with multiple matches:\n"
"\t\t\t\tgo to previous match, otherwise: same as <Up>\n"
"|c_CTRL-Q|\tCTRL-Q\t\tsame as CTRL-V, unless it's used for terminal\n"
"\t\t\t\tcontrol flow\n"
"|c_CTRL-R|\tCTRL-R {0-9a-z\"%#*:= CTRL-F CTRL-P CTRL-W CTRL-A}\n"
"\t\t\t\tinsert the contents of a register or object\n"
"\t\t\t\tunder the cursor as if typed\n"
"|c_CTRL-R_CTRL-R| CTRL-R CTRL-R {0-9a-z\"%#*:= CTRL-F CTRL-P CTRL-W CTRL-A}\n"
"\t\t\t\tinsert the contents of a register or object\n"
"\t\t\t\tunder the cursor literally\n"
"\t\tCTRL-S\t\t(used for terminal control flow)\n"
"\t\tCTRL-T\t\tnot used\n"
"|c_CTRL-U|\tCTRL-U\t\tremove all characters\n"
"|c_CTRL-V|\tCTRL-V\t\tinsert next non-digit literally, insert three\n"
"\t\t\t\tdigit decimal number as a single byte.\n"
"|c_CTRL-W|\tCTRL-W\t\tdelete the word in front of the cursor\n"
"\t\tCTRL-X\t\tnot used (reserved for completion)\n"
"\t\tCTRL-Y\t\tcopy (yank) modeless selection\n"
"\t\tCTRL-Z\t\tnot used (reserved for suspend)\n"
"|c_<Esc>|\t<Esc>\t\tabandon command-line without executing it\n"
"|c_<Esc>|\tCTRL-[\t\tsame as <Esc>\n"
"|c_CTRL-\\_CTRL-N| CTRL-\\ CTRL-N\t go to Normal mode, abandon command-line\n"
"|c_CTRL-\\_CTRL-G| CTRL-\\ CTRL-G\t go to mode specified with 'insertmode',\n"
"\t\t\t\tabandon command-line\n"
"\t\tCTRL-\\ a - d\treserved for extensions\n"
"|c_CTRL-\\_e|\tCTRL-\\ e {expr} replace the command line with the result of\n"
"\t\t\t\t{expr}\n"
"\t\tCTRL-\\ f - z\treserved for extensions\n"
"\t\tCTRL-\\ others\tnot used\n"
"|c_CTRL-]|\tCTRL-]\t\ttrigger abbreviation\n"
"|c_CTRL-^|\tCTRL-^\t\ttoggle use of |:lmap| mappings\n"
"|c_CTRL-_|\tCTRL-_\t\twhen 'allowrevins' set: change language\n"
"\t\t\t\t(Hebrew, Farsi)\n"
"|c_<Del>|\t<Del>\t\tdelete the character under the cursor"
msgstr ""

#: index.txt:1013
msgid ""
"|c_<Left>|\t<Left>\t\tcursor left\n"
"|c_<S-Left>|\t<S-Left>\tcursor one word left\n"
"|c_<C-Left>|\t<C-Left>\tcursor one word left\n"
"|c_<Right>|\t<Right>\t\tcursor right\n"
"|c_<S-Right>|\t<S-Right>\tcursor one word right\n"
"|c_<C-Right>|\t<C-Right>\tcursor one word right\n"
"|c_<Up>|\t<Up>\t\trecall previous command-line from history that\n"
"\t\t\t\tmatches pattern in front of the cursor\n"
"|c_<S-Up>|\t<S-Up>\t\trecall previous command-line from history\n"
"|c_<Down>|\t<Down>\t\trecall next command-line from history that\n"
"\t\t\t\tmatches pattern in front of the cursor\n"
"|c_<S-Down>|\t<S-Down>\trecall next command-line from history\n"
"|c_<Home>|\t<Home>\t\tcursor to start of command-line\n"
"|c_<End>|\t<End>\t\tcursor to end of command-line\n"
"|c_<PageDown>|\t<PageDown>\tsame as <S-Down>\n"
"|c_<PageUp>|\t<PageUp>\tsame as <S-Up>\n"
"|c_<Insert>|\t<Insert>\ttoggle insert/overstrike mode\n"
"|c_<LeftMouse>|\t<LeftMouse>\tcursor at mouse click"
msgstr ""

#: index.txt:1032
msgid "You found it, Arthur!\t\t\t\t*holy-grail*"
msgstr ""

#: index.txt:1034
msgid ""
"============================================================================"
"==\n"
"5. EX commands\t\t\t\t\t*ex-cmd-index* *:index*"
msgstr ""

#: index.txt:1037
msgid ""
"This is a brief but complete listing of all the \":\" commands, without\n"
"mentioning any arguments.  The optional part of the command name is inside "
"[].\n"
"The commands are sorted on the non-optional part of their name."
msgstr ""

#: index.txt:1041
msgid ""
"|:!|\t\t:!\t\tfilter lines or execute an external command\n"
"|:!!|\t\t:!!\t\trepeat last \":!\" command\n"
"|:#|\t\t:#\t\tsame as \":number\"\n"
"|:&|\t\t:&\t\trepeat last \":substitute\"\n"
"|:star|\t\t:*\t\texecute contents of a register\n"
"|:<|\t\t:<\t\tshift lines one 'shiftwidth' left\n"
"|:=|\t\t:=\t\tprint the cursor line number\n"
"|:>|\t\t:>\t\tshift lines one 'shiftwidth' right\n"
"|:@|\t\t:@\t\texecute contents of a register\n"
"|:@@|\t\t:@@\t\trepeat the previous \":@\"\n"
"|:Next|\t\t:N[ext]\t\tgo to previous file in the argument list\n"
"|:Print|\t:P[rint]\tprint lines\n"
"|:X|\t\t:X\t\task for encryption key\n"
"|:append|\t:a[ppend]\tappend text\n"
"|:abbreviate|\t:ab[breviate]\tenter abbreviation\n"
"|:abclear|\t:abc[lear]\tremove all abbreviations\n"
"|:aboveleft|\t:abo[veleft]\tmake split window appear left or above\n"
"|:all|\t\t:al[l]\t\topen a window for each file in the argument\n"
"\t\t\t\tlist\n"
"|:amenu|\t:am[enu]\tenter new menu item for all modes\n"
"|:anoremenu|\t:an[oremenu]\tenter a new menu for all modes that will not\n"
"\t\t\t\tbe remapped\n"
"|:args|\t\t:ar[gs]\t\tprint the argument list\n"
"|:argadd|\t:arga[dd]\tadd items to the argument list\n"
"|:argdelete|\t:argd[elete]\tdelete items from the argument list\n"
"|:argedit|\t:arge[dit]\tadd item to the argument list and edit it\n"
"|:argdo|\t:argdo\t\tdo a command on all items in the argument list\n"
"|:argglobal|\t:argg[lobal]\tdefine the global argument list\n"
"|:arglocal|\t:argl[ocal]\tdefine a local argument list\n"
"|:argument|\t:argu[ment]\tgo to specific file in the argument list\n"
"|:ascii|\t:as[cii]\tprint ascii value of character under the cursor\n"
"|:autocmd|\t:au[tocmd]\tenter or show autocommands\n"
"|:augroup|\t:aug[roup]\tselect the autocommand group to use\n"
"|:aunmenu|\t:aun[menu]\tremove menu for all modes\n"
"|:buffer|\t:b[uffer]\tgo to specific buffer in the buffer list\n"
"|:bNext|\t:bN[ext]\tgo to previous buffer in the buffer list\n"
"|:ball|\t\t:ba[ll]\t\topen a window for each buffer in the buffer list\n"
"|:badd|\t\t:bad[d]\t\tadd buffer to the buffer list\n"
"|:bdelete|\t:bd[elete]\tremove a buffer from the buffer list\n"
"|:behave|\t:be[have]\tset mouse and selection behavior\n"
"|:belowright|\t:bel[owright]\tmake split window appear right or below\n"
"|:bfirst|\t:bf[irst]\tgo to first buffer in the buffer list\n"
"|:blast|\t:bl[ast]\tgo to last buffer in the buffer list\n"
"|:bmodified|\t:bm[odified]\tgo to next buffer in the buffer list that has\n"
"\t\t\t\tbeen modified\n"
"|:bnext|\t:bn[ext]\tgo to next buffer in the buffer list\n"
"|:botright|\t:bo[tright]\tmake split window appear at bottom or far right\n"
"|:bprevious|\t:bp[revious]\tgo to previous buffer in the buffer list\n"
"|:brewind|\t:br[ewind]\tgo to first buffer in the buffer list\n"
"|:break|\t:brea[k]\tbreak out of while loop\n"
"|:breakadd|\t:breaka[dd]\tadd a debugger breakpoint\n"
"|:breakdel|\t:breakd[el]\tdelete a debugger breakpoint\n"
"|:breaklist|\t:breakl[ist]\tlist debugger breakpoints\n"
"|:browse|\t:bro[wse]\tuse file selection dialog\n"
"|:bufdo|\t:bufdo\t\texecute command in each listed buffer\n"
"|:buffers|\t:buffers\tlist all files in the buffer list\n"
"|:bunload|\t:bun[load]\tunload a specific buffer\n"
"|:bwipeout|\t:bw[ipeout]\treally delete a buffer\n"
"|:change|\t:c[hange]\treplace a line or series of lines\n"
"|:cNext|\t:cN[ext]\tgo to previous error\n"
"|:cNfile|\t:cNf[ile]\tgo to last error in previous file\n"
"|:cabbrev|\t:ca[bbrev]\tlike \":abbreviate\" but for Command-line mode\n"
"|:cabclear|\t:cabc[lear]\tclear all abbreviations for Command-line mode\n"
"|:caddbuffer|\t:caddb[uffer]\tadd errors from buffer\n"
"|:caddexpr|\t:cad[dexpr]\tadd errors from expr\n"
"|:caddfile|\t:caddf[ile]\tadd error message to current quickfix list\n"
"|:call|\t\t:cal[l]\t\tcall a function\n"
"|:catch|\t:cat[ch]\tpart of a :try command\n"
"|:cbuffer|\t:cb[uffer]\tparse error messages and jump to first error\n"
"|:cc|\t\t:cc\t\tgo to specific error\n"
"|:cclose|\t:ccl[ose]\tclose quickfix window\n"
"|:cd|\t\t:cd\t\tchange directory\n"
"|:center|\t:ce[nter]\tformat lines at the center\n"
"|:cexpr|\t:cex[pr]\tread errors from expr and jump to first\n"
"|:cfile|\t:cf[ile]\tread file with error messages and jump to first\n"
"|:cfirst|\t:cfir[st]\tgo to the specified error, default first one\n"
"|:cgetbuffer|\t:cgetb[uffer]\tget errors from buffer\n"
"|:cgetexpr|\t:cgete[xpr]\tget errors from expr\n"
"|:cgetfile|\t:cg[etfile]\tread file with error messages\n"
"|:changes|\t:cha[nges]\tprint the change list\n"
"|:chdir|\t:chd[ir]\tchange directory\n"
"|:checkpath|\t:che[ckpath]\tlist included files\n"
"|:checktime|\t:checkt[ime]\tcheck timestamp of loaded buffers\n"
"|:clist|\t:cl[ist]\tlist all errors\n"
"|:clast|\t:cla[st]\tgo to the specified error, default last one\n"
"|:close|\t:clo[se]\tclose current window\n"
"|:cmap|\t\t:cm[ap]\t\tlike \":map\" but for Command-line mode\n"
"|:cmapclear|\t:cmapc[lear]\tclear all mappings for Command-line mode\n"
"|:cmenu|\t:cme[nu]\tadd menu for Command-line mode\n"
"|:cnext|\t:cn[ext]\tgo to next error\n"
"|:cnewer|\t:cnew[er]\tgo to newer error list\n"
"|:cnfile|\t:cnf[ile]\tgo to first error in next file\n"
"|:cnoremap|\t:cno[remap]\tlike \":noremap\" but for Command-line mode\n"
"|:cnoreabbrev|\t:cnorea[bbrev]\tlike \":noreabbrev\" but for Command-line mode\n"
"|:cnoremenu|\t:cnoreme[nu]\tlike \":noremenu\" but for Command-line mode\n"
"|:copy|\t\t:co[py]\t\tcopy lines\n"
"|:colder|\t:col[der]\tgo to older error list\n"
"|:colorscheme|\t:colo[rscheme]\tload a specific color scheme\n"
"|:command|\t:com[mand]\tcreate user-defined command\n"
"|:comclear|\t:comc[lear]\tclear all user-defined commands\n"
"|:compiler|\t:comp[iler]\tdo settings for a specific compiler\n"
"|:continue|\t:con[tinue]\tgo back to :while\n"
"|:confirm|\t:conf[irm]\tprompt user when confirmation required\n"
"|:copen|\t:cope[n]\topen quickfix window\n"
"|:cprevious|\t:cp[revious]\tgo to previous error\n"
"|:cpfile|\t:cpf[ile]\tgo to last error in previous file\n"
"|:cquit|\t:cq[uit]\tquit Vim with an error code\n"
"|:crewind|\t:cr[ewind]\tgo to the specified error, default first one\n"
"|:cscope|\t:cs[cope]       execute cscope command\n"
"|:cstag|\t:cst[ag]\tuse cscope to jump to a tag\n"
"|:cunmap|\t:cu[nmap]\tlike \":unmap\" but for Command-line mode\n"
"|:cunabbrev|\t:cuna[bbrev]\tlike \":unabbrev\" but for Command-line mode\n"
"|:cunmenu|\t:cunme[nu]\tremove menu for Command-line mode\n"
"|:cwindow|\t:cw[indow]\topen or close quickfix window\n"
"|:delete|\t:d[elete]\tdelete lines\n"
"|:delmarks|\t:delm[arks]\tdelete marks\n"
"|:debug|\t:deb[ug]\trun a command in debugging mode\n"
"|:debuggreedy|\t:debugg[reedy]\tread debug mode commands from normal input\n"
"|:delcommand|\t:delc[ommand]\tdelete user-defined command\n"
"|:delfunction|\t:delf[unction]\tdelete a user function\n"
"|:diffupdate|\t:dif[fupdate]\tupdate 'diff' buffers\n"
"|:diffget|\t:diffg[et]\tremove differences in current buffer\n"
"|:diffoff|\t:diffo[ff]\tswitch off diff mode\n"
"|:diffpatch|\t:diffp[atch]\tapply a patch and show differences\n"
"|:diffput|\t:diffpu[t]\tremove differences in other buffer\n"
"|:diffsplit|\t:diffs[plit]\tshow differences with another file\n"
"|:diffthis|\t:diffthis\tmake current window a diff window\n"
"|:digraphs|\t:dig[raphs]\tshow or enter digraphs\n"
"|:display|\t:di[splay]\tdisplay registers\n"
"|:djump|\t:dj[ump]\tjump to #define\n"
"|:dlist|\t:dl[ist]\tlist #defines\n"
"|:doautocmd|\t:do[autocmd]\tapply autocommands to current buffer\n"
"|:doautoall|\t:doautoa[ll]\tapply autocommands for all loaded buffers\n"
"|:drop|\t\t:dr[op]\t\tjump to window editing file or edit file in\n"
"\t\t\t\tcurrent window\n"
"|:dsearch|\t:ds[earch]\tlist one #define\n"
"|:dsplit|\t:dsp[lit]\tsplit window and jump to #define\n"
"|:edit|\t\t:e[dit]\t\tedit a file\n"
"|:earlier|\t:ea[rlier]\tgo to older change, undo\n"
"|:echo|\t\t:ec[ho]\t\techoes the result of expressions\n"
"|:echoerr|\t:echoe[rr]\tlike :echo, show like an error and use history\n"
"|:echohl|\t:echoh[l]\tset highlighting for echo commands\n"
"|:echomsg|\t:echom[sg]\tsame as :echo, put message in history\n"
"|:echon|\t:echon\t\tsame as :echo, but without <EOL>\n"
"|:else|\t\t:el[se]\t\tpart of an :if command\n"
"|:elseif|\t:elsei[f]\tpart of an :if command\n"
"|:emenu|\t:em[enu]\texecute a menu by name\n"
"|:endif|\t:en[dif]\tend previous :if\n"
"|:endfor|\t:endfo[r]\tend previous :for\n"
"|:endfunction|\t:endf[unction]\tend of a user function\n"
"|:endtry|\t:endt[ry]\tend previous :try\n"
"|:endwhile|\t:endw[hile]\tend previous :while\n"
"|:enew|\t\t:ene[w]\t\tedit a new, unnamed buffer\n"
"|:ex|\t\t:ex\t\tsame as \":edit\"\n"
"|:execute|\t:exe[cute]\texecute result of expressions\n"
"|:exit|\t\t:exi[t]\t\tsame as \":xit\"\n"
"|:exusage|\t:exu[sage]\toverview of Ex commands\n"
"|:file|\t\t:f[ile]\t\tshow or set the current file name\n"
"|:files|\t:files\t\tlist all files in the buffer list\n"
"|:filetype|\t:filet[ype]\tswitch file type detection on/off\n"
"|:find|\t\t:fin[d]\t\tfind file in 'path' and edit it\n"
"|:finally|\t:fina[lly]\tpart of a :try command\n"
"|:finish|\t:fini[sh]\tquit sourcing a Vim script\n"
"|:first|\t:fir[st]\tgo to the first file in the argument list\n"
"|:fixdel|\t:fix[del]\tset key code of <Del>\n"
"|:fold|\t\t:fo[ld]\t\tcreate a fold\n"
"|:foldclose|\t:foldc[lose]\tclose folds\n"
"|:folddoopen|\t:foldd[oopen]\texecute command on lines not in a closed fold\n"
"|:folddoclosed|\t:folddoc[losed]\texecute command on lines in a closed fold\n"
"|:foldopen|\t:foldo[pen]\topen folds\n"
"|:for|\t\t:for\t\tfor loop\n"
"|:function|\t:fu[nction]\tdefine a user function\n"
"|:global|\t:g[lobal]\texecute commands for matching lines\n"
"|:goto|\t\t:go[to]\t\tgo to byte in the buffer\n"
"|:grep|\t\t:gr[ep]\t\trun 'grepprg' and jump to first match\n"
"|:grepadd|\t:grepa[dd]\tlike :grep, but append to current list\n"
"|:gui|\t\t:gu[i]\t\tstart the GUI\n"
"|:gvim|\t\t:gv[im]\t\tstart the GUI\n"
"|:hardcopy|\t:ha[rdcopy]\tsend text to the printer\n"
"|:help|\t\t:h[elp]\t\topen a help window\n"
"|:helpfind|\t:helpf[ind]\tdialog to open a help window\n"
"|:helpgrep|\t:helpg[rep]\tlike \":grep\" but searches help files\n"
"|:helptags|\t:helpt[ags]\tgenerate help tags for a directory\n"
"|:highlight|\t:hi[ghlight]\tspecify highlighting methods\n"
"|:hide|\t\t:hid[e]\t\thide current buffer for a command\n"
"|:history|\t:his[tory]\tprint a history list\n"
"|:insert|\t:i[nsert]\tinsert text\n"
"|:iabbrev|\t:ia[bbrev]\tlike \":abbrev\" but for Insert mode\n"
"|:iabclear|\t:iabc[lear]\tlike \":abclear\" but for Insert mode\n"
"|:if|\t\t:if\t\texecute commands when condition met\n"
"|:ijump|\t:ij[ump]\tjump to definition of identifier\n"
"|:ilist|\t:il[ist]\tlist lines where identifier matches\n"
"|:imap|\t\t:im[ap]\t\tlike \":map\" but for Insert mode\n"
"|:imapclear|\t:imapc[lear]\tlike \":mapclear\" but for Insert mode\n"
"|:imenu|\t:ime[nu]\tadd menu for Insert mode\n"
"|:inoremap|\t:ino[remap]\tlike \":noremap\" but for Insert mode\n"
"|:inoreabbrev|\t:inorea[bbrev]\tlike \":noreabbrev\" but for Insert mode\n"
"|:inoremenu|\t:inoreme[nu]\tlike \":noremenu\" but for Insert mode\n"
"|:intro|\t:int[ro]\tprint the introductory message\n"
"|:isearch|\t:is[earch]\tlist one line where identifier matches\n"
"|:isplit|\t:isp[lit]\tsplit window and jump to definition of\n"
"\t\t\t\tidentifier\n"
"|:iunmap|\t:iu[nmap]\tlike \":unmap\" but for Insert mode\n"
"|:iunabbrev|\t:iuna[bbrev]\tlike \":unabbrev\" but for Insert mode\n"
"|:iunmenu|\t:iunme[nu]\tremove menu for Insert mode\n"
"|:join|\t\t:j[oin]\t\tjoin lines\n"
"|:jumps|\t:ju[mps]\tprint the jump list\n"
"|:k|\t\t:k\t\tset a mark\n"
"|:keepalt|\t:keepa[lt]\tfollowing command keeps the alternate file\n"
"|:keepmarks|\t:kee[pmarks]\tfollowing command keeps marks where they are\n"
"|:keepjumps|\t:keepj[jumps]\tfollowing command keeps jumplist and marks\n"
"|:lNext|\t:lN[ext]\tgo to previous entry in location list\n"
"|:lNfile|\t:lNf[ile]\tgo to last entry in previous file\n"
"|:list|\t\t:l[ist]\t\tprint lines\n"
"|:laddexpr|\t:lad[dexpr]\tadd locations from expr\n"
"|:laddbuffer|\t:laddb[uffer]\tadd locations from buffer\n"
"|:laddfile|\t:laddf[ile]\tadd locations to current location list\n"
"|:last|\t\t:la[st]\t\tgo to the last file in the argument list\n"
"|:language|\t:lan[guage]\tset the language (locale)\n"
"|:later|\t:lat[er]\tgo to newer change, redo\n"
"|:lbuffer|\t:lb[uffer]\tparse locations and jump to first location\n"
"|:lcd|\t\t:lc[d]\t\tchange directory locally\n"
"|:lchdir|\t:lch[dir]\tchange directory locally\n"
"|:lclose|\t:lcl[ose]\tclose location window\n"
"|:lcscope|\t:lcs[cope]      like \":cscope\" but uses location list\n"
"|:left|\t\t:le[ft]\t\tleft align lines\n"
"|:leftabove|\t:lefta[bove]\tmake split window appear left or above\n"
"|:let|\t\t:let\t\tassign a value to a variable or option\n"
"|:lexpr|\t:lex[pr]\tread locations from expr and jump to first\n"
"|:lfile|\t:lf[ile]\tread file with locations and jump to first\n"
"|:lfirst|\t:lfir[st]\tgo to the specified location, default first one\n"
"|:lgetbuffer|\t:lgetb[uffer]\tget locations from buffer\n"
"|:lgetexpr|\t:lgete[xpr]\tget locations from expr\n"
"|:lgetfile|\t:lg[etfile]\tread file with locations\n"
"|:lgrep|\t:lgr[ep]\trun 'grepprg' and jump to first match\n"
"|:lgrepadd|\t:lgrepa[dd]\tlike :grep, but append to current list\n"
"|:lhelpgrep|\t:lh[elpgrep]\tlike \":helpgrep\" but uses location list\n"
"|:ll|\t\t:ll\t\tgo to specific location\n"
"|:llast|\t:lla[st]\tgo to the specified location, default last one\n"
"|:llist|\t:lli[st]\tlist all locations\n"
"|:lmake|\t:lmak[e]\texecute external command 'makeprg' and parse\n"
"\t\t\t\terror messages\n"
"|:lmap|\t\t:lm[ap]\t\tlike \":map!\" but includes Lang-Arg mode\n"
"|:lmapclear|\t:lmapc[lear]\tlike \":mapclear!\" but includes Lang-Arg mode\n"
"|:lnext|\t:lne[xt]\tgo to next location\n"
"|:lnewer|\t:lnew[er]\tgo to newer location list\n"
"|:lnfile|\t:lnf[ile]\tgo to first location in next file\n"
"|:lnoremap|\t:ln[oremap]\tlike \":noremap!\" but includes Lang-Arg mode\n"
"|:loadkeymap|\t:loadk[eymap]\tload the following keymaps until EOF\n"
"|:loadview|\t:lo[adview]\tload view for current window from a file\n"
"|:lockmarks|\t:loc[kmarks]\tfollowing command keeps marks where they are\n"
"|:lockvar|\t:lockv[ar]\tlock variables\n"
"|:lolder|\t:lol[der]\tgo to older location list\n"
"|:lopen|\t:lope[n]\topen location window\n"
"|:lprevious|\t:lp[revious]\tgo to previous location\n"
"|:lpfile|\t:lpf[ile]\tgo to last location in previous file\n"
"|:lrewind|\t:lr[ewind]\tgo to the specified location, default first one\n"
"|:ls|\t\t:ls\t\tlist all buffers\n"
"|:ltag|\t\t:lt[ag]\t\tjump to tag and add matching tags to the\n"
"\t\t\t\tlocation list\n"
"|:lunmap|\t:lu[nmap]\tlike \":unmap!\" but includes Lang-Arg mode\n"
"|:lvimgrep|\t:lv[imgrep]\tsearch for pattern in files\n"
"|:lvimgrepadd|\t:lvimgrepa[dd]\tlike :vimgrep, but append to current list\n"
"|:lwindow|\t:lw[indow]\topen or close location window\n"
"|:move|\t\t:m[ove]\t\tmove lines\n"
"|:mark|\t\t:ma[rk]\t\tset a mark\n"
"|:make|\t\t:mak[e]\t\texecute external command 'makeprg' and parse\n"
"\t\t\t\terror messages\n"
"|:map|\t\t:map\t\tshow or enter a mapping\n"
"|:mapclear|\t:mapc[lear]\tclear all mappings for Normal and Visual mode\n"
"|:marks|\t:marks\t\tlist all marks\n"
"|:match|\t:mat[ch]\tdefine a match to highlight\n"
"|:menu|\t\t:me[nu]\t\tenter a new menu item\n"
"|:menutranslate| :menut[ranslate] add a menu translation item\n"
"|:messages|\t:mes[sages]\tview previously displayed messages\n"
"|:mkexrc|\t:mk[exrc]\twrite current mappings and settings to a file\n"
"|:mksession|\t:mks[ession]\twrite session info to a file\n"
"|:mkspell|\t:mksp[ell]\tproduce .spl spell file\n"
"|:mkvimrc|\t:mkv[imrc]\twrite current mappings and settings to a file\n"
"|:mkview|\t:mkvie[w]\twrite view of current window to a file\n"
"|:mode|\t\t:mod[e]\t\tshow or change the screen mode\n"
"|:mzscheme|\t:mz[scheme]\texecute MzScheme command\n"
"|:mzfile|\t:mzf[ile]\texecute MzScheme script file\n"
"|:nbkey|\t:nb[key]\tpass a key to Netbeans\n"
"|:next|\t\t:n[ext]\t\tgo to next file in the argument list\n"
"|:new|\t\t:new\t\tcreate a new empty window\n"
"|:nmap|\t\t:nm[ap]\t\tlike \":map\" but for Normal mode\n"
"|:nmapclear|\t:nmapc[lear]\tclear all mappings for Normal mode\n"
"|:nmenu|\t:nme[nu]\tadd menu for Normal mode\n"
"|:nnoremap|\t:nn[oremap]\tlike \":noremap\" but for Normal mode\n"
"|:nnoremenu|\t:nnoreme[nu]\tlike \":noremenu\" but for Normal mode\n"
"|:noautocmd|\t:noa[utocmd]\tfollowing command don't trigger autocommands\n"
"|:noremap|\t:no[remap]\tenter a mapping that will not be remapped\n"
"|:nohlsearch|\t:noh[lsearch]\tsuspend 'hlsearch' highlighting\n"
"|:noreabbrev|\t:norea[bbrev]\tenter an abbreviation that will not be\n"
"\t\t\t\tremapped\n"
"|:noremenu|\t:noreme[nu]\tenter a menu that will not be remapped\n"
"|:normal|\t:norm[al]\texecute Normal mode commands\n"
"|:number|\t:nu[mber]\tprint lines with line number\n"
"|:nunmap|\t:nun[map]\tlike \":unmap\" but for Normal mode\n"
"|:nunmenu|\t:nunme[nu]\tremove menu for Normal mode\n"
"|:open|\t\t:o[pen]\t\tstart open mode (not implemented)\n"
"|:omap|\t\t:om[ap]\t\tlike \":map\" but for Operator-pending mode\n"
"|:omapclear|\t:omapc[lear]\tremove all mappings for Operator-pending mode\n"
"|:omenu|\t:ome[nu]\tadd menu for Operator-pending mode\n"
"|:only|\t\t:on[ly]\t\tclose all windows except the current one\n"
"|:onoremap|\t:ono[remap]\tlike \":noremap\" but for Operator-pending mode\n"
"|:onoremenu|\t:onoreme[nu]\tlike \":noremenu\" but for Operator-pending mode\n"
"|:options|\t:opt[ions]\topen the options-window\n"
"|:ounmap|\t:ou[nmap]\tlike \":unmap\" but for Operator-pending mode\n"
"|:ounmenu|\t:ounme[nu]\tremove menu for Operator-pending mode\n"
"|:pclose|\t:pc[lose]\tclose preview window\n"
"|:pedit|\t:ped[it]\tedit file in the preview window\n"
"|:perl|\t\t:pe[rl]\t\texecute Perl command\n"
"|:print|\t:p[rint]\tprint lines\n"
"|:profdel|\t:profd[el]\tstop profiling a function or script\n"
"|:profile|\t:prof[ile]\tprofiling functions and scripts\n"
"|:promptfind|\t:pro[mptfind]\topen GUI dialog for searching\n"
"|:promptrepl|\t:promptr[epl]\topen GUI dialog for search/replace\n"
"|:perldo|\t:perld[o]\texecute Perl command for each line\n"
"|:pop|\t\t:po[p]\t\tjump to older entry in tag stack\n"
"|:popup|\t:pop[up]\tpopup a menu by name\n"
"|:ppop|\t\t:pp[op]\t\t\":pop\" in preview window\n"
"|:preserve|\t:pre[serve]\twrite all text to swap file\n"
"|:previous|\t:prev[ious]\tgo to previous file in argument list\n"
"|:psearch|\t:ps[earch]\tlike \":ijump\" but shows match in preview window\n"
"|:ptag|\t\t:pt[ag]\t\tshow tag in preview window\n"
"|:ptNext|\t:ptN[ext]\t|:tNext| in preview window\n"
"|:ptfirst|\t:ptf[irst]\t|:trewind| in preview window\n"
"|:ptjump|\t:ptj[ump]\t|:tjump| and show tag in preview window\n"
"|:ptlast|\t:ptl[ast]\t|:tlast| in preview window\n"
"|:ptnext|\t:ptn[ext]\t|:tnext| in preview window\n"
"|:ptprevious|\t:ptp[revious]\t|:tprevious| in preview window\n"
"|:ptrewind|\t:ptr[ewind]\t|:trewind| in preview window\n"
"|:ptselect|\t:pts[elect]\t|:tselect| and show tag in preview window\n"
"|:put|\t\t:pu[t]\t\tinsert contents of register in the text\n"
"|:pwd|\t\t:pw[d]\t\tprint current directory\n"
"|:python|\t:py[thon]\texecute Python command\n"
"|:pyfile|\t:pyf[ile]\texecute Python script file\n"
"|:quit|\t\t:q[uit]\t\tquit current window (when one window quit Vim)\n"
"|:quitall|\t:quita[ll]\tquit Vim\n"
"|:qall|\t\t:qa[ll]\t\tquit Vim\n"
"|:read|\t\t:r[ead]\t\tread file into the text\n"
"|:recover|\t:rec[over]\trecover a file from a swap file\n"
"|:redo|\t\t:red[o]\t\tredo one undone change\n"
"|:redir|\t:redi[r]\tredirect messages to a file or register\n"
"|:redraw|\t:redr[aw]\tforce a redraw of the display\n"
"|:redrawstatus|\t:redraws[tatus]\tforce a redraw of the status line(s)\n"
"|:registers|\t:reg[isters]\tdisplay the contents of registers\n"
"|:resize|\t:res[ize]\tchange current window height\n"
"|:retab|\t:ret[ab]\tchange tab size\n"
"|:return|\t:retu[rn]\treturn from a user function\n"
"|:rewind|\t:rew[ind]\tgo to the first file in the argument list\n"
"|:right|\t:ri[ght]\tright align text\n"
"|:rightbelow|\t:rightb[elow]\tmake split window appear right or below\n"
"|:ruby|\t\t:rub[y]\t\texecute Ruby command\n"
"|:rubydo|\t:rubyd[o]\texecute Ruby command for each line\n"
"|:rubyfile|\t:rubyf[ile]\texecute Ruby script file\n"
"|:runtime|\t:ru[ntime]\tsource vim scripts in 'runtimepath'\n"
"|:rviminfo|\t:rv[iminfo]\tread from viminfo file\n"
"|:substitute|\t:s[ubstitute]\tfind and replace text\n"
"|:sNext|\t:sN[ext]\tsplit window and go to previous file in\n"
"\t\t\t\targument list\n"
"|:sandbox|\t:san[dbox]\texecute a command in the sandbox\n"
"|:sargument|\t:sa[rgument]\tsplit window and go to specific file in\n"
"\t\t\t\targument list\n"
"|:sall|\t\t:sal[l]\t\topen a window for each file in argument list\n"
"|:saveas|\t:sav[eas]\tsave file under another name.\n"
"|:sbuffer|\t:sb[uffer]\tsplit window and go to specific file in the\n"
"\t\t\t\tbuffer list\n"
"|:sbNext|\t:sbN[ext]\tsplit window and go to previous file in the\n"
"\t\t\t\tbuffer list\n"
"|:sball|\t:sba[ll]\topen a window for each file in the buffer list\n"
"|:sbfirst|\t:sbf[irst]\tsplit window and go to first file in the\n"
"\t\t\t\tbuffer list\n"
"|:sblast|\t:sbl[ast]\tsplit window and go to last file in buffer\n"
"\t\t\t\tlist\n"
"|:sbmodified|\t:sbm[odified]\tsplit window and go to modified file in the\n"
"\t\t\t\tbuffer list\n"
"|:sbnext|\t:sbn[ext]\tsplit window and go to next file in the buffer\n"
"\t\t\t\tlist\n"
"|:sbprevious|\t:sbp[revious]\tsplit window and go to previous file in the\n"
"\t\t\t\tbuffer list\n"
"|:sbrewind|\t:sbr[ewind]\tsplit window and go to first file in the\n"
"\t\t\t\tbuffer list\n"
"|:scriptnames|\t:scrip[tnames]\tlist names of all sourced Vim scripts\n"
"|:scriptencoding| :scripte[ncoding]\tencoding used in sourced Vim script\n"
"|:scscope|\t:scs[cope]\tsplit window and execute cscope command\n"
"|:set|\t\t:se[t]\t\tshow or set options\n"
"|:setfiletype|\t:setf[iletype]\tset 'filetype', unless it was set already\n"
"|:setglobal|\t:setg[lobal]\tshow global values of options\n"
"|:setlocal|\t:setl[ocal]\tshow or set options locally\n"
"|:sfind|\t:sf[ind]\tsplit current window and edit file in 'path'\n"
"|:sfirst|\t:sfir[st]\tsplit window and go to first file in the\n"
"\t\t\t\targument list\n"
"|:shell|\t:sh[ell]\tescape to a shell\n"
"|:simalt|\t:sim[alt]\tWin32 GUI: simulate Windows ALT key\n"
"|:sign|\t\t:sig[n]\t\tmanipulate signs\n"
"|:silent|\t:sil[ent]\tRun a command silently\n"
"|:sleep|\t:sl[eep]\tdo nothing for a few seconds\n"
"|:slast|\t:sla[st]\tsplit window and go to last file in the\n"
"\t\t\t\targument list\n"
"|:smagic|\t:sm[agic]\t:substitute with 'magic'\n"
"|:smap|\t\t:sma[p]\t\tlike \":map\" but for Select mode\n"
"|:smapclear|\t:smapc[lear]\tremove all mappings for Select mode\n"
"|:smenu|\t:sme[nu]\tadd menu for Select mode\n"
"|:snext|\t:sn[ext]\tsplit window and go to next file in the\n"
"\t\t\t\targument list\n"
"|:sniff|\t:sni[ff]\tsend request to sniff\n"
"|:snomagic|\t:sno[magic]\t:substitute with 'nomagic'\n"
"|:snoremap|\t:snor[emap]\tlike \":noremap\" but for Select mode\n"
"|:snoremenu|\t:snoreme[nu]\tlike \":noremenu\" but for Select mode\n"
"|:sort|\t\t:sor[t]\t\tsort lines\n"
"|:source|\t:so[urce]\tread Vim or Ex commands from a file\n"
"|:spelldump|\t:spelld[ump]\tsplit window and fill with all correct words\n"
"|:spellgood|\t:spe[llgood]\tadd good word for spelling\n"
"|:spellinfo|\t:spelli[nfo]\tshow info about loaded spell files\n"
"|:spellrepall|\t:spellr[epall]\treplace all bad words like last |z=|\n"
"|:spellundo|\t:spellu[ndo]\tremove good or bad word\n"
"|:spellwrong|\t:spellw[rong]\tadd spelling mistake\n"
"|:split|\t:sp[lit]\tsplit current window\n"
"|:sprevious|\t:spr[evious]\tsplit window and go to previous file in the\n"
"\t\t\t\targument list\n"
"|:srewind|\t:sre[wind]\tsplit window and go to first file in the\n"
"\t\t\t\targument list\n"
"|:stop|\t\t:st[op]\t\tsuspend the editor or escape to a shell\n"
"|:stag|\t\t:sta[g]\t\tsplit window and jump to a tag\n"
"|:startinsert|\t:star[tinsert]\tstart Insert mode\n"
"|:startgreplace| :startg[replace] start Virtual Replace mode\n"
"|:startreplace|\t:startr[eplace]\tstart Replace mode\n"
"|:stopinsert|\t:stopi[nsert]\tstop Insert mode\n"
"|:stjump|\t:stj[ump]\tdo \":tjump\" and split window\n"
"|:stselect|\t:sts[elect]\tdo \":tselect\" and split window\n"
"|:sunhide|\t:sun[hide]\tsame as \":unhide\"\n"
"|:sunmap|\t:sunm[ap]\tlike \":unmap\" but for Select mode\n"
"|:sunmenu|\t:sunme[nu]\tremove menu for Select mode\n"
"|:suspend|\t:sus[pend]\tsame as \":stop\"\n"
"|:sview|\t:sv[iew]\tsplit window and edit file read-only\n"
"|:swapname|\t:sw[apname]\tshow the name of the current swap file\n"
"|:syntax|\t:sy[ntax]\tsyntax highlighting\n"
"|:syncbind|\t:sync[bind]\tsync scroll binding\n"
"|:t|\t\t:t\t\tsame as \":copy\"\n"
"|:tNext|\t:tN[ext]\tjump to previous matching tag\n"
"|:tabNext|\t:tabN[ext]\tgo to previous tab page\n"
"|:tabclose|\t:tabc[lose]\tclose current tab page\n"
"|:tabdo|\t:tabdo\t\texecute command in each tab page\n"
"|:tabedit|\t:tabe[dit]\tedit a file in a new tab page\n"
"|:tabfind|\t:tabf[ind]\tfind file in 'path', edit it in a new tab page\n"
"|:tabfirst|\t:tabfir[st]\tgot to first tab page\n"
"|:tablast|\t:tabl[ast]\tgot to last tab page\n"
"|:tabmove|\t:tabm[ove]\tmove tab page to other position\n"
"|:tabnew|\t:tabnew\t\tedit a file in a new tab page\n"
"|:tabnext|\t:tabn[ext]\tgo to next tab page\n"
"|:tabonly|\t:tabo[nly]\tclose all tab pages except the current one\n"
"|:tabprevious|\t:tabp[revious]\tgo to previous tab page\n"
"|:tabrewind|\t:tabr[ewind]\tgot to first tab page\n"
"|:tabs|\t\t:tabs\t\tlist the tab pages and what they contain\n"
"|:tab|\t\t:tab\t\tcreate new tab when opening new window\n"
"|:tag|\t\t:ta[g]\t\tjump to tag\n"
"|:tags|\t\t:tags\t\tshow the contents of the tag stack\n"
"|:tcl|\t\t:tc[l]\t\texecute Tcl command\n"
"|:tcldo|\t:tcld[o]\texecute Tcl command for each line\n"
"|:tclfile|\t:tclf[ile]\texecute Tcl script file\n"
"|:tearoff|\t:te[aroff]\ttear-off a menu\n"
"|:tfirst|\t:tf[irst]\tjump to first matching tag\n"
"|:throw|\t:th[row]\tthrow an exception\n"
"|:tjump|\t:tj[ump]\tlike \":tselect\", but jump directly when there\n"
"\t\t\t\tis only one match\n"
"|:tlast|\t:tl[ast]\tjump to last matching tag\n"
"|:tmenu|\t:tm[enu]\tdefine menu tooltip\n"
"|:tnext|\t:tn[ext]\tjump to next matching tag\n"
"|:topleft|\t:to[pleft]\tmake split window appear at top or far left\n"
"|:tprevious|\t:tp[revious]\tjump to previous matching tag\n"
"|:trewind|\t:tr[ewind]\tjump to first matching tag\n"
"|:try|\t\t:try\t\texecute commands, abort on error or exception\n"
"|:tselect|\t:ts[elect]\tlist matching tags and select one\n"
"|:tunmenu|\t:tu[nmenu]\tremove menu tooltip\n"
"|:undo|\t\t:u[ndo]\t\tundo last change(s)\n"
"|:undojoin|\t:undoj[oin]\tjoin next change with previous undo block\n"
"|:undolist|\t:undol[ist]\tlist leafs of the undo tree\n"
"|:unabbreviate|\t:una[bbreviate]\tremove abbreviation\n"
"|:unhide|\t:unh[ide]\topen a window for each loaded file in the\n"
"\t\t\t\tbuffer list\n"
"|:unlet|\t:unl[et]\tdelete variable\n"
"|:unlockvar|\t:unlo[ckvar]\tunlock variables\n"
"|:unmap|\t:unm[ap]\tremove mapping\n"
"|:unmenu|\t:unme[nu]\tremove menu\n"
"|:update|\t:up[date]\twrite buffer if modified\n"
"|:vglobal|\t:v[global]\texecute commands for not matching lines\n"
"|:version|\t:ve[rsion]\tprint version number and other info\n"
"|:verbose|\t:verb[ose]\texecute command with 'verbose' set\n"
"|:vertical|\t:vert[ical]\tmake following command split vertically\n"
"|:vimgrep|\t:vim[grep]\tsearch for pattern in files\n"
"|:vimgrepadd|\t:vimgrepa[dd]\tlike :vimgrep, but append to current list\n"
"|:visual|\t:vi[sual]\tsame as \":edit\", but turns off \"Ex\" mode\n"
"|:viusage|\t:viu[sage]\toverview of Normal mode commands\n"
"|:view|\t\t:vie[w]\t\tedit a file read-only\n"
"|:vmap|\t\t:vm[ap]\t\tlike \":map\" but for Visual+Select mode\n"
"|:vmapclear|\t:vmapc[lear]\tremove all mappings for Visual+Select mode\n"
"|:vmenu|\t:vme[nu]\tadd menu for Visual+Select mode\n"
"|:vnew|\t\t:vne[w]\t\tcreate a new empty window, vertically split\n"
"|:vnoremap|\t:vn[oremap]\tlike \":noremap\" but for Visual+Select mode\n"
"|:vnoremenu|\t:vnoreme[nu]\tlike \":noremenu\" but for Visual+Select mode\n"
"|:vsplit|\t:vs[plit]\tsplit current window vertically\n"
"|:vunmap|\t:vu[nmap]\tlike \":unmap\" but for Visual+Select mode\n"
"|:vunmenu|\t:vunme[nu]\tremove menu for Visual+Select mode\n"
"|:windo|\t:windo\t\texecute command in each window\n"
"|:write|\t:w[rite]\twrite to a file\n"
"|:wNext|\t:wN[ext]\twrite to a file and go to previous file in\n"
"\t\t\t\targument list\n"
"|:wall|\t\t:wa[ll]\t\twrite all (changed) buffers\n"
"|:while|\t:wh[ile]\texecute loop for as long as condition met\n"
"|:winsize|\t:wi[nsize]\tget or set window size (obsolete)\n"
"|:wincmd|\t:winc[md]\texecute a Window (CTRL-W) command\n"
"|:winpos|\t:winp[os]\tget or set window position\n"
"|:wnext|\t:wn[ext]\twrite to a file and go to next file in\n"
"\t\t\t\targument list\n"
"|:wprevious|\t:wp[revious]\twrite to a file and go to previous file in\n"
"\t\t\t\targument list\n"
"|:wq|\t\t:wq\t\twrite to a file and quit window or Vim\n"
"|:wqall|\t:wqa[ll]\twrite all changed buffers and quit Vim\n"
"|:wsverb|\t:ws[verb]\tpass the verb to workshop over IPC\n"
"|:wviminfo|\t:wv[iminfo]\twrite to viminfo file\n"
"|:xit|\t\t:x[it]\t\twrite if buffer changed and quit window or Vim\n"
"|:xall|\t\t:xa[ll]\t\tsame as \":wqall\"\n"
"|:xmapclear|\t:xmapc[lear]\tremove all mappings for Visual mode\n"
"|:xmap|\t\t:xm[ap]\t\tlike \":map\" but for Visual mode\n"
"|:xmenu|\t:xme[nu]\tadd menu for Visual mode\n"
"|:xnoremap|\t:xn[oremap]\tlike \":noremap\" but for Visual mode\n"
"|:xnoremenu|\t:xnoreme[nu]\tlike \":noremenu\" but for Visual mode\n"
"|:xunmap|\t:xu[nmap]\tlike \":unmap\" but for Visual mode\n"
"|:xunmenu|\t:xunme[nu]\tremove menu for Visual mode\n"
"|:yank|\t\t:y[ank]\t\tyank lines into a register\n"
"|:z|\t\t:z\t\tprint some lines\n"
"|:~|\t\t:~\t\trepeat last \":substitute\""
msgstr ""

#: index.txt:1578
msgid " vim:tw=78:ts=8:ft=help:norl:"
msgstr ""
